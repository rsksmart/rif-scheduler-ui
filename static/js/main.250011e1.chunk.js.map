{"version":3,"sources":["assets/theme.ts","assets/Logo.tsx","shared/Layout.tsx","shared/types.ts","connect/rLogin.ts","connect/useConnector.ts","connect/NetworkLabel.tsx","schedule/StatusLabel.tsx","shared/hyphensAndCamelCaseToWords.ts","shared/shortText.ts","sdk-hooks/useTransactions.ts","shared/formatters.ts","shared/environment.ts","sdk-hooks/useProviders.ts","shared/reduceExecutionsLeft.ts","shared/localbasePersist.ts","contracts/useContracts.ts","shared/getExecutionResult.ts","schedule/History.tsx","sdk-hooks/useExecutions.ts","sdk-hooks/useExecution.ts","schedule/ExecutionButton.tsx","schedule/ExecutionInfo.tsx","shared/useDelayMount.ts","shared/LoadingCircle.tsx","schedule/cronParser/enums.ts","schedule/ColorSelector.tsx","shared/ButtonWIthLoading.tsx","schedule/ScheduleFormDialog.tsx","shared/NumberInput.tsx","schedule/cronParser/descriptions.ts","schedule/cronParser/convertToCronExpression.ts","schedule/CronButton.tsx","store/Plan.tsx","schedule/validateBeforeSchedule.ts","sdk-hooks/usePlan.ts","sdk-hooks/usePlans.ts","schedule/ScheduleForm.tsx","schedule/Schedule.tsx","store/StatusLabel.tsx","store/PlanButton.tsx","home/TasksProgress.tsx","store/Loading.tsx","store/PlansList.tsx","store/Store.tsx","contracts/AddEditContract.tsx","contracts/StoragePersistAlert.tsx","assets/illustrations/contractBolt.svg","contracts/Contracts.tsx","shared/Loading.tsx","assets/illustrations/lock.svg","connect/Connect.tsx","connect/Account.tsx","assets/illustrations/UnsupportedNetwork.tsx","connect/UnsupportedNetworkAlert.tsx","home/Contracts.tsx","sdk-hooks/getExecutionsLeftTotal.ts","home/Executions.tsx","home/Schedule.tsx","home/ScheduleHistory.tsx","home/Home.tsx","sdk-hooks/useConfirmationsNotifier.ts","App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","overrides","MuiCssBaseline","body","background","MuiCard","root","borderRadius","props","elevation","Logo","ESection","viewBox","fill","xmlns","d","useStyles","makeStyles","createStyles","flexGrow","menuButton","marginRight","spacing","logo","height","display","hideMenu","title","marginTop","marginLeft","navButtons","flex","justifyContent","gap","navButton","padding","minWidth","paddingTop","fontSize","navLabel","toolbar","width","maxWidth","paddingLeft","appBar","alignItems","backgroundColor","boxShadow","scrolled","ENetwork","menuIndexes","Home","Schedule","Store","Contracts","Account","Layout","children","location","useLocation","useScrollTrigger","disableHysteresis","threshold","classes","AppBar","position","className","Toolbar","Typography","variant","color","BottomNavigation","showLabels","value","pathname","style","BottomNavigationAction","label","icon","component","Link","to","flexDirection","paddingBottom","SupportedNetworks","RSKMainnet","RSKTestnet","NetworkName","NotSupported","NetworkExplorer","getExplorerTxLink","hash","network","explorerUrl","URL","toString","ExecutionStateDescriptions","EExecutionState","NotScheduled","Scheduled","ExecutionSuccessful","ExecutionFailed","Overdue","Refunded","Cancelled","rLogin","RLogin","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","31","supportedChains","isRLoginConnected","localStorage","getItem","useConnector","create","set","get","account","undefined","provider","signer","isLoading","isConnected","disconnect","a","clear","state","connect","rProvider","rDisconnect","Error","web3Provider","providers","Web3Provider","listAccounts","getSigner","getNetwork","removeAllListeners","chainId","handleConnectionChanges","includes","parseInt","on","accounts","info","error","console","NetworkLabel","connectedToNetwork","displayNetwork","Chip","size","border","StatusLabel","execution","isConfirmed","colorPrimary","hyphensAndCamelCaseToWords","str","arr","split","newStr","i","length","charAt","toUpperCase","slice","result","trim","replace","shortText","ETransactionStatus","address","substr","fromBigNumberToHms","secondsInput","days","div","divisor_for_hours","mod","hours","divisor_for_minutes","minutes","seconds","gt","toBigInt","formatBigNumber","price","decimals","bigNumber","BigNumber","decimalPlaces","toFormat","environment","SCHEDULER_PROVIDERS_TESTNET","process","SCHEDULER_PROVIDERS_MAINNET","CONFIRMATIONS","ER677_TOKENS_TESTNET","ER677_TOKENS_MAINNET","MINIMUM_TIME_BEFORE_EXECUTION","useProvidersStore","setProviders","useProvidersLoader","useEffect","map","index","config","contractAddress","providerOrSigner","supportedERC677Tokens","createProviderSnapshot","BIG_ZERO","from","executionsLeft","accumulatedPlans","currentPlan","add","remainingExecutions","localbaseStorage","name","db","Localbase","debug","collection","doc","data","JSON","stringify","setItem","parse","localbasePersist","storeName","blacklist","getStorage","useContracts","persist","contracts","save","contract","id","getExecutedTransaction","scheduledTxHash","window","plan","toNumber","getState","blocksProcessed","addProcess","initialBlock","offset","processing","push","getEventIfExist","executeAt","Date","getTransaction","scheduledTx","scheduledBlockNumber","blockNumber","getBlockNumber","lastBlockNumber","getBlocksRateByMinute","blocksRate","scheduledDate","fromDate","blockNumberExecuteAtMid","getEstimatedBlockNumber","blockNumberExecuteAtLow","subSeconds","blockNumberExecuteAtUpper","addSeconds","lowWindowBlock","Math","trunc","max","upperWindowBlock","min","midBlockNumber","foundedEvent","counter","running","Promise","all","runResult","find","x","fromBlockNumber","toBlockNumber","getBlock","fromBlock","toBlock","timestamp","toDate","diffInMinutes","differenceInMinutes","date","initialBlockNumber","abi","eventInterface","utils","Interface","rifSchedulerContract","Contract","executeId","getId","filterByExecutionId","filters","Executed","filterTopics","topics","getBlockWithTransactions","searchingBlock","filteredTxs","transactions","filter","toLowerCase","tx","getTransactionReceipt","receipt","log","logs","areEquals","parseLog","args","event","txHash","a1","a2","every","EHistoryOption","useTransactionsStore","register","key","changeStatus","status","errorMessage","transactionToChange","useTransactions","shallow","registerIntoStore","useMemo","Idle","Waiting","useCallback","confirmMessage","failMessage","startedAt","toISOString","useIndexedExecutionsStore","indexedExecutions","setIndexedExecution","indexedExecution","useExecutionsStore","executions","setExecution","useExecutions","registerTxWithKey","store","getExecution","contractId","providerAddress","scheduler","RIFScheduler","getPlan","providerPlanIndex","encodedFunctionCall","ABI","encodeFunctionData","contractMethod","contractFields","Execution","parseISO","executeAtISO","requestor","loadExecutions","Object","values","createExecutionSnapshot","executionSnapshot","getExecutionKey","schedule","isRecurrent","fromCronExpression","cronExpression","quantity","scheduleMany","current","scheduleKey","getExecutionScheduleKey","ref","scheduleHash","useExecution","useState","setIsConfirmed","pendingScheduleTransactions","pendingExecutionTransactions","registerTx","pendingTransactions","concat","refresh","then","snap","cancel","refund","locateResult","executedTransaction","contractInterface","parsedResult","decodeFunctionResult","join","completedTxHash","hasPendingTransactions","useRowStyles","part","row","borderLeft","borderBottom","ExecutionButton","item","onClick","enqueueSnackbar","useSnackbar","setIsLoading","handleUpdateStatusClick","message","getMessageFromCode","code","ListItem","button","ListItemText","secondary","formatDistanceToNow","addSuffix","paddingRight","Hidden","xsDown","Divider","orientation","flexItem","ListItemSecondaryAction","IconButton","edge","disabled","rowStyles","ExecutionInfo","useTheme","fullScreen","useMediaQuery","breakpoints","down","open","setOpen","scheduledTxExplorerAddressUrl","completedTxExplorerAddressUrl","handleCopy","textToCopy","navigator","clipboard","writeText","autoHideDuration","handleCancelClick","handleRefundClick","Dialog","fullWidth","onClose","DialogTitle","DialogContent","TableContainer","Paper","action","hover","Table","aria-label","TableBody","StyledTableRow","StrongTableCell","scope","RegularTableCell","align","target","href","rel","format","gasLimit","DialogActions","Button","withStyles","head","common","black","white","TableCell","fontWeight","TableRow","useDelayMount","delay","mounted","setMounted","useLayoutEffect","delayedMount","setTimeout","clearTimeout","useCircleStyles","bottom","grey","type","top","animationDuration","left","circle","strokeLinecap","CustomCircularProgress","CircularProgress","thickness","disableShrink","LoadingCircle","memo","loadingResult","ECronArrayDefinition","ECronFieldOption","EMonths","EMidday","EWeekDay","defaultDate","getFullYear","getMonth","getDate","PAGE_SIZE","History","page","setPage","refDate","setRefDate","option","Month","Year","defaultHistoryOption","historyOption","setHistoryOption","itemsGrouped","sort","firstItem","nextItem","compareAsc","reduce","prev","groupId","group","handleIncrement","inc","addMonths","addYears","handleClear","groupedEntries","entries","Card","borderTopLeftRadius","borderTopRightRadius","CardHeader","disableTypography","flexWrap","FormControl","hiddenLabel","Select","onChange","MenuItem","CardContent","items","List","subheader","ListSubheader","RedRadio","red","checked","Radio","TealRadio","teal","YellowRadio","yellow","LightBlueRadio","lightBlue","OrangeRadio","orange","ColorSelector","selectedValue","setSelectedValue","handleChange","textAlign","whiteSpace","inputProps","wrapper","margin","buttonProgress","blue","ButtonWithLoading","ScheduleFormDialog","alerts","onConfirm","hasErrors","severity","alert","Alert","actionLabel","actionLink","RouterLink","NumberInput","inputRef","other","getInputRef","onValueChange","thousandSeparator","isNumericString","allowNegative","decimalScale","prefix","WEEK_LIST","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","WEEK_LABEL","MONTHS_LIST","January","February","March","April","May","June","July","August","September","October","November","December","MONTHS_LABEL","cronConverter","Cron","CRON_DEFAULT","DEFAULT_CRON_FIELD","Day","hour","minute","midday","AM","weekDays","months","monthDays","expression","description","cronstrue","verbose","convertToCronExpression","field","Custom","currentValueArray","Hour","PM","Minute","arrayFromWithStep","Array","keys","DayWeek","Week","weeksRepetitionStart","currentValue","acc","curVal","fromArray","array","step","EApprovalStatus","dialogPaper","CronButton","fields","setFields","cronFieldOptions","repetition","getCronFieldOptions","cronError","setCronError","handleClose","handleFieldChange","fieldName","newValue","cron","handleEveryIncrement","increment","handleMonthDaysChange","day","handleMonthsChange","month","scroll","paper","aria-labelledby","main","contrastText","minHeight","TextField","InputProps","inputComponent","startAdornment","InputAdornment","endAdornment","week","clickable","padStart","reverse","helperText","validateBeforeSchedule","scheduleItem","myAccountAddress","valueToTransfer","executionsQuantity","cronQuantity","getRemainingExecutions","gte","contractAction","estimateGas","estimatedGas","isInsidePlanGasLimit","minimumDate","cronFields","executionsIds","createPlanSnapshot","isActive","token","tokenDecimals","symbol","tokenSymbol","tokenType","getType","pricePerExecution","usePlansStore","plans","setPlan","usePlans","loadPlans","getPlans","forEach","borderBottomLeftRadius","borderBottomRightRadius","divider","DEFAULT_FIELDS","ScheduleForm","setAlerts","cronFieldFocused","setCronFieldFocused","handleContractFieldsChange","newFields","handleCronQuantityIncrement","contractActions","contractInputs","inputs","selectedProvider","validateForm","isValid","isValidRecurrence","isContractFieldsValid","handleSchedule","isFormValid","selectedContract","handleScheduleAndSave","DateFnsUtils","FormControlLabel","marginBottom","control","Switch","inputVariant","KeyboardButtonProps","CustomTooltip","onFocus","onBlur","textOverflow","overflow","InputLabel","labelId","method","CardActions","DisplayPlansMenu","tooltip","Tooltip","purchasing","active","inactive","classStatus","PlanButton","ETask","Plan","getPlanKey","verifyApproval","amount","mul","needsApproval","approve","purchase","usePlan","buyingExecutions","setBuyingExecutions","TokenType","ERC20","verify","approved","approvalStatus","setApprovalStatus","handleBuyingExecutionsIncrement","prevQuantity","handleBuyClick","approvalResult","verified","BigTableCell","BorderLinearProgress","bar","LinearProgress","Loading","expanderHeading","typography","pxToRem","expanderSecondaryHeading","text","expanderRoot","content","PlansList","expandedFixed","expanded","setExpanded","Accordion","AccordionSummary","expandIcon","aria-controls","cursor","AccordionDetails","AddEditContract","hideButton","initialFields","endIcon","autoFocus","multiline","rows","anonymous","indexed","internalType","outputs","stateMutability","StoragePersistAlert","isPersistStorageAvailable","storage","showAlert","setShowAlert","enableClicked","setEnableClicked","persisted","handleEnable","isPersisted","ContractButton","CardActionArea","contractSvg","backgroundPosition","backgroundSize","gutterBottom","editing","setEditing","networkContracts","gridTemplateColumns","gridAutoRows","gridGap","Connect","history","useHistory","handleConnect","wait","ms","resolve","timeout","p","race","backgroundImage","lockSvg","backgroundRepeat","overflowEllipsis","ListItemIcon","smUp","UnsupportedNetwork","data-name","cx","cy","r","UnsupportedNetworkAlert","avatar","colors","blueGrey","rest","Grid","container","justify","Avatar","getExecutionsLeftTotal","total","remainingExecution","Executions","setExecutionsLeft","networkScheduledExecutions","ScheduleHistory","avatarReady","green","TASKS","link","linkLabel","TasksProgress","totalTasks","currentTask","ReadyToSchedule","lte","PurchaseExecutions","RegisterContracts","Box","mt","enqueuedTxs","useConfirmationsNotifier","onConfirmed","onCompleted","onFailed","waitForTransaction","catch","finally","confirmationsNotifier","Confirmed","_","Failed","Routes","exact","path","ConnectedRoute","Component","render","App","notistackRef","useRef","ThemeProvider","CssBaseline","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","StrictMode","document","getElementById"],"mappings":"0OA4BeA,EAzBDC,YAAe,CAC3BC,QAAS,CACPC,aAEFC,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJC,WAAY,wBAIlBC,QAAS,CACPC,KAAM,CACJC,aAAc,MAIpBC,MAAO,CACLH,QAAS,CACPI,UAAW,M,4ECaFC,IC4CVC,ED5CUD,EApCf,SAAcF,GACZ,OACE,8CACEI,QAAQ,cACRC,KAAK,OACLC,MAAM,8BACFN,GAJN,cAME,sBACEO,EAAE,oLACFF,KAAK,SAEP,sBACEE,EAAE,2DACFF,KAAK,YAEP,sBACEE,EAAE,qDACFF,KAAK,YAEP,sBACEE,EAAE,8DACFF,KAAK,YAEP,sBACEE,EAAE,qEACFF,KAAK,YAEP,sBACEE,EAAE,+qHACFF,KAAK,c,+MCNPG,EAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJa,SAAU,GAEZC,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,IAE7BC,KAAM,kBAAwB,CAC5BC,OAAQ,GACR,4BAA6B,CAC3BC,QAHE,EAAGC,SAGe,UAAY,UAGpCC,MAAO,kBAAwB,CAC7BC,UAAW,EACXC,WAAY,EACZV,SAAU,EACV,4BAA6B,CAC3BM,QALG,EAAGC,SAKc,UAAY,UAGpCI,WAAY,CACVL,QAAS,OACTM,KAAM,EACNC,eAAgB,WAChBC,IAAK,OAEPC,UAAW,CACTC,QAAS,EACTC,SAAU,GACVC,WAAY,iBACZC,SAAU,sBAEZC,SAAU,CACRD,SAAU,sBAEZE,QAAS,CACPf,QAAS,OACTM,KAAM,EACNU,MAAO,OACPC,SAAU,IACVP,QAAS,EACTQ,YAAa,IAEfC,OAAQ,kBAAmB,CACzBnB,QAAS,OACTM,KAAM,EACNc,WAAY,SACZC,gBAAiB,UACjBX,QAAS,EACTY,UANM,EAAGC,SAMa,qCAAuC,e,SAK9DrC,O,eAAAA,I,uBAAAA,I,iBAAAA,I,yBAAAA,I,sBAAAA,M,KAQL,I,MCtFYsC,EDsFNC,EAAyC,CAC7C,IAAKvC,EAASwC,KACd,YAAaxC,EAASyC,SACtB,SAAUzC,EAAS0C,MACnB,aAAc1C,EAAS2C,UACvB,WAAY3C,EAAS4C,SAmIRC,GAhIkC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAU/B,EAAe,EAAfA,SACtDgC,EAAWC,cACXX,EAAWY,YAAiB,CAChCC,mBAAmB,EACnBC,UAAW,IAEPC,EAAU/C,EAAU,CAAEU,WAAUsB,aAEtC,OACE,qCACE,cAACgB,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQnB,OAAQnC,UAAW,EAAhE,SACE,eAAC0D,EAAA,EAAD,CAASD,UAAWH,EAAQvB,QAA5B,UACE,cAAC,EAAD,CAAM0B,UAAWH,EAAQxC,OACzB,cAAC6C,EAAA,EAAD,CACEC,QAAQ,KACRH,UAAWH,EAAQpC,MACnB2C,MAAM,cAHR,wBAOE5C,GACA,qBAAKwC,UAAWH,EAAQjC,WAAxB,SACE,eAACyC,EAAA,EAAD,CACEC,YAAU,EACVC,MAAOvB,EAAYQ,EAASgB,UAC5BC,MAAO,CAAEvE,WAAY,eAHvB,UAKE,cAACwE,EAAA,EAAD,CACEC,MAAM,OACNC,KACE5B,EAAYQ,EAASgB,YAAc/D,EAASwC,KAC1C,cAAC,IAAD,IAEA,cAAC,IAAD,IAGJ4B,UAAWC,IACXjB,QAAS,CACPzD,KAAMyD,EAAQ7B,UACd2C,MAAOd,EAAQxB,UAEjB0C,GAAG,MAEL,cAACL,EAAA,EAAD,CACEC,MAAM,WACNC,KACE5B,EAAYQ,EAASgB,YAAc/D,EAASyC,SAC1C,cAAC,IAAD,IAEA,cAAC,IAAD,IAGJ2B,UAAWC,IACXjB,QAAS,CACPzD,KAAMyD,EAAQ7B,UACd2C,MAAOd,EAAQxB,UAEjB0C,GAAG,cAEL,cAACL,EAAA,EAAD,CACEC,MAAM,QACNC,KACE5B,EAAYQ,EAASgB,YAAc/D,EAAS0C,MAC1C,cAAC,IAAD,IAEA,cAAC,IAAD,IAGJ0B,UAAWC,IACXjB,QAAS,CACPzD,KAAMyD,EAAQ7B,UACd2C,MAAOd,EAAQxB,UAEjB0C,GAAG,WAEL,cAACL,EAAA,EAAD,CACEC,MAAM,YACNC,KACE5B,EAAYQ,EAASgB,YAAc/D,EAAS2C,UAC1C,cAAC,IAAD,IAEA,cAAC,IAAD,IAGJyB,UAAWC,IACXjB,QAAS,CACPzD,KAAMyD,EAAQ7B,UACd2C,MAAOd,EAAQxB,UAEjB0C,GAAG,eAEL,cAACL,EAAA,EAAD,CACEC,MAAM,UACNC,KACE5B,EAAYQ,EAASgB,YAAc/D,EAAS4C,QAC1C,cAAC,IAAD,IAEA,cAAC,IAAD,IAGJwB,UAAWC,IACXjB,QAAS,CACPzD,KAAMyD,EAAQ7B,UACd2C,MAAOd,EAAQxB,UAEjB0C,GAAG,uBAOf,qBACEN,MAAO,CACLxC,QAAS,GACTV,QAAS,OACTM,KAAM,EACNc,WAAY,SACZqC,cAAe,SACfC,cAAe,IAPnB,SAUG1B,Q,yRCxNGR,O,gCAAAA,I,4BAAAA,I,6BAAAA,M,KAML,IAAMmC,GAAoB,CAACnC,EAASoC,WAAYpC,EAASqC,YAEnDC,IAAW,oBACrBtC,EAASuC,aAAe,uBADH,eAErBvC,EAASoC,WAAa,eAFD,eAGrBpC,EAASqC,WAAa,eAHD,GAMXG,IAAe,oBACzBxC,EAASuC,aAAe,MADC,eAEzBvC,EAASoC,WAAa,4BAFG,eAGzBpC,EAASqC,WAAa,oCAHG,GAMfI,GAAoB,SAACC,EAAcC,GAC9C,IAAMC,EAAcJ,GAAgBG,GACpC,OAAKC,EAEE,IAAIC,IAAJ,cAAeH,GAAQE,GAAaE,WAFlB,MAKdC,IAA0B,oBACpCC,mBAAgBC,aAAe,iBADK,eAEpCD,mBAAgBE,UAAY,aAFQ,eAGpCF,mBAAgBG,oBAAsB,cAHF,eAIpCH,mBAAgBI,gBAAkB,UAJE,eAKpCJ,mBAAgBK,QAAU,WALU,eAMpCL,mBAAgBM,SAAW,YANS,eAOpCN,mBAAgBO,UAAY,aAPQ,GCzB1BC,GAAS,IAAIC,KAAO,CAC/BC,eAAe,EACfC,gBAAiB,CAEfC,cAAe,CACbC,QAASC,KACTC,QAAS,CACPC,IAAK,CACHC,GAAI,yCAKZC,gBAAiB/B,KAGNgC,GAAoB,WAK/B,QAJeC,aAAaC,QAAQ,iCCmGvBC,GAxGMC,cAAsB,SAACC,EAAKC,GAAN,MAAe,CACxDC,aAASC,EACTC,cAAUD,EACVE,YAAQF,EACRG,UAAWX,KACXxB,aAASgC,EACTI,aAAa,EACbC,WAAW,WAAD,8BAAE,uBAAAC,EAAA,sDACVb,aAAac,QACbV,GAAI,SAACW,GAAD,MAAY,CACdJ,aAAa,EACbD,WAAW,MAJH,2CAAF,kDAAC,GAOXM,QAAQ,WAAD,8BAAE,WAAOC,EAAgBC,GAAvB,gCAAAL,EAAA,kEAEAK,EAFA,sBAEmB,IAAIC,MAAM,iCAF7B,cAICC,EAAe,IAAIC,aAAUC,aAAaL,GAJ3C,SAKmBG,EAAaG,eALhC,2CAKEjB,EALF,KAMCG,EAAiBW,EAAaI,UAAU,GAExCb,KAAcL,IAAWG,GAR1B,UAUiBW,EAAaK,aAV9B,QAUClD,EAVD,OAYL6B,GAAI,SAACW,GAAD,MAAY,CACdT,UACAE,SAAUY,EACVX,OAAQA,EACRG,WAAW,WAAD,8BAAE,uBAAAC,EAAA,sDACVb,aAAac,QACbV,GAAI,SAACW,GAAD,MAAY,CACdJ,aAAa,EACbD,WAAW,MAEbO,EAAUS,qBACVR,IAPU,2CAAF,kDAAC,GASXP,YAAaA,EACbD,WAAW,EACXnC,QAASA,EAAQoD,YAGbC,EA9BD,iCAAAf,EAAA,MA8B2B,WAC9BI,EACAU,GAF8B,0BAAAd,EAAA,yDAIzB9C,GAAkB8D,SAASF,GAJF,uBAK5BvB,GAAI,SAACW,GAAD,MAAY,CACdxC,QAASuD,SAASH,EAAQjD,YAC1BgC,WAAW,MAPe,iCAYxBU,EAAe,IAAIC,aAAUC,aAAaL,GAZlB,SAaNG,EAAaG,eAbP,uCAavBjB,EAbuB,KAcxBG,EAAiBW,EAAaI,UAAU,GAExCb,KAAcL,IAAWG,GAhBD,wBAmB5BJ,IAAMO,aAnBsB,2BAuB9BR,GAAI,SAACW,GAAD,MAAY,CACdxC,QAASuD,SAASH,EAAQjD,YAC1B8B,SAAUY,EACVX,OAAQA,EACRH,QAASA,EACTK,YAAaA,EACbD,WAAW,MA7BiB,4CA9B3B,wDAgELO,EAAUc,GAAG,mBAAmB,SAACC,GAC/BJ,EAAwBX,EAAWZ,IAAM9B,YAI3C0C,EAAUc,GAAG,gBAAgB,SAACJ,GAC5BC,EAAwBX,EAAWU,MAIrCV,EAAUc,GAAG,WAAW,SAACE,GACvBL,EAAwBX,EAAWgB,EAAKN,YAI1CV,EAAUc,GAAG,cAAc,SAACG,GAC1B7B,IAAMO,gBAhFH,kDAmFLuB,QAAQD,MAAM,kBAAd,OACMtB,EAAaP,IAAMO,aACTA,IArFX,0DAAF,qDAAC,O,qECVKwB,GAfM,SAAC,GAAyC,IAAvC7D,EAAsC,EAAtCA,QACd8D,EAAqBnC,IAAa,SAAAa,GAAK,OAAIA,EAAMxC,WAEjD+D,EAAiB/D,GAAoB8D,EAEvCpF,EAAQ,UAEZA,EAAQqF,IAAmB1G,EAASoC,WAAa,UAAYf,EAC7DA,EAAQqF,IAAmB1G,EAASqC,WAAa,YAAchB,EAE/D,IAAMO,EAAQ8E,EAAiBpE,GAAYoE,GAAkBpE,GAAYtC,EAASuC,cAElF,OAAO,cAACoE,GAAA,EAAD,CAAMC,KAAK,QAAQvF,MAAOA,EAAcO,MAAK,OAAEA,QAAF,IAAEA,IAASU,GAAYtC,EAASuC,iB,qFCXlFxE,GAAYC,aAAW,SAACpB,GAAD,aAC3BqB,aAAY,oBACT+E,mBAAgBC,aAAe,CAC9B5B,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YAJT,eAMTmD,mBAAgBE,UAAY,CAC3B7B,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YATT,eAWTmD,mBAAgBG,oBAAsB,CACrC9B,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YAdT,eAgBTmD,mBAAgBI,gBAAkB,CACjC/B,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YAnBT,eAqBTmD,mBAAgBK,QAAU,CACzBhC,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YAxBT,eA0BTmD,mBAAgBO,UAAY,CAC3BlC,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YA7BT,eA+BTmD,mBAAgBM,SAAW,CAC1BjC,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,YAlCT,OAoECiH,GAzBV,SAAC,GAA2C,IAAD,EAAxCC,EAAwC,EAAxCA,UAAWjC,EAA6B,EAA7BA,UAAWkC,EAAkB,EAAlBA,YACtBlG,EAAU/C,KAEVoH,EAAK,UAAG4B,EAAU5B,aAAb,QAAsBnC,mBAAgBC,aAE3CrB,EAAQkD,EACV,MACAkC,EACAjE,GAA2BoC,GAC3B,uBAEJ,OACE,cAACwB,GAAA,EAAD,CACEC,KAAK,QACLvF,MAAM,UACND,QAAQ,UACRQ,MAAOA,EACPd,QAAS,CACPmG,aACEnG,EAAQkG,EAAc7B,EAAQnC,mBAAgBC,kBCxDzCiE,GAboB,SAACC,GAGlC,IAFA,IAAIC,EAAMD,EAAIE,MAAM,QAChBC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC9BD,GAAUF,EAAIG,GAAGE,OAAO,GAAGC,cAAgBN,EAAIG,GAAGI,MAAM,GAAK,IAG/D,IAEMC,GAFQR,EAAI,GAAKE,GAAQO,OAEXC,QAAQ,WAAY,OACxC,OAAOF,EAAOH,OAAO,GAAGC,cAAgBE,EAAOD,MAAM,ICDxCI,ICDHC,GDCGD,GATf,SAAmBE,GACjB,OAAKA,EAEC,GAAN,OAAUA,EAAQC,OAAO,EAAG,GAA5B,cAAoCD,EAAQC,OAC1CD,EAAQT,OAAS,EACjBS,EAAQT,SAJW,I,+FEwBVW,GAAqB,SAACC,GACjC,IAAMC,EAAOD,EAAaE,IAAI,OAExBC,EAAoBH,EAAaI,IAAI,OAErCC,EAAQF,EAAkBD,IAAI,MAE9BI,EAAsBH,EAAkBC,IAAI,MAC5CG,EAAUD,EAAoBJ,IAAI,IAGlCM,EADsBF,EAAoBF,IAAI,IAGhDZ,EAAS,GAMb,OALIS,EAAKQ,GAAG,KAAIjB,GAAM,UAAOS,EAAKS,WAAWhG,WAAvB,OAClB2F,EAAMI,GAAG,KAAIjB,GAAM,UAAOa,EAAMK,WAAWhG,WAAxB,OACnB6F,EAAQE,GAAG,KAAIjB,GAAM,UAAOe,EAAQG,WAAWhG,WAA1B,OACrB8F,EAAQC,GAAG,KAAIjB,GAAM,UAAOgB,EAAQE,WAAWhG,WAA1B,OAElB8E,EAAOC,QAGHkB,GAAkB,SAACC,EAAqBC,GACnD,IAAMC,EAAY,IAAIC,KAAUH,EAAMlG,YAAYwF,IAAhC,SAAoC,GAAMW,IAE5D,OAAIC,EAAUE,gBAAkB,EACvBF,EAAUG,SAAS,GAGrBH,EAAUG,YCnCJC,GAnBK,CAClBC,4BACEC,wFACAnC,MAAM,KACRoC,4BACED,6CACAnC,MAAM,KACRqC,cAAexD,SAASsD,KACxBG,qBACEH,6CACAnC,MAAM,KACRuC,qBACEJ,6CACAnC,MAAM,KACRwC,8BAA+B3D,SAC7BsD,OCISM,GAAoBvF,cAA2B,SAACC,EAAKC,GAAN,MAAe,CACzEgB,UAAW,GACXsE,aAAc,SAACtE,GACbjB,GAAI,SAACW,GAAD,MAAY,CACdM,qBA2BOuE,GAAqB,WAChC,MAAkD1F,IAAa,SAACa,GAAD,MAAW,CACxEA,EAAMJ,YACNI,EAAMxC,QACNwC,EAAML,UACNK,EAAMN,WAJR,oBAAOE,EAAP,KAAoBpC,EAApB,KAA6BmC,EAA7B,KAAwCD,EAAxC,KAOMkF,EAAeD,IAAkB,SAAC3E,GAAD,OAAWA,EAAM4E,gBAExDE,qBAAU,WACR,GACGlF,IACDD,GACCD,GACAlC,GACDA,IAAY3C,EAASuC,aALvB,CAUA,IAKMkD,GAJJ9C,IAAY3C,EAASoC,WACjBkH,GAAYG,4BACZH,GAAYC,6BAEkBW,KAAI,SAACjC,EAASkC,GAAV,OAhDN,SACpCA,EACAlC,EACAtF,EACAkC,GAOA,MAAO,CACLsF,QACAxH,QAASA,EACTyH,OAAQ,CACNC,gBAAiBpC,EACjBqC,iBAAkBzF,EAClB0F,sBAVF5H,IAAY3C,EAASoC,WACjBkH,GAAYM,qBACZN,GAAYK,uBAwCda,CAAuBL,EAAOlC,EAAStF,EAASkC,MAGlDkF,EAAatE,MACZ,CAACV,EAAapC,EAASmC,EAAWD,EAAQkF,K,SC9ElCU,GAAWtB,KAAUuB,KAAK,GAE1BC,GAAiB,SAC5BC,EACAC,GACI,IAAD,EAGH,OAFiB,OAAGD,QAAH,IAAGA,IAAoBH,IAErBK,IAAZ,UAAgBD,EAAYE,2BAA5B,QAAmDN,K,oBCJtDO,GAAiC,CAC/B3G,QAD+B,SACvB4G,GAAe,OAAD,sHACtBC,EAAK,IAAIC,KAAU,OACpBf,OAAOgB,OAAQ,EAFQ,SAIPF,EAAGG,WAAW,WAAWC,IAAIL,GAAMxG,MAJ5B,cAIpB8G,EAJoB,yBAMnBC,KAAKC,UAAUF,IANI,8CAStBG,QAV+B,SAUvBT,EAAczJ,GAAgB,OAAD,sHACrC0J,EAAK,IAAIC,KAAU,OACpBf,OAAOgB,OAAQ,EAEZG,EAAOC,KAAKG,MAAMnK,GAJiB,SAMnC0J,EAAGG,WAAW,WAAWC,IAAIL,GAAMzG,IAAI+G,GANJ,+CAkB9BK,GARU,SAACC,EAAmBC,GAC3C,MAAO,CACLb,KAAMY,EACNC,UAAWA,EACXC,WAAY,kBAAMf,MCEPgB,GAbMzH,aACnB0H,oBACE,SAACzH,EAAKC,GAAN,MAAe,CACbyH,UAAW,GACXC,KAAM,SAACC,GAAD,OACJ5H,GAAI,SAACW,GAAD,MAAY,CACd+G,UAAU,2BAAM/G,EAAM+G,WAAb,mBAAyBE,EAASC,GAAKD,YAGtDR,GAAiB,e,oDCTfU,GAAsB,yCAAG,WAC7BC,EACAxF,GAF6B,8DAAA9B,EAAA,6DAIvBL,EAAWmC,EAAUnC,SACrByF,EAAkBtD,EAAUqD,OAAOC,gBACnCmC,EAASzF,EAAU0F,KAAKD,OAAOE,WANR,SAQT3F,EAAU4F,WARD,UAQvBxH,EARuB,OAW1B,CACCnC,mBAAgBG,oBAChBH,mBAAgBI,iBAChB6C,SAASd,GAdgB,yCAgBpB,MAhBoB,cAmBvByH,EAA4B,GAC5BC,EAAa,SAACC,EAAsBC,GACxC,IAAMC,EAAaF,EAAeC,EAClC,IAAKH,EAAgB3G,SAAS+G,GAE5B,OADAJ,EAAgBK,KAAKD,GACdE,GAAgBtI,EAAUoI,EAAY3C,EAAiBtD,IAI5DoG,EAAY,IAAIC,KAAKrG,EAAUoG,WA5BR,UA8BHvI,EAASyI,eAAed,GA9BrB,eA8BvBe,EA9BuB,OAgCvBC,EAAuBD,EAAYE,YAhCZ,UAiCC5I,EAAS6I,iBAjCV,eAiCvBC,EAjCuB,iBAmCyBC,GACpD/I,EACA2I,EACAG,GAtC2B,iBAmCrBE,EAnCqB,EAmCrBA,WAAsBC,EAnCD,EAmCTC,SAMdC,EAA0BC,GAC9Bb,EACAU,EACAN,EACAK,GAEIK,EAA0BD,GAC9BE,aAAWf,EAAWX,GACtBqB,EACAN,EACAK,GAEIO,EAA4BH,GAChCI,aAAWjB,EAAWX,GACtBqB,EACAN,EACAK,GAGIS,EAAiBC,KAAKC,MAC1BD,KAAKE,IAAIP,EAAyBV,IAE9BkB,EAAmBH,KAAKC,MAC5BD,KAAKI,IAAIP,EAA2BT,IAEhCiB,EAAiBL,KAAKC,MAAMR,GAE9Ba,EAA4C,KAC5CC,EAAU,EACVC,EAAU,GAtEe,WAuErBF,EAvEqB,oBAwE3BE,EAAQ7B,KAAKJ,EAAWwB,EAAgBQ,IAExCC,EAAQ7B,KAAKJ,EAAW8B,GAAiBE,IAEzCC,EAAQ7B,KAAKJ,EAAW8B,EAAgBE,IAExCC,EAAQ7B,KAAKJ,EAAW4B,GAAmBI,IA3Ff,KA6FxBC,EAAQtH,OAhFe,kCAiFDuH,QAAQC,IAAIF,GAjFX,QAiFnBG,EAjFmB,OAmFzBL,EAAY,UAAGK,EAAUC,MAAK,SAACC,GAAD,QAAQA,YAA1B,QAAgD,KAE5DL,EAAU,GArFe,QAwF3BD,IAxF2B,iDA2FtBD,GA3FsB,4CAAH,wDA8FtBjB,GAAqB,yCAAG,WAC5B/I,EACAwK,EACAC,GAH4B,0BAAApK,EAAA,sEAKJL,EAAS0K,SAASF,GALd,cAKtBG,EALsB,gBAMN3K,EAAS0K,SAASD,GANZ,cAMtBG,EANsB,OAOtB1B,EAAW,IAAIV,KAA4B,KAAtBmC,EAAUE,WAC/BC,EAAS,IAAItC,KAA0B,KAApBoC,EAAQC,WAE3BE,EAAgBC,aAAoBF,EAAQ5B,GAE5CF,GADeyB,EAAgBD,GACHO,EAZN,kBAcrB,CAAE/B,aAAY2B,YAAWC,UAAS1B,WAAU4B,WAdvB,4CAAH,0DAiBrB1B,GAA0B,SAC9B6B,EACA/B,EACAgC,EACAlC,GAEA,OAAOkC,EAAqBF,aAAoBC,EAAM/B,GAAYF,GAG9DV,GAAe,yCAAG,WACtBtI,EACA4I,EACAnD,EACAtD,GAJsB,0CAAA9B,EAAA,6DAMhB8K,EAAM,CACV,kEAEIC,EAAiB,IAAIC,SAAMC,UAAUH,GACrCI,EAAuB,IAAIC,KAAS/F,EAAiB0F,EAAKnL,GAE1DyL,EAAYtJ,EAAUuJ,QAAQpI,OAAO,GACrCqI,EAAsBJ,EAAqBK,QAAQC,SACvD1J,EAAUuJ,SAENI,EAAeH,EAAoBI,OAhBnB,SAkBO/L,EAASgM,yBAAyBpD,GAlBzC,OAkBhBqD,EAlBgB,OAoBhBC,EAAcD,EAAeE,aAAaC,QAC9C,SAAC7B,GAAD,aACE,UAAAA,EAAEnN,UAAF,eAAMiP,iBAAkB5G,EAAgB4G,eACxC9B,EAAE5D,KAAKtF,SAASoK,MAvBE,eA0BLS,GA1BK,kEA0BXI,EA1BW,kBA2BEtM,EAASuM,sBAAsBD,EAAGxO,MA3BpC,WA2Bd0O,EA3Bc,SA6BdC,EAAMD,EAAQE,KAAKpC,MAAK,SAACC,GAAD,OAAOoC,GAAUpC,EAAEwB,OAAQD,OA7BrC,wBAgCZ9I,EAA6BoI,EAAewB,SAASH,GACxDI,KAjCe,kBAmCX,CACLC,MAAO9J,EACP+J,OAAQT,EAAGxO,OArCK,0KA0Cf,MA1Ce,iEAAH,4DA6Cf6O,GAAY,SAACK,EAAcC,GAAf,OAChBD,EAAGpK,SAAWqK,EAAGrK,QAAUoK,EAAGE,OAAM,SAACtQ,EAAO2I,GAAR,OAAkB3I,IAAUqQ,EAAG1H,OAEtDmC,M,yCPpLHtE,O,eAAAA,I,qBAAAA,I,mBAAAA,I,0BAAAA,Q,KA8BL,IQIF+J,GRJQC,GAAuBzN,aAClC0H,oBACE,SAACzH,EAAKC,GAAN,MAAe,CACbsM,aAAc,GACdkB,SAAU,SAACC,EAAahB,GAAsB,IAAD,EACrCtJ,GAAS,UAACnD,IAAMsM,aAAamB,UAApB,QAA4B,IAAIlB,QAC7C,SAAC7B,GAAD,OAAOA,EAAEzM,OAASwO,EAAGxO,QAGvB8B,GAAI,SAACW,GAAD,MAAY,CACd4L,aAAa,2BACR5L,EAAM4L,cADC,mBAETmB,EAFS,uBAECtK,GAFD,CAESsJ,WAIzBiB,aAAc,SACZD,EACAP,EACAS,EACAC,GACI,IAAD,EACCC,GAAsB,UAAC7N,IAAMsM,aAAamB,UAApB,QAA4B,IAAIhD,MACxD,SAACC,GAAD,OAAOA,EAAEzM,OAASiP,KAGpB,GAAIW,EAAqB,CAAC,IAAD,EACvBA,EAAoBF,OAASA,EAC7BE,EAAoBD,aAAeA,EAEnC,IAAMzK,GAAS,UAACnD,IAAMsM,aAAamB,UAApB,QAA4B,IAAIlB,QAC7C,SAAC7B,GAAD,OAAOA,EAAEzM,OAASiP,KAGpBnN,GAAI,SAACW,GAAD,MAAY,CACd4L,aAAa,2BACR5L,EAAM4L,cADC,mBAETmB,EAFS,uBAECtK,GAFD,CAES0K,eAM7B1G,GAAiB,kBAIR2G,GAAkB,SAACL,GAC9B,IAAMzL,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEzD,EAA0CqP,IACxC,SAAC7M,GAAD,MAAW,CAACA,EAAM4L,aAAc5L,EAAM8M,YACtCO,MAFF,oBAAOzB,EAAP,KAAqB0B,EAArB,KA4BA,MAAO,CAvB2BC,mBAChC,kCAAM3B,EAAamB,UAAnB,QAA2B,KAC3B,CAACA,EAAKnB,IAG8CC,QAAO,SAAC7B,GAAD,MAC3D,CAACnH,GAAmB2K,KAAM3K,GAAmB4K,SAAS3M,SAASkJ,EAAEiD,WAGlDS,uBACf,SAAClB,EAAgBmB,EAAwBC,GACvCN,EAAkBP,EAAK,CACrBxP,KAAMiP,EACNhP,QAAS8D,EACT2L,OAAQpK,GAAmB2K,KAC3BG,iBACAC,cACAC,WAAW,IAAI5F,MAAO6F,kBAG1B,CAACxM,EAAoByL,EAAKO,MSjEjBS,GAA4B3O,aACvC0H,oBACE,SAACzH,EAAKC,GAAN,MAAe,CACb0O,kBAAmB,GACnBC,oBAAqB,SAAClB,EAAamB,GACjC7O,GAAI,SAACW,GAAD,MAAY,CACdgO,kBAAkB,2BACbhO,EAAMgO,mBADM,mBAEdjB,EAAMmB,YAKfzH,GAAiB,wBAWR0H,GAAqB/O,cAA4B,SAACC,EAAKC,GAAN,MAAe,CAC3E8O,WAAY,GACZC,aAAc,SAACtB,EAAanL,GAC1BvC,GAAI,SAACW,GAAD,MAAY,CACdoO,WAAW,2BACNpO,EAAMoO,YADD,mBAEPrB,EAAMnL,aAMF0M,GAAgB,WAC3B,IAAMvH,EAAYF,IAAa,SAAC7G,GAAD,OAAWA,EAAM+G,aAE1CzG,EAAYqE,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAE/CgB,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnD+Q,EAAoB1B,IAAqB,SAAC7M,GAAD,OAAWA,EAAM8M,YAEhE,EAAiDiB,IAC/C,SAACS,GAAD,MAAW,CAACA,EAAMR,kBAAmBQ,EAAMP,uBAC3CZ,MAFF,oBAAOW,EAAP,KAA0BC,EAA1B,KAKA,EAAmCE,IACjC,SAACK,GAAD,MAAW,CAACA,EAAMJ,WAAYI,EAAMH,gBACpChB,MAFF,oBAAOe,EAAP,KAAmBC,EAAnB,KAKMI,EAAef,sBAAW,yCAC9B,WAAO1I,GAAP,wBAAAlF,EAAA,yDACQmH,EAAWF,EAAU/B,EAAM0J,YAC3BjP,EAAWa,EAAUyJ,MACzB,SAACC,GAAD,OAAOA,EAAE/E,OAAOC,kBAAoBF,EAAM2J,mBAGvC1H,GAAaxH,EANpB,yCAOW,MAPX,cAUQmP,EAAY,IAAIC,gBAAapP,EAASwF,QAV9C,SAYqB2J,EAAUE,QAAQ9J,EAAM+J,mBAZ7C,cAYQzH,EAZR,OAcQ0H,EAAsB,IAAIlE,SAAMC,UACpC9D,EAASgI,KACTC,mBAAmBlK,EAAMmK,eAAgBnK,EAAMoK,gBAhBnD,kBAkBS,IAAIC,aACT5P,EAASwF,OACTqC,EACAL,EAASnE,QACTkM,EACAM,aAAStK,EAAMuK,cACfvK,EAAM3I,MACN2I,EAAMwK,YAzBV,4CAD8B,sDA6B9B,CAACzI,EAAWzG,IAGRmP,EAAiB/B,sBAAW,wBAAC,uCAAA5N,EAAA,4DACb4P,OAAOC,OAAO3B,GADD,gDACtBhJ,EADsB,cAEPyJ,EAAazJ,GAFN,UAEzBpD,EAFyB,8EAMCgO,GAAwBhO,EAAWoD,GANpC,QAMzB6K,EANyB,OAQzB9C,EAAM+C,GAAgBlO,GAE5ByM,EAAatB,EAAK8C,GAVa,uEAYhC,CAACpB,EAAcT,EAAmBK,IAE/B0B,EAAWrC,sBAAW,yCAC1B,WAAO1I,GAAP,oCAAAlF,EAAA,yDACQL,EAAWa,EAAUyJ,MACzB,SAACC,GAAD,OAAOA,EAAE/E,OAAOC,kBAAoBF,EAAM2J,mBAF9C,sBAKuB,IAAIvO,MAAM,gCALjC,cAOQwO,EAAY,IAAIC,gBAAapP,EAASwF,QAP9C,SAS0BwJ,EAAazJ,GATvC,UASQpD,EATR,6BAcU,IAAIxB,MACR,mEAfN,WAkBM4E,EAAMgL,YAlBZ,wBAmBU5B,EAAaiB,aAAUY,mBAC3BrO,EACAoD,EAAMkL,eACNlL,EAAMmL,UAtBZ,UAwBgBvB,EAAUwB,aAAahC,GAxBvC,QAwBIrC,EAxBJ,sBA0B0BqC,GA1B1B,IA0BI,2BAAWiC,EAAuB,QAC1BtD,EAAM+C,GAAgBO,GAE5BpC,EAAoBlB,EAAD,YAAC,eACf/H,GADc,IAEjBkC,GAAImJ,EAAQlF,QACZ/D,gBAAiB2E,EAAGxO,KACpBgS,aAAcc,EAAQrI,UAAU8F,iBAjCxC,uEAqCgBc,EAAUmB,SAASnO,GArCnC,QAqCImK,EArCJ,OAuCUgB,EAAM+C,GAAgBlO,GAE5BqM,EAAoBlB,EAAD,YAAC,eACf/H,GADc,IAEjBkC,GAAItF,EAAUuJ,QACd/D,gBAAiB2E,EAAGxO,QA5C1B,QAgDQ+S,EAAcC,GAClBvL,EAAM2J,gBACN5C,EAAGxO,MAGLgR,EAAkB+B,EAAa,CAC7B/S,KAAMwO,EAAGxO,KACTC,QAAS8D,EACT2L,OAAQpK,GAAmB2K,KAC3BG,eAAe,SAAD,OAAW3I,EAAMzL,MAAjB,8BACdqU,YAAY,SAAD,OAAW5I,EAAMzL,MAAjB,uCACXsU,WAAW,IAAI5F,MAAO6F,gBA3D1B,4CAD0B,sDA+D1B,CACExM,EACAmN,EACAnO,EACAiO,EACAN,IAIJ,MAAO,CAACyB,OAAOC,OAAOvB,GAAaqB,EAAgBM,IC5MxCH,GAAuB,yCAAG,WACrChO,EACAoD,GAFqC,kBAAAlF,EAAA,sEAIjB8B,EAAU4F,WAJO,cAI/BxH,EAJ+B,OAK/BkH,EAAKtF,EAAUuJ,QALgB,kBAO9B,CACLnG,QACAkC,KACAlH,QACAgI,UAAWpG,EAAUoG,UACrB3L,MAAOuF,EAAUvF,MACjBmU,IAAK5O,IAb8B,2CAAH,wDAiBvBkO,GAAkB,SAAClO,GAC9B,MAAM,aAAN,OAAoBA,EAAUqD,OAAOC,gBAArC,YAAwDtD,EAAUuJ,UAGvDoF,GAA0B,SACrC5B,EACA8B,GAEA,MAAM,sBAAN,OAA6B9B,EAA7B,YAAgD8B,IAGrCC,GAAe,SAAC9O,EAAsBoD,GAA4B,IAAD,EACtE+H,EAAM+C,GAAgBlO,GACtB0O,EAAcC,GAClBvL,EAAM2J,gBADmC,UAEzC3J,EAAMoC,uBAFmC,QAEhB,iBAIrBH,EADYJ,IAAa,SAAC7G,GAAD,OAAWA,EAAM+G,aACrB/B,EAAM0J,YAEjC,EAAsCiC,oBAAkB,GAAxD,oBAAO9O,EAAP,KAAoB+O,EAApB,KAEMvC,EAAeF,IAAmB,SAACnO,GAAD,OAAWA,EAAMqO,gBAEzD,EAAsCjB,GAAgBkD,GAA/CO,EAAP,qBACA,EAAmDzD,GAAgBL,GAAnE,oBAAO+D,EAAP,KAAqCC,EAArC,KACMC,EAAsBzD,mBAC1B,kBAAMsD,EAA4BI,OAAOH,KACzC,CAACD,EAA6BC,IAG1BI,EAAUxD,sBAAW,wBAAC,uBAAA5N,EAAA,+EACnB8P,GAAwBhO,EAAWoD,GAAOmM,MAAK,SAACC,GACrD/C,EAAatB,EAAKqE,OAFM,2CAIzB,CAACxP,EAAWoD,EAAO+H,EAAKsB,IAErBgD,EAAS3D,sBAAW,wBAAC,6BAAA5N,EAAA,sEACR8B,EAAUyP,SADF,OACnBtF,EADmB,OAGzBgF,EACEhF,EAAGxO,KADK,gBAECyH,EAAMzL,MAFP,8CAGCyL,EAAMzL,MAHP,wCAHe,2CAQxB,CAACqI,EAAWoD,EAAMzL,MAAOwX,IAEtBO,EAAS5D,sBAAW,wBAAC,6BAAA5N,EAAA,sEACR8B,EAAU0P,SADF,OACnBvF,EADmB,OAGzBgF,EACEhF,EAAGxO,KADK,gBAECyH,EAAMzL,MAFP,6CAGCyL,EAAMzL,MAHP,uCAHe,2CAQxB,CAACqI,EAAWoD,EAAMzL,MAAOwX,IAEtBQ,EAAe7D,sBAAW,wBAAC,mCAAA5N,EAAA,yDAC1BkF,EAAMoC,iBAAoBH,EADA,iEAGGE,GAChCnC,EAAMoC,gBACNxF,GAL6B,cAGzB4P,EAHyB,OAQzBC,EAAoB,IAAI3G,SAAMC,UAAU9D,EAASgI,KARxB,SAUXrN,EAAU4F,WAVC,OAUzBxH,EAVyB,OAYzB0R,EACJF,GAAuBxR,IAAUnC,mBAAgBG,oBAC7CyT,EACGE,qBACC3M,EAAMmK,eACNqC,EAAoBjF,MAAM9J,QAE3BmP,KAAK,MANZ,OAOIJ,QAPJ,IAOIA,OAPJ,EAOIA,EAAqBjF,MAAM9J,OAEjCmN,GAAwBhO,EAAWoD,GAAOmM,MAAK,SAACC,GAC9C/C,EAAatB,EAAD,YAAC,eACRqE,GADO,IAEVpM,MAAM,2BACDoM,EAAKpM,OADL,IAEHvC,OAAQiP,EACRG,gBAAe,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAqBhF,eA5Bb,4CAgC9B,CAACvF,EAAUrF,EAAWoD,EAAO+H,EAAKsB,IAerC,OAbAvJ,qBAAU,WACR,IAAMgN,EAAyBd,EAAoB3O,OAAS,EAExDyP,EACFlB,GAAe,GACLkB,GAA2BjQ,GACrC+N,GAAwBhO,EAAWoD,GAAOmM,MAAK,SAACC,GAC9C/C,EAAatB,EAAKqE,GAClBR,GAAe,QAGlB,CAAC/O,EAAamP,EAAqBpP,EAAWyM,EAAcrJ,EAAO+H,IAE/D,CACLmE,EACAG,EACAC,EACAC,EACAtK,EACApF,EACAmP,EACAjE,I,uEC9HEgF,GAAelZ,aAAW,SAACpB,GAAD,OAC9BqB,YAAa,CACXkZ,KAAM,CACJ3Y,QAAS,OACTyD,cAAe,SACfnD,KAAM,GAERsY,IAAK,oBAAG/V,aAAH,MAAW,OAAX,QAA8B,CACjCgW,WAAW,GAAD,OAAKhW,EAAL,cACViW,aAAa,GAAD,OAAKjW,EAAL,cACZ/D,aAAc,UAKPia,GAGR,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACN3W,EAAUoW,GAAa,CAAE7V,MAAOmW,EAAKrN,MAAM9I,QAEzCqW,EAAoBC,cAApBD,gBAER,EAAkC5B,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KAEA,EAA+C/B,GAC7C2B,EAAK7B,IACL6B,EAAKrN,OAFP,oBAAOkM,EAAP,KAAsBjK,EAAtB,KAAgCpF,EAAhC,KAOMpC,EAFYkF,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAE1ByJ,MACzB,SAACC,GAAD,OAAOA,EAAE/E,OAAOC,kBAAoBmN,EAAKrN,MAAM2J,mBAG3C+D,EAAuB,yCAAG,6BAAA5S,EAAA,6DAC9B2S,GAAa,GADiB,kBAItBvB,IAJsB,uDAMtByB,EAAUC,8BAAmB,KAAMC,KAAM,KAAMF,SAErDJ,EAAgBI,EAAS,CACvB1W,QAAS,UATiB,QAa9BwW,GAAa,GAbiB,yDAAH,qDAoB7B,OACE,eAACK,GAAA,EAAD,CAAUC,QAAM,EAACjX,UAAWH,EAAQsW,IAAKK,QALnB,WAClBA,GAASA,KAIb,UACE,sBACExW,UAAWH,EAAQqW,KACnBzV,MAAO,CAAEO,cAAe,MAAOrC,WAAY,UAF7C,UAIE,cAACuY,GAAA,EAAD,CACElX,UAAWH,EAAQqW,KACnBpa,QAASya,EAAKrN,MAAMzL,MACpB0Z,UAAS,UAAKC,aAAoBb,EAAKrK,UAAW,CAChDmL,WAAW,OAGf,qBAAK5W,MAAO,CAAEhC,YAAa,GAAI6Y,aAAc,IAA7C,SACE,cAAC,GAAD,CAAaxR,UAAWyQ,EAAMxQ,YAAaA,SAG/C,eAACwR,GAAA,EAAD,CAAQC,QAAM,EAAd,UACE,cAACC,GAAA,EAAD,CAASC,YAAY,WAAWjX,MAAO,CAAEtD,YAAa,IAAMwa,UAAQ,IACpE,cAACT,GAAA,EAAD,CACEpb,QACE,wCACGqP,QADH,IACGA,OADH,EACGA,EAAUnB,KADb,iBAEG/D,GAA2BsQ,EAAKrN,MAAMmK,mBAG3C8D,UAAS,oBAAexT,EAAUuF,MAAQ,EAAjC,oBAA8ChB,KAAUuB,KAC/D8M,EAAKrN,MAAM+J,mBAEVpJ,IAAI,GACJhI,YACH7B,UAAWH,EAAQqW,UAGvB,cAAC0B,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,KAAK,MACLtB,QAASI,EACTmB,SAAUlU,IAAckC,EAH1B,SAKE,cAAC,KAAD,CAAatF,MAAO,CAAEL,MAAOmW,EAAKrN,MAAM9I,iBChF5C4X,GAAY,CAAEza,QAAS,OAAQoB,WAAY,SAAUZ,IAAK,OA+UjDka,GA3UV,SAAC,GAAmB,IAAD,IAAhBnS,EAAgB,EAAhBA,UACAnK,EAAQuc,eACRC,EAAaC,aAAczc,EAAM0c,YAAYC,KAAK,OAExD,EAAwBzD,oBAAkB,GAA1C,oBAAO0D,EAAP,KAAaC,EAAb,KAEA,EAAkC3D,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KAEA,EACE/B,GAAa9O,EAAU4O,IAAK5O,EAAUoD,OADxC,oBAAOkM,EAAP,KAAgBG,EAAhB,KAAwBC,EAAxB,KAAgCC,EAAhC,KAA8CtK,EAA9C,KAAwDpF,EAAxD,KAKMpC,EAFYkF,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAE1ByJ,MACzB,SAACC,GAAD,OAAOA,EAAE/E,OAAOC,kBAAoBtD,EAAUoD,MAAM2J,mBAG9C4D,EAAoBC,cAApBD,gBAEFjR,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnD+W,EACJ3S,EAAUoD,MAAMoC,iBAChB9F,GACAhE,GAAkBsE,EAAUoD,MAAMoC,gBAAiB9F,GAE/CkT,EACJ5S,EAAUoD,MAAM6M,iBAChBvQ,GACAhE,GAAkBsE,EAAUoD,MAAM6M,gBAAiBvQ,GAErDwD,qBAAU,WAAO,IAAD,GAEXlD,EAAUoD,MAAM6M,iBACjB,CACEhU,mBAAgBI,gBAChBJ,mBAAgBG,qBAChB8C,SAHF,UAGWc,EAAU5B,aAHrB,QAG8BnC,mBAAgBC,eAE9CyT,MAED,CAAC3P,EAAUoD,MAAM6M,gBAAiBjQ,EAAU5B,MAAOuR,IAEtD,IAAMkD,EAAa,SAACC,GAAD,OAA2C,WAAO,IAAD,EAC7DA,KAID,UAACC,iBAAD,aAAC,EAAWC,YAOhBD,UAAUC,UAAUC,UAAUH,GAC9BnC,EAAgB,UAAW,CAAEuC,iBAAkB,OAP7CvC,EAAgB,0CAA2C,CACzDtW,QAAS,aASTyW,EAAuB,yCAAG,6BAAA5S,EAAA,6DAC9B2S,GAAa,GADiB,kBAItBvB,IAJsB,uDAMtByB,EAAUC,8BAAmB,KAAMC,KAAM,KAAMF,SAErDJ,EAAgBI,EAAS,CACvB1W,QAAS,UATiB,QAa9BwW,GAAa,GAbiB,yDAAH,qDAgBvBsC,EAAiB,yCAAG,6BAAAjV,EAAA,6DACxB2S,GAAa,GADW,kBAIhBpB,IAJgB,uDAMhBsB,EAAUC,8BAAmB,KAAMC,KAAM,KAAMF,SAErDJ,EAAgBI,EAAS,CACvB1W,QAAS,UATW,QAaxBwW,GAAa,GAbW,yDAAH,qDAgBjBuC,EAAiB,yCAAG,6BAAAlV,EAAA,6DACxB2S,GAAa,GADW,kBAIhBnB,IAJgB,uDAMhBqB,EAAUC,8BAAmB,KAAMC,KAAM,KAAMF,SAErDJ,EAAgBI,EAAS,CACvB1W,QAAS,UATW,QAaxBwW,GAAa,GAbW,yDAAH,qDAgBvB,OAAKhT,GAAawH,EAGhB,qCACE,cAAC,GAAD,CAAiBoL,KAAMzQ,EAAW0Q,QAAS,kBAAMgC,GAAQ,MACzD,eAACW,GAAA,EAAD,CACEhB,WAAYA,EACZ3Z,SAAS,KACT4a,WAAW,EACXb,KAAMA,EACNc,QAAS,kBAAMb,GAAQ,IALzB,UAOE,cAACc,GAAA,EAAD,UACE,sBAAK7Y,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,UACE,qBAAK4C,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,SACGiI,EAAUoD,MAAMzL,QAEnB,cAAC,GAAD,SAGJ,cAAC8b,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACE3Y,UAAW4Y,KACXld,UAAW,EACXkE,MAAO,CAAEmF,OAAO,aAAD,OAAejK,EAAME,QAAQ6d,OAAOC,QAHrD,SAKE,cAACC,GAAA,EAAD,CAAOC,aAAW,aAAlB,SACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,eAGA,eAACC,GAAD,CAAkBC,MAAM,QAAQ1Z,MAAOuX,GAAvC,UACE,cAACH,GAAA,EAAD,CACEgC,aAAW,UACXlU,KAAK,QACL6Q,QAASmC,EAAW7S,EAAUsF,IAHhC,SAKE,cAAC,KAAD,CAAUhN,SAAS,cAErB,+BAAO0I,GAAUhB,EAAUsF,YAG/B,eAAC2O,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,0BAGA,eAACC,GAAD,CAAkBC,MAAM,QAAQ1Z,MAAOuX,GAAvC,UACE,cAACH,GAAA,EAAD,CACEgC,aAAW,wBACXlU,KAAK,QACL6Q,QAASmC,EAAW7S,EAAUoD,MAAMoC,iBAHtC,SAKE,cAAC,KAAD,CAAUlN,SAAS,cAEpBqa,GACC,eAAC3X,GAAA,EAAD,CACEsZ,OAAO,SACPC,KAAI,OAAE5B,QAAF,IAAEA,SAAiC/U,EACvC4W,IAAI,aACJ7Z,MAAOuX,GAJT,UAME,cAAC,KAAD,CAAUvX,MAAO,CAAErC,SAAU,MAC5B0H,EAAUoD,MAAMoC,iBACfxE,GAAUhB,EAAUoD,MAAMoC,qBAG9BmN,GACA,+BACG3S,EAAUoD,MAAMoC,iBACfxE,GAAUhB,EAAUoD,MAAMoC,yBAKpC,eAACyO,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,oBAGA,eAACC,GAAD,CAAkBC,MAAM,QAAQ1Z,MAAOuX,GAAvC,UACE,cAACH,GAAA,EAAD,CACEgC,aAAW,iBACXlU,KAAK,QACL6Q,QAASI,EACTmB,SAAUlU,IAAckC,EAJ1B,SAME,cAAC,KAAD,CAAa3H,SAAS,cAExB,cAAC,GAAD,CACE0H,UAAWA,EACXC,YAAaA,EACblC,UAAWA,UAIjB,eAACkW,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,wBAGA,cAACC,GAAD,CAAkBC,MAAM,QAAxB,SACGI,aAAOzU,EAAUoG,UAAW,gCAGjC,eAAC6N,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,8BACwB,OAARtW,QAAQ,IAARA,OAAA,EAAAA,EAAUuF,OAAQ,KAElC,eAACgR,GAAD,CAAkBC,MAAM,QAAxB,UACGhP,EAASnB,KADZ,iBAEG/D,GAA2BH,EAAUoD,MAAMmK,sBAGhD,eAAC0G,GAAD,WACE,eAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,oBACUnU,EAAUoD,MAAM+J,kBAAoB,KAE9C,cAACiH,GAAD,CAAkBC,MAAM,QAAxB,2BACcjT,GAAkB,UAC5BpB,EAAU4O,IAAIlJ,KAAKD,cADS,QACC/B,IAFjC,yBAGoB1B,GAAe,UAC/BhC,EAAU4O,IAAIlJ,KAAKgP,gBADY,QACAhR,GAC/B,SAIN,eAACuQ,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,yBAGA,eAACC,GAAD,CAAkBC,MAAM,QAAQ1Z,MAAOuX,GAAvC,UACGlS,EAAUoD,MAAM6M,iBACf,cAAC8B,GAAA,EAAD,CACEgC,aAAW,wBACXlU,KAAK,QACL6Q,QAASmC,EAAW7S,EAAUoD,MAAM6M,iBAHtC,SAKE,cAAC,KAAD,CAAU3X,SAAS,cAGtBsa,GACC,eAAC5X,GAAA,EAAD,CACEsZ,OAAO,SACPC,KAAI,OAAE3B,QAAF,IAAEA,SAAiChV,EACvC4W,IAAI,aACJ7Z,MAAOuX,GAJT,UAME,cAAC,KAAD,CAAUvX,MAAO,CAAErC,SAAU,MAC5B0H,EAAUoD,MAAM6M,iBACfjP,GAAUhB,EAAUoD,MAAM6M,qBAG9B2C,GACA,+BACG5S,EAAUoD,MAAM6M,gBACbjP,GAAUhB,EAAUoD,MAAM6M,iBAC1B,cAKZ,eAACgE,GAAD,WACE,cAACC,GAAD,CAAiBnZ,UAAU,KAAKoZ,MAAM,MAAtC,oBAGA,eAACC,GAAD,CAAkBC,MAAM,QAAQ1Z,MAAOuX,GAAvC,UACGlS,EAAUoD,MAAMvC,QACf,cAACkR,GAAA,EAAD,CACEgC,aAAW,iBACXlU,KAAK,QACL6Q,QACE1Q,EAAUoD,MAAMvC,OACZgS,EAAW7S,EAAUoD,MAAMvC,aAC3BjD,EAENqU,SAAUlU,EARZ,SAUE,cAAC,KAAD,CAAUzF,SAAS,cAGvB,+BACG0H,EAAUoD,MAAMvC,OACbG,GAAUhB,EAAUoD,MAAMvC,QAC1B,uBAQlB,eAAC8T,GAAA,EAAD,CACEha,MAAO,CAAEhC,YAAa,GAAI6Y,aAAc,GAAInZ,WAAY,IAD1D,UAGE,sBAAKsC,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,UACGiI,EAAU5B,QAAUnC,mBAAgBE,WACnC,cAACyY,GAAA,EAAD,CACElE,QAASyC,EACTlB,SAAUlU,IAAckC,EACxB3F,MAAM,YACND,QAAQ,YAJV,oBASD2F,EAAU5B,QAAUnC,mBAAgBK,SACnC,cAACsY,GAAA,EAAD,CACElE,QAAS0C,EACTnB,SAAUlU,IAAckC,EACxB3F,MAAM,YACND,QAAQ,YAJV,uBAUJ,cAACua,GAAA,EAAD,CAAQlE,QAAS,kBAAMgC,GAAQ,IAAQpY,MAAM,UAA7C,4BAvN2B,MAkO/B8Z,GAAmBS,cAAW,SAAChf,GAAD,OAClCqB,YAAa,CACX4d,KAAM,CACJhc,gBAAiBjD,EAAME,QAAQgf,OAAOC,MACtC1a,MAAOzE,EAAME,QAAQgf,OAAOE,OAE9B9e,KAAM,CACJmC,SAAU,GACViY,aAAc,YARKsE,CAWvBK,MAEIhB,GAAkBW,cAAW,SAAChf,GAAD,OACjCqB,YAAa,CACX4d,KAAM,CACJhc,gBAAiBjD,EAAME,QAAQgf,OAAOC,MACtC1a,MAAOzE,EAAME,QAAQgf,OAAOE,OAE9B9e,KAAM,CACJmC,SAAU,GACV6c,WAAY,OACZ5E,aAAc,OACd7X,SAAU,SAVQmc,CAatBK,MAEIjB,GAAiBY,cAAW,SAAChf,GAAD,OAChCqB,YAAa,CACXZ,KAAM,CACJ,qBAAsB,CACpBwC,gBAAiBjD,EAAME,QAAQ6d,OAAOC,YAJvBgB,CAQrBO,M,0CCxZWC,GAAgB,WAAgB,IAAfC,EAAc,uDAAN,EACpC,EAA8BvG,oBAAS,GAAvC,oBAAOwG,EAAP,KAAgBC,EAAhB,KASA,OAPAC,2BAAgB,WACd,IAAMC,EAAeC,YAAW,WAC9BH,GAAW,KACVF,GACH,OAAO,kBAAMM,aAAaF,MACzB,CAACJ,IAEGC,GCLHM,GAAkB5e,aAAW,SAACpB,GAAD,OACjCqB,YAAa,CACXZ,KAAM,CACJ2D,SAAU,WACVxB,MAAO,GACPjB,OAAQ,IAEVse,OAAQ,CACNxb,MAAOzE,EAAME,QAAQggB,KAA4B,UAAvBlgB,EAAME,QAAQigB,KAAmB,IAAM,MAEnEC,IAAK,CACH3b,MAAO,UACP4b,kBAAmB,QACnBjc,SAAU,WACVkc,KAAM,GAERC,OAAQ,CACNC,cAAe,cAKfC,GAAyB,SAAC9f,GAC9B,IAAMuD,EAAU8b,KAEhB,OACE,sBAAK3b,UAAWH,EAAQzD,KAAxB,UACE,cAACigB,GAAA,EAAD,yBACElc,QAAQ,cACRH,UAAWH,EAAQ+b,OACnBjW,KAAM,GACN2W,UAAW,GACPhgB,GALN,IAMEiE,MAAO,OAET,cAAC8b,GAAA,EAAD,aACElc,QAAQ,gBACRoc,eAAa,EACbvc,UAAWH,EAAQkc,IACnBlc,QAAS,CACPqc,OAAQrc,EAAQqc,QAElBvW,KAAM,GACN2W,UAAW,GACPhgB,QAqBGkgB,GAfyCC,gBACtD,YAAoB,IAAjB5Y,EAAgB,EAAhBA,UAGK6Y,EAFUvB,GAAc,MAEGtX,EAEjC,OACE,qCACG6Y,GAAiB,cAAC,GAAD,KAChBA,GAAiB,qBAAKjc,MAAO,CAAEnD,OAAQ,YNvC3CR,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmC,MAAO,OACPN,QAAS,EACTF,IAAK,MACLR,QAAS,OACTyD,cAAe,gB,SAQhB8P,O,iBAAAA,I,eAAAA,I,wBAAAA,Q,KAML,IOhDY6L,GAQAC,GAQAC,GAeAC,GAKAC,G,MPYNC,GAAc,kBAClB,IAAI7Q,MACF,IAAIA,MAAO8Q,eACX,IAAI9Q,MAAO+Q,YACX,IAAI/Q,MAAOgR,YAgBTC,GAAY,GAwNHC,GAtNC,WACd,IAAMxd,EAAU/C,KAEhB,EAAkC+X,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KAEA,EAAwB9B,mBAAiB,GAAzC,oBAAOyI,EAAP,KAAaC,EAAb,KACA,EAA8B1I,mBAAemI,MAA7C,oBAAOQ,EAAP,KAAgBC,EAAhB,KAEMjY,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEzD,EAA0CmT,mBAzBf,WAAO,IAAD,EAC3B6I,EAASnT,KAAKG,MAAL,UACbvH,aAAaC,QAAQ,iCADR,QACqC,KAEpD,MAAO,CACL0N,GAAe6M,MACf7M,GAAe8M,KACf9M,GAAe5R,UACf8F,SAAS0Y,GACPA,EACA5M,GAAe6M,MAgBjBE,IADF,oBAAOC,EAAP,KAAsBC,EAAtB,KAIA,EAAqCvL,KAArC,oBAAOF,EAAP,KAAmBqB,EAAnB,KAEA3K,qBAAU,WACR2N,GAAa,GACbhD,IAAiB0B,MAAK,kBAAMsB,GAAa,QACxC,CAAChD,IAEJ,IAAMqK,EAAyBvM,mBAAQ,WACrC,OAAIqM,IAAkBhN,GAAe8M,KAC5BtL,EACJvC,QACC,SAACwG,GAAD,OACEA,EAAKrN,MAAMxH,UAAY8D,GACvB+Q,EAAKrK,UAAU+Q,gBAAkBO,EAAQP,iBAE5CgB,MAAK,SAACC,EAAWC,GAAZ,OACJC,aAAWF,EAAUhS,UAAWiS,EAASjS,cAE1CmS,QAAO,SAACC,EAAW/H,GAAU,IAAD,EACrBgI,EAAUhE,aAAOhE,EAAKrK,UAAW,QACjCsS,EAAK,iCAAQF,EAAKC,UAAb,QAAyB,IAAzB,CAA8BhI,IAEzC,OAAO,2BAAK+H,GAAZ,mBAAmBC,EAAUC,MAC5B,IAEHV,IAAkBhN,GAAe6M,MAC5BrL,EACJvC,QACC,SAACwG,GAAD,OACEA,EAAKrN,MAAMxH,UAAY8D,GACvB+Q,EAAKrK,UAAU+Q,gBAAkBO,EAAQP,eACzC1G,EAAKrK,UAAUgR,aAAeM,EAAQN,cAEzCe,MAAK,SAACC,EAAWC,GAAZ,OACJC,aAAWF,EAAUhS,UAAWiS,EAASjS,cAE1CmS,QAAO,SAACC,EAAW/H,GAAU,IAAD,EACrBgI,EAAUhE,aAAOhE,EAAKrK,UAAW,YACjCsS,EAAK,iCAAQF,EAAKC,UAAb,QAAyB,IAAzB,CAA8BhI,IAEzC,OAAO,2BAAK+H,GAAZ,mBAAmBC,EAAUC,MAC5B,IAEHV,IAAkBhN,GAAe5R,SAC5BoT,EACJvC,QACC,SAACwG,GAAD,OACEA,EAAKrN,MAAMxH,UAAY8D,GACvB+Q,EAAKrK,WAAasR,KAErBS,MAAK,SAACC,EAAWC,GAAZ,OACJC,aAAWF,EAAUhS,UAAWiS,EAASjS,cAE1CxF,MAAM4W,EAAOF,IAAYE,EAAO,GAAKF,IACrCiB,QAAO,SAACC,EAAW/H,GAAU,IAAD,EACrBgI,EAAU,gBACVC,EAAK,iCAAQF,EAAKC,UAAb,QAAyB,IAAzB,CAA8BhI,IAEzC,OAAO,2BAAK+H,GAAZ,mBAAmBC,EAAUC,MAC5B,SAhBP,IAkBC,CAAChZ,EAAoB8M,EAAYwL,EAAeR,EAAME,IAEnDiB,EAAkB,SAACC,GAAD,OAAiB,WACvC,OAAQZ,GACN,KAAKhN,GAAe6M,MAClBF,GAAW,SAACa,GAAD,OAAUK,aAAUL,EAAMI,MACrC,MACF,KAAK5N,GAAe8M,KAClBH,GAAW,SAACa,GAAD,OAAUM,aAASN,EAAMI,MACpC,MACF,KAAK5N,GAAe5R,SAClBqe,GAAQ,SAACe,GACP,IAAI3X,EAAS2X,EAAOI,EAMpB,OAJK/X,EAAS,GAAKyW,GAAY9K,EAAW/L,SAAQI,EAAS2X,GAEvD3X,GAAU,IAAGA,EAAS,GAEnBA,QAMTkY,EAAc,WAClBpB,EAAWT,MACXO,EAAQ,IAGJuB,EAAiBlL,OAAOmL,QAAQf,GAEtC,OACE,mCACE,eAACgB,GAAA,EAAD,CAAMve,MAAO,CAAEwe,oBAAqB,EAAGC,qBAAsB,GAA7D,UACE,cAACC,GAAA,EAAD,CACEC,mBAAiB,EACjB3hB,MACE,sBACEgD,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLshB,SAAU,QALd,UAQE,sBACE5e,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNc,WAAY,SACZZ,IAAK,MACLshB,SAAU,UANd,UASE,cAAC3E,GAAA,EAAD,CAAQva,QAAQ,WAAWqW,QAASqI,EAApC,mBAGA,sBAAKpe,MAAO,CAAElC,MAAO,IAArB,UACE,cAACsZ,GAAA,EAAD,CAAYlS,KAAK,QAAQ6Q,QAASiI,GAAiB,GAAnD,SACE,cAAC,KAAD,MAEF,cAAC5G,GAAA,EAAD,CAAYlS,KAAK,QAAQ6Q,QAASiI,EAAgB,GAAlD,SACE,cAAC,KAAD,SAGHX,IAAkBhN,GAAe8M,MAChC,cAAC1d,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACGoa,aAAOiD,EAAS,UAGpBM,IAAkBhN,GAAe6M,OAChC,cAACzd,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACGoa,aAAOiD,EAAS,cAGpBM,IAAkBhN,GAAe5R,UAChC,cAACgB,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAA6Bmd,EAAOF,GAAY,EAAhD,aACGE,EAAO,GAAKF,GAAY9K,EAAW/L,OAChC+L,EAAW/L,QACV+W,EAAO,GAAKF,GAHnB,eAIO9K,EAAW/L,aAGtB,cAAC,GAAD,CAAe1C,UAAWA,IAC1B,cAACyb,GAAA,EAAD,CAAanf,QAAQ,WAAWof,aAAW,EAAC5Z,KAAK,QAAjD,SACE,eAAC6Z,GAAA,EAAD,CACEjf,MAAOud,EACP2B,SAAU,SAAChP,GACT,IAAMiN,EAASjN,EAAM2J,OAAO7Z,MAE5Bwd,EAAiBL,GACjBmB,IAEA1b,aAAasH,QACX,yBACAiT,EAAO7b,aAVb,UAcE,cAAC6d,GAAA,EAAD,CAAUnf,MAAOuQ,GAAe6M,MAAhC,mBACA,cAAC+B,GAAA,EAAD,CAAUnf,MAAOuQ,GAAe8M,KAAhC,kBACA,cAAC8B,GAAA,EAAD,CAAUnf,MAAOuQ,GAAe5R,SAAhC,gCAMV,eAACygB,GAAA,EAAD,CAAalf,MAAO,CAAExC,QAAS,GAA/B,UACG6gB,EAAe7V,KAAI,WAAiBC,GAAjB,wBAAEsV,EAAF,KAASoB,EAAT,YAClB,cAACC,GAAA,EAAD,CAEEC,UAAW,cAACC,GAAA,EAAD,CAAelf,UAAU,MAAzB,SAAgC2d,IAC3Cxe,UAAWH,EAAQzD,KAHrB,SAKGwjB,EAAM3W,KAAI,SAACsN,GAAD,OACT,cAAC,GAAD,CAEEzQ,UAAWyQ,GAFb,uBACuBA,EAAKnL,SAPhC,wBACwBlC,QAYxBrF,GAAuC,IAA1Bib,EAAevY,QAC5B,cAACsZ,GAAA,EAAD,CAAkC7f,UAAWH,EAAQzD,KAArD,SACE,cAAC4a,GAAA,EAAD,UACE,cAACE,GAAA,EAAD,CACEpb,QACE,2DAJR,gC,2HQtQNkkB,GAAWrF,aAAW,CAC1Bve,KAAM,CACJ6B,QAAS,EACTmC,MAAO6f,KAAI,KACX,YAAa,CACX7f,MAAO6f,KAAI,OAGfC,QAAS,IARMvF,EASd,SAACre,GAAD,OAAuB,cAAC6jB,GAAA,EAAD,aAAO/f,MAAM,WAAc9D,OAE/C8jB,GAAYzF,aAAW,CAC3Bve,KAAM,CACJ6B,QAAS,EACTmC,MAAOigB,KAAK,KACZ,YAAa,CACXjgB,MAAOigB,KAAK,OAGhBH,QAAS,IAROvF,EASf,SAACre,GAAD,OAAuB,cAAC6jB,GAAA,EAAD,aAAO/f,MAAM,WAAc9D,OAE/CgkB,GAAc3F,aAAW,CAC7Bve,KAAM,CACJ6B,QAAS,EACTmC,MAAOmgB,KAAO,KACd,YAAa,CACXngB,MAAOmgB,KAAO,OAGlBL,QAAS,IARSvF,EASjB,SAACre,GAAD,OAAuB,cAAC6jB,GAAA,EAAD,aAAO/f,MAAM,WAAc9D,OAE/CkkB,GAAiB7F,aAAW,CAChCve,KAAM,CACJ6B,QAAS,EACTmC,MAAOqgB,KAAU,KACjB,YAAa,CACXrgB,MAAOqgB,KAAU,OAGrBP,QAAS,IARYvF,EASpB,SAACre,GAAD,OAAuB,cAAC6jB,GAAA,EAAD,aAAO/f,MAAM,WAAc9D,OAE/CokB,GAAc/F,aAAW,CAC7Bve,KAAM,CACJ6B,QAAS,EACTmC,MAAOugB,KAAO,KACd,YAAa,CACXvgB,MAAOugB,KAAO,OAGlBT,QAAS,IARSvF,EASjB,SAACre,GAAD,OAAuB,cAAC6jB,GAAA,EAAD,aAAO/f,MAAM,WAAc9D,OAsEtCskB,GApEO,SAAC,GAAwC,IAAtCrgB,EAAqC,EAArCA,MAAOkf,EAA8B,EAA9BA,SAAU1H,EAAoB,EAApBA,SACxC,EAA0ClD,mBAAwBtU,GAAlE,oBAAOsgB,EAAP,KAAsBC,EAAtB,KAEA9X,qBAAU,WACJzI,IAAUsgB,GACZC,EAAiBvgB,KAElB,CAACA,EAAOsgB,IAEX,IAAME,EAAe,SAACtQ,GAChBgP,GACFA,EAAShP,GAEXqQ,EAAiBrQ,EAAM2J,OAAO7Z,QAGhC,OACE,sBAAKE,MAAO,CAAEugB,UAAW,QAASC,WAAY,UAA9C,UACE,cAAC/gB,EAAA,EAAD,CAAYC,QAAQ,UAAUM,MAAO,CAAC9C,WAAY,EAAGR,YAAa,GAAlE,mBACA,cAAC6iB,GAAD,CACEjI,SAAUA,EACVmI,QAASW,IAAkBZ,KAAI,KAC/BR,SAAUsB,EACVxgB,MAAO0f,KAAI,KACXjW,KAAK,iBACLrE,KAAK,QACLub,WAAY,CAAE,aAAc,SAE9B,cAACR,GAAD,CACE3I,SAAUA,EACVmI,QAASW,IAAkBF,KAAO,KAClClB,SAAUsB,EACVxgB,MAAOogB,KAAO,KACd3W,KAAK,iBACLrE,KAAK,QACLub,WAAY,CAAE,aAAc,YAE9B,cAACZ,GAAD,CACEvI,SAAUA,EACVmI,QAASW,IAAkBN,KAAO,KAClCd,SAAUsB,EACVxgB,MAAOggB,KAAO,KACdvW,KAAK,iBACLrE,KAAK,QACLub,WAAY,CAAE,aAAc,YAE9B,cAACd,GAAD,CACErI,SAAUA,EACVmI,QAASW,IAAkBR,KAAK,KAChCZ,SAAUsB,EACVxgB,MAAO8f,KAAK,KACZrW,KAAK,iBACLrE,KAAK,QACLub,WAAY,CAAE,aAAc,UAE9B,cAACV,GAAD,CACEzI,SAAUA,EACVmI,QAASW,IAAkBJ,KAAU,KACrChB,SAAUsB,EACVxgB,MAAOkgB,KAAU,KACjBzW,KAAK,iBACLrE,KAAK,QACLub,WAAY,CAAE,aAAc,oB,oBCtH9BpkB,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACToB,WAAY,UAEdwiB,QAAS,CACPC,OAAQzlB,EAAMyB,QAAQ,GACtB2C,SAAU,YAEZshB,eAAgB,CACdjhB,MAAOkhB,KAAK,KACZvhB,SAAU,WACVgc,IAAK,MACLE,KAAM,MACNve,WAAY,GACZC,YAAa,SA2BJ4jB,GAtBW,SAAC,GAAwC,IAAtC1d,EAAqC,EAArCA,UAAW2S,EAA0B,EAA1BA,QAAS7V,EAAiB,EAAjBA,MACzCd,EAAU/C,KAEhB,OACE,qBAAKkD,UAAWH,EAAQzD,KAAxB,SACE,sBAAK4D,UAAWH,EAAQshB,QAAxB,UACE,cAACzG,GAAA,EAAD,CACEta,MAAM,UACND,QAAQ,YACR4X,SAAUlU,EACV2S,QAASA,EAJX,SAMG7V,IAEFkD,GACC,cAACwY,GAAA,EAAD,CAAkB1W,KAAM,GAAI3F,UAAWH,EAAQwhB,uB,sBCoD1CG,GArEY,SAAC,GAIK,IAAD,IAH9BC,cAG8B,MAHrB,GAGqB,EAF9BpI,EAE8B,EAF9BA,QACAqI,EAC8B,EAD9BA,UAEM/lB,EAAQuc,eACRC,EAAaC,aAAczc,EAAM0c,YAAYC,KAAK,OAElDC,EAAOkJ,EAAOlb,OAAS,EAE7B,GAAsB,IAAlBkb,EAAOlb,OAAc,OAAO,KAEhC,IAAMob,IAAYF,EAAOxT,MAAK,SAACC,GAAD,MAAsB,UAAfA,EAAE0T,YAEvC,OACE,eAACzI,GAAA,EAAD,CACEhB,WAAYA,EACZ3Z,SAAS,KACT4a,WAAW,EACXb,KAAMA,EACNc,QAASA,EALX,UAOE,cAACC,GAAA,EAAD,UACE,sBAAK7Y,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,UACE,qBAAK4C,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,mCACA,cAAC,GAAD,SAGJ,cAAC0b,GAAA,EAAD,CACE9Y,MAAO,CAAElD,QAAS,OAAQyD,cAAe,SAAUjD,IAAK,OAD1D,SAGG0jB,EAAOxY,KAAI,SAAC4Y,EAAO3Y,GAAR,OACV,cAAC4Y,GAAA,EAAD,CAEEF,SAAUC,EAAMD,SAChBlI,OACEmI,EAAME,aACNF,EAAMG,YACJ,cAACtH,GAAA,EAAD,CACEta,MAAM,UACNS,UAAWohB,IACXlhB,GAAI8gB,EAAMG,WACVrc,KAAK,QAJP,SAMGkc,EAAME,cAZf,SAiBGF,EAAMhL,SAjBT,qBACqB3N,SAoBzB,eAACuR,GAAA,EAAD,CACEha,MAAO,CAAEhC,YAAa,GAAI6Y,aAAc,GAAInZ,WAAY,IAD1D,UAGE,cAACuc,GAAA,EAAD,CAAQlE,QAAS6C,EAASjZ,MAAM,UAAhC,oBAGEuhB,GACA,cAACjH,GAAA,EAAD,CAAQlE,QAASkL,EAAWthB,MAAM,YAAYD,QAAQ,YAAtD,qC,gFCpDK+hB,GAxBK,SAAC5lB,GACnB,IAAQ6lB,EAAiC7lB,EAAjC6lB,SAAU1C,EAAuBnjB,EAAvBmjB,SAAa2C,EAA/B,aAAyC9lB,EAAzC,IAEA,OACE,cAAC,KAAD,2BACM8lB,GADN,IAEEC,YAAaF,EACbG,cAAe,SAACzO,GACd4L,EAAS,CACPrF,OAAQ,CACNpQ,KAAM1N,EAAM0N,KACZzJ,MAAOsT,EAAOtT,UAIpBgiB,mBAAiB,EACjBC,iBAAe,EACfC,eAAe,EACfC,aAAc,EACdC,OAAO,O,8FJ3BDhG,O,mBAAAA,I,eAAAA,I,aAAAA,I,iBAAAA,I,sBAAAA,Q,cAQAC,O,aAAAA,I,eAAAA,I,iBAAAA,I,eAAAA,I,oBAAAA,Q,cAQAC,O,qBAAAA,I,uBAAAA,I,iBAAAA,I,iBAAAA,I,aAAAA,I,eAAAA,I,eAAAA,I,mBAAAA,I,yBAAAA,I,qBAAAA,I,wBAAAA,I,yBAAAA,Q,cAeAC,O,WAAAA,I,YAAAA,Q,cAKAC,O,mBAAAA,I,mBAAAA,I,qBAAAA,I,yBAAAA,I,uBAAAA,I,mBAAAA,I,wBAAAA,Q,KKlCL,IAAM6F,GAAY,CACvB7F,GAAS8F,OACT9F,GAAS+F,OACT/F,GAASgG,QACThG,GAASiG,UACTjG,GAASkG,SACTlG,GAASmG,OACTnG,GAASoG,UAGEC,IAAU,sBACpBrG,GAAS8F,OAAS,KADE,gBAEpB9F,GAAS+F,OAAS,KAFE,gBAGpB/F,GAASgG,QAAU,KAHC,gBAIpBhG,GAASiG,UAAY,KAJD,gBAKpBjG,GAASkG,SAAW,KALA,gBAMpBlG,GAASmG,OAAS,KANE,gBAOpBnG,GAASoG,SAAW,KAPA,IAkBVE,GAAc,CACzBxG,GAAQyG,QACRzG,GAAQ0G,SACR1G,GAAQ2G,MACR3G,GAAQ4G,MACR5G,GAAQ6G,IACR7G,GAAQ8G,KACR9G,GAAQ+G,KACR/G,GAAQgH,OACRhH,GAAQiH,UACRjH,GAAQkH,QACRlH,GAAQmH,SACRnH,GAAQoH,UAGGC,IAAY,sBACtBrH,GAAQyG,QAAU,WADI,gBAEtBzG,GAAQ0G,SAAW,YAFG,gBAGtB1G,GAAQ2G,MAAQ,SAHM,gBAItB3G,GAAQ4G,MAAQ,SAJM,gBAKtB5G,GAAQ6G,IAAM,OALQ,gBAMtB7G,GAAQ8G,KAAO,QANO,gBAOtB9G,GAAQ+G,KAAO,QAPO,gBAQtB/G,GAAQgH,OAAS,UARK,gBAStBhH,GAAQiH,UAAY,aATE,gBAUtBjH,GAAQkH,QAAU,WAVI,gBAWtBlH,GAAQmH,SAAW,YAXG,gBAYtBnH,GAAQoH,SAAW,YAZG,I,UCnCnBE,GAAgB,I,QAAIC,GAepBC,GAAe,cAERC,GAAiC,CAC5C5G,OAAQd,GAAiB2H,IACzB1T,MAAO,EACP2T,KAAM,GACNC,OAAQ,EACRC,OAAQ5H,GAAQ6H,GAChBC,SAAU,CAAC7H,GAAS+F,QACpB+B,OAAQ,CAAChI,GAAQyG,SACjBwB,UAAW,CAAC,GACZC,WAAYV,GACZW,YAAaC,KAAUpjB,SAASwiB,GAAc,CAAEa,SAAS,KAG9CC,GAA0B,SAACC,GACtC,IAAIL,EAAaK,EAAML,WAEvB,GAAIK,EAAM1H,SAAWd,GAAiByI,OAAQ,CAC5C,IAAIC,EAAoC,CAAC,GAAI,GAAI,GAAI,GAAI,IAYzD,GAVIF,EAAMV,SAAW5H,GAAQ6H,KAC3BW,EAAkB3I,GAAqB4I,MAAM,GAC5B,KAAfH,EAAMZ,KAAc,EAAIY,EAAMZ,MAE9BY,EAAMV,SAAW5H,GAAQ0I,KAC3BF,EAAkB3I,GAAqB4I,MAAM,GAC5B,KAAfH,EAAMZ,KAAc,GAAKY,EAAMZ,KAAO,IAE1Cc,EAAkB3I,GAAqB8I,QAAQ,GAAKL,EAAMX,OAEtDW,EAAM1H,SAAWd,GAAiB2H,IACpCe,EAAkB3I,GAAqB4H,KAAOmB,GAC5CC,MAAMlc,KAAKkc,MAAM,IAAIC,QAAQ3c,KAAI,SAACiF,GAAD,OAAOA,EAAI,KAC5CkX,EAAMvU,OAGRyU,EAAkB3I,GAAqBgB,OAAS0F,GAAYpa,KAC1D,SAACiF,GAAD,OAAOA,EAAI,KAGboX,EAAkB3I,GAAqBkJ,SAAWjD,QAC7C,GAAIwC,EAAM1H,SAAWd,GAAiBkJ,KAAM,CACjD,IAAMC,EAAuBL,GAC3BC,MAAMlc,KAAKkc,MAAM,IAAIC,QAAQ3c,KAAI,SAACiF,GAAD,OAAOA,EAAI,KAC9B,EAAdkX,EAAMvU,OAGRyU,EAAkB3I,GAAqB4H,KAAOwB,EAC3C9c,KAAI,SAAC+c,GAAD,OACHN,GACEC,MAAMlc,KAAKkc,MAAM,GAAGC,QAAQ3c,KAAI,SAACiF,GAAD,OAAOA,EAAI8X,KAC3C,MAGH3H,QAAO,SAAC4H,EAAKC,GAAN,OAAiBD,EAAI9Q,OAAO+Q,KAAS,IAC5CnW,QAAO,SAAC7B,GAAD,OAAOA,GAAK,MAEtBoX,EAAkB3I,GAAqBgB,OAAS0F,GAAYpa,KAC1D,SAACiF,GAAD,OAAOA,EAAI,KAGboX,EAAkB3I,GAAqBkJ,SAAWT,EAAMR,cAC/CQ,EAAM1H,SAAWd,GAAiBe,OAC3C2H,EAAkB3I,GAAqB4H,KAAOa,EAAMN,UAEpDQ,EAAkB3I,GAAqBgB,OAAS+H,GAC9CrC,GAAYpa,KAAI,SAACiF,GAAD,OAAOA,EAAI,KAC3BkX,EAAMvU,OAGRyU,EAAkB3I,GAAqBkJ,SAAWjD,IACzCwC,EAAM1H,SAAWd,GAAiBgB,OAC3C0H,EAAkB3I,GAAqB4H,KAAOa,EAAMN,UAEpDQ,EAAkB3I,GAAqBgB,OAASyH,EAAMP,OAAO5b,KAC3D,SAACiF,GAAD,OAAOA,EAAI,KAGboX,EAAkB3I,GAAqBkJ,SAAWjD,IAGpDmC,EAAaZ,GAAcgC,UAAUb,GAAmBzjB,WAG1D,MAAO,CACLkjB,aACAC,YAAaC,KAAUpjB,SAASkjB,EAAY,CAAEG,SAAS,MAI3D,SAASQ,GAAkBU,EAAiBC,GAE1C,IADA,IAAM1f,EAAmB,GAChBuC,EAAQ,EAAGA,EAAQkd,EAAM7f,OAAQ2C,GAASmd,EACjD1f,EAAOqF,KAAKoa,EAAMld,IAGpB,OAAOvC,EC5ET,ICVK2f,GDUCxpB,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXupB,YAAY,cACVnF,OAAQ,GAEPzlB,EAAM0c,YAAYC,KAAK,MAAQ,CAC9B9Z,SAAU,yBAsgBHgoB,GA1fgC,SAAC,GAIzC,IAHLjmB,EAGI,EAHJA,MACAkf,EAEI,EAFJA,SACA1H,EACI,EADJA,SAEA,EAAwBlD,oBAAS,GAAjC,oBAAO0D,EAAP,KAAaC,EAAb,KACA,EAA4B3D,mBAAqBtU,GAAjD,oBAAOkmB,EAAP,KAAeC,EAAf,KAEMC,EFlD2B,SAACC,GAAD,iCAChChK,GAAiB2H,IAAMqC,EAAa,EAAI,OAAS,OADjB,eAEhChK,GAAiBkJ,KAAOc,EAAa,EAAI,QAAU,QAFnB,eAGhChK,GAAiBe,MAAQiJ,EAAa,EAAI,SAAW,SAHrB,eAIhChK,GAAiBgB,KAAOgJ,EAAa,EAAI,QAAU,QAJnB,eAKhChK,GAAiByI,OAAS,YALM,EEkDRwB,CAAoBJ,EAAO5V,OAEpD,EAAkCgE,mBAAwB,MAA1D,oBAAOiS,EAAP,KAAkBC,EAAlB,KAEA/d,qBAAU,WACR0d,EAAUnmB,KACT,CAACA,IAEJ,IAAMV,EAAU/C,KACVnB,EAAQuc,eAMR8O,EAAc,WAHlBN,EAAUnmB,GAKViY,GAAQ,IAGJyO,EAAoB,SAACC,EAAmB3mB,GAC5C,IAAM4mB,EAAQ,2BAAQV,GAAR,mBAAiBS,EAAY3mB,IACrC6mB,EAAOjC,GAAwBgC,GAErCT,EAAU,2BAAKS,GAAaC,KAkBxBC,EAAuB,SAACC,GAAD,OAAuB,SAAC7W,GACnD,IAAI9J,EAAS8f,EAAO5V,MAAQyW,EAExB3gB,GAAU,IAAGA,EAAS,GAE1BsgB,EAAkB,QAAStgB,KAiBvB4gB,EAAwB,SAACC,GAAD,OAAiB,WAC7C,GAAIf,EAAO3B,UAAU9f,SAASwiB,GAAM,CAClC,GAAIf,EAAO3B,UAAUve,QAAU,EAC7B,OAEF0gB,EACE,YACAR,EAAO3B,UAAU/U,QAAO,SAAC7B,GAAD,OAAOA,IAAMsZ,WAGvCP,EAAkB,YAAD,uBAAkBR,EAAO3B,WAAzB,CAAoC0C,OAInDC,EAAqB,SAACC,GAAD,OAAoB,WAC7C,GAAIjB,EAAO5B,OAAO7f,SAAS0iB,GAAQ,CACjC,GAAIjB,EAAO5B,OAAOte,QAAU,EAC1B,OAEF0gB,EACE,SACAR,EAAO5B,OAAO9U,QAAO,SAAC7B,GAAD,OAAOA,IAAMwZ,WAGpCT,EAAkB,SAAD,uBAAeR,EAAO5B,QAAtB,CAA8B6C,OAmCnD,OACE,qCACE,cAAC7P,GAAA,EAAD,CACEgC,aAAW,uBACXrD,QAAS,kBAAMgC,GAAQ,IACvBV,KAAK,MACLC,SAAUA,EAJZ,SAME,cAAC,KAAD,MAEF,eAACoB,GAAA,EAAD,CACEwO,OAAO,OACPvO,WAAW,EACXvZ,QAAS,CACP+nB,MAAO/nB,EAAQ0mB,aAEjB/nB,SAAU,KACV+Z,KAAMA,EACNc,QAAS2N,EACTa,kBAAgB,+BATlB,UAWE,eAACvO,GAAA,EAAD,CACE8F,mBAAiB,EACjBhU,GAAG,+BACH3K,MAAO,CAAEnD,OAAQ,IAAKsB,gBAAiBjD,EAAME,QAAQC,QAAQgsB,MAH/D,UAKE,cAAC5nB,EAAA,EAAD,CACEW,UAAU,KACVV,QAAQ,KACRM,MAAO,CAAEL,MAAOzE,EAAME,QAAQC,QAAQisB,cAHxC,wBAOA,cAAC7nB,EAAA,EAAD,CACEW,UAAU,KACVV,QAAQ,UACRM,MAAO,CAAEL,MAAOzE,EAAME,QAAQC,QAAQisB,cAHxC,2EAQF,eAACxO,GAAA,EAAD,CAAe9Y,MAAO,CAAEunB,UAAW,KAAnC,UACE,sBAAKvnB,MAAO,CAAElD,QAAS,OAAQoB,WAAY,SAAUZ,IAAK,OAA1D,UACE,cAACmC,EAAA,EAAD,CAAYC,QAAQ,YAApB,0BACA,cAAC8nB,GAAA,EAAD,CACE7G,OAAO,QACPjhB,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BqC,MAAOkmB,EAAO5V,MACd0O,aAAW,EACXE,SAAU,SAAChP,GAAD,OACRwW,EAAkB,SAAUxW,EAAM2J,OAAO7Z,QAE3CwX,SAAU,CACR6E,GAAiBgB,KACjBhB,GAAiByI,QACjBrgB,SAASyhB,EAAO/I,QAClBwK,WAAY,CACVC,eAAgBjG,GAChBkG,eACE,cAACC,GAAA,EAAD,CAAgBtoB,SAAS,QAAzB,SACE,cAAC8X,GAAA,EAAD,CACElS,KAAK,QACLkU,aAAW,kBACXrD,QAAS6Q,GAAsB,GAC/BvP,KAAK,QACLC,SAAU,CACR6E,GAAiBgB,KACjBhB,GAAiByI,QACjBrgB,SAASyhB,EAAO/I,QARpB,SAUE,cAAC,KAAD,QAIN4K,aACE,cAACD,GAAA,EAAD,CAAgBtoB,SAAS,MAAzB,SACE,cAAC8X,GAAA,EAAD,CACElS,KAAK,QACLkU,aAAW,kBACXrD,QAAS6Q,EAAqB,GAC9BvP,KAAK,MACLC,SAAU,CACR6E,GAAiBgB,KACjBhB,GAAiByI,QACjBrgB,SAASyhB,EAAO/I,QARpB,SAUE,cAAC,KAAD,WAMV,cAAC4B,GAAA,EAAD,CACEnf,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,IAC5BkjB,OAAO,QACP7B,aAAW,EALb,SAOE,eAACC,GAAA,EAAD,CAAQjf,MAAOkmB,EAAO/I,OAAQ+B,SArMf,SAAChP,GAC1B,IAAMiN,EAASjN,EAAM2J,OAAO7Z,MAExBsQ,EAAQ4V,EAAO5V,MAEf,CAAC+L,GAAiBgB,KAAMhB,GAAiByI,QAAQrgB,SAAS0Y,KAC5D7M,EAAQ,GAGV,IAAMsW,EAAQ,2BAAQV,GAAR,IAAgB/I,SAAQ7M,UAChCuW,EAAOjC,GAAwBgC,GAErCT,EAAU,2BAAKS,GAAaC,KAyLlB,UACE,cAAC1H,GAAA,EAAD,CAAUnf,MAAOqc,GAAiB2H,IAAlC,SACGoC,EAAiB/J,GAAiB2H,OAErC,cAAC7E,GAAA,EAAD,CAAUnf,MAAOqc,GAAiBkJ,KAAlC,SACGa,EAAiB/J,GAAiBkJ,QAErC,cAACpG,GAAA,EAAD,CAAUnf,MAAOqc,GAAiBe,MAAlC,SACGgJ,EAAiB/J,GAAiBe,SAErC,cAAC+B,GAAA,EAAD,CAAUnf,MAAOqc,GAAiBgB,KAAlC,SACG+I,EAAiB/J,GAAiBgB,QAErC,cAAC8B,GAAA,EAAD,CAAUnf,MAAOqc,GAAiByI,OAAlC,SACGsB,EAAiB/J,GAAiByI,kBAM1CoB,EAAO/I,SAAWd,GAAiBkJ,MAClC,qCACE,qBACErlB,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,GALhB,SAQE,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,YAApB,yBAEF,qBACEM,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,GALhB,SAQGykB,GAAU3Z,KAAI,SAACsf,EAAMrf,GAAP,OACb,cAACxD,GAAA,EAAD,CAEE/E,MAAOyiB,GAAWmF,GAClB5iB,KAAK,QACL6iB,WAAS,EACTpoB,MACEqmB,EAAO7B,SAAS5f,SAASujB,GAAQ,UAAY,UAE/C/R,SA/NYgR,EA+NkBe,EA/NA,WAC9C,GAAI9B,EAAO7B,SAAS5f,SAASwiB,GAAM,CACjC,GAAIf,EAAO7B,SAASre,QAAU,EAC5B,OAEF0gB,EACE,WACAR,EAAO7B,SAAS7U,QAAO,SAAC7B,GAAD,OAAOA,IAAMsZ,WAGtCP,EAAkB,WAAD,uBAAiBR,EAAO7B,UAAxB,CAAkC4C,QA6MvC,oBACoBte,IAxNP,IAACse,UAsOrB,CAAC5K,GAAiBe,MAAOf,GAAiBgB,MAAM5Y,SAC/CyhB,EAAO/I,SAEP,mCACE,qBACEjd,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,GALhB,SAQE,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,YAApB,2BAKLsmB,EAAO/I,SAAWd,GAAiBgB,MAClC,mCACE,qBACEnd,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,EACZkhB,SAAU,QANd,SASGgE,GAAYpa,KAAI,SAACye,EAAOxe,GAAR,OACf,cAACxD,GAAA,EAAD,CAEE/E,MAAOujB,GAAawD,GACpB/hB,KAAK,QACL6iB,WAAS,EACTpoB,MACEqmB,EAAO5B,OAAO7f,SAAS0iB,GAAS,UAAY,UAE9ClR,QAASiR,EAAmBC,IAR9B,qBACqBxe,WAc5B,CAAC0T,GAAiBe,MAAOf,GAAiBgB,MAAM5Y,SAC/CyhB,EAAO/I,SAEP,mCACE,qBACEjd,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,EACZkhB,SAAU,QANd,SASGsG,MAAMlc,KAAKkc,MAAM,IAAIC,QAAQ3c,KAAI,SAACue,EAAKte,GAAN,OAChC,cAACxD,GAAA,EAAD,CAEE/E,OAAQ6mB,EAAM,GAAG3lB,WAAW4mB,SAAS,EAAG,KACxC9iB,KAAK,QACL6iB,WAAS,EACTpoB,MACEqmB,EAAO3B,UAAU9f,SAASwiB,EAAM,GAAK,UAAY,UAEnDhR,QAAS+Q,EAAsBC,EAAM,IARvC,oBACoBte,WAc3Bud,EAAO/I,SAAWd,GAAiByI,QAClC,qCACE,qBACE5kB,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,IALhB,SAQE,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,YAApB,yBAEF,sBACEM,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,OAJT,UAOE,cAACuhB,GAAA,EAAD,CACEnf,QAAQ,SACRM,MAAO,CAAE5C,KAAM,EAAGW,SAAU,IAC5B4iB,OAAO,QACP7B,aAAW,EAJb,SAME,cAACC,GAAA,EAAD,CACEjf,MAAOkmB,EAAOjC,KACd/E,SAAU,SAAChP,GAAD,OACRwW,EACE,OACAhiB,SAASwL,EAAM2J,OAAO7Z,SAL5B,SASGolB,MAAMlc,KAAKkc,MAAM,IAAIC,QACnB8C,UACAzf,KAAI,SAAC1I,GAAD,OACH,cAACmf,GAAA,EAAD,CAAqCnf,MAAOA,EAAQ,EAApD,SACGA,EAAQ,GADX,oBAA4BA,WAMpC,cAACL,EAAA,EAAD,CAAYC,QAAQ,YAApB,eACA,cAACmf,GAAA,EAAD,CACEnf,QAAQ,SACRM,MAAO,CAAE5C,KAAM,EAAGW,SAAU,IAC5B4iB,OAAO,QACP7B,aAAW,EAJb,SAME,cAACC,GAAA,EAAD,CACEjf,MAAOkmB,EAAOhC,OACdhF,SAAU,SAAChP,GAAD,OACRwW,EACE,SACAhiB,SAASwL,EAAM2J,OAAO7Z,SAL5B,SASGolB,MAAMlc,KAAKkc,MAAM,IAAIC,QACnB7V,QAAO,SAAC7B,GAAD,OAAOA,EAAI,IAAM,KACxBjF,KAAI,SAAC1I,GAAD,OACH,cAACmf,GAAA,EAAD,CAAuCnf,MAAOA,EAA9C,SACGA,EAAMsB,WAAW4mB,SAAS,EAAG,MADhC,sBAA8BloB,WAMtC,cAAC+e,GAAA,EAAD,CACEnf,QAAQ,SACRM,MAAO,CAAE5C,KAAM,EAAGW,SAAU,IAC5B4iB,OAAO,QACP7B,aAAW,EAJb,SAME,eAACC,GAAA,EAAD,CACEjf,MAAOkmB,EAAO/B,OACdjF,SAAU,SAAChP,GAAD,OACRwW,EAAkB,SAAUxW,EAAM2J,OAAO7Z,QAH7C,UAME,cAACmf,GAAA,EAAD,CAAUnf,MAAOuc,GAAQ6H,GAAzB,gBACA,cAACjF,GAAA,EAAD,CAAUnf,MAAOuc,GAAQ0I,GAAzB,2BAOTiB,EAAO/I,SAAWd,GAAiByI,QAClC,qCACE,qBACE5kB,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,MACLI,WAAY,IALhB,SAQE,eAAC+B,EAAA,EAAD,CAAYC,QAAQ,YAApB,kDAEE,cAACW,GAAA,EAAD,CACED,UAAU,IACVuZ,OAAO,SACPE,IAAI,sBACJD,KAAK,qCAJP,uBAUJ,qBACE5Z,MAAO,CACLlD,QAAS,OACToB,WAAY,SACZZ,IAAK,OAJT,SAOE,cAACkqB,GAAA,EAAD,CACE7G,OAAO,QACPzgB,MAAM,aACNR,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BuhB,SAhYe,SAAChP,GAC9B,IAAMsU,EAAatU,EAAM2J,OAAO7Z,MAEhCwmB,EAAa,MAEbL,GAAU,SAACpI,GAAD,mBAAC,eAAeA,GAAhB,IAAsByG,kBAChC,IACE,IAAMC,EAAcC,KAAUpjB,SAASkjB,EAAY,CAAEG,SAAS,IAE9DwB,GAAU,SAACpI,GAAD,mBAAC,eAAeA,GAAhB,IAAsB0G,mBAChC,MAAO3f,GACP,IAAIwR,EAAU,IACiBA,EAAV,kBAAVxR,EAA8BA,EAC1BA,EAAMwR,SAET7R,SAAS,aAAY6R,EAAUA,EAAQhQ,QAAQ,UAAW,KAEtE6f,GAAU,SAACpI,GAAD,mBAAC,eAAeA,GAAhB,IAAsB0G,YAAa,QAC7C+B,EAAalQ,KA+WDxR,QAAOyhB,EACPvmB,MAAOkmB,EAAO1B,WACd4D,WAAY7B,GAAwBL,EAAOzB,sBAMrD,eAACvK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQlE,QAASwQ,EAAa5mB,MAAM,UAApC,oBAGA,cAACsa,GAAA,EAAD,CAAQlE,QAvXO,WACrB,GAAIiQ,EAAO/I,SAAWd,GAAiByI,SAAUyB,EAAjD,CAEA,IAAMM,EAAOjC,GAAwBsB,GAErChH,EAAS,CAAErF,OAAQ,CAAE7Z,MAAM,2BAAMkmB,GAAWW,MAC5CJ,MAiXuC5mB,MAAM,UAAvC,0BEtiBGwoB,GAAsB,yCAAG,WACpCC,EACA1d,EACAxH,EACAmlB,GAJoC,0CAAA9kB,EAAA,6DAO9B+kB,EAAkB7gB,KAAUuB,KAAK,GAEjCqJ,EAAY,IAAIC,gBAAapP,EAASwF,QATR,SAWjB2J,EAAUE,QAC3B9K,KAAUuB,KAAKof,EAAa5V,oBAZM,cAW9BzH,EAX8B,OAe9B7E,EAAqC,GAErCqiB,EAAqBH,EAAa3U,aACnC2U,EAAaI,aACd,EAnBgC,SAsBFzd,EAAK0d,yBAtBH,qBAsB6BC,IAC/DH,IAIAriB,EAAOqF,KAAK,CACV6K,QAAQ,kBAAD,OAAoB/O,GACzBI,KAAUuB,KAAKuf,GACf,GAFK,YAGqB,IAAvBA,EAA2B,YAAc,aAHvC,SAIPpH,SAAU,QACVG,YAAa,gBACbC,WAAY,WAIV9O,EAAsB,IAAIlE,SAAMC,UACpC9D,EAASgI,KACTC,mBACAyV,EAAaO,eACbP,EAAavV,gBAGTxN,EAAY,IAAIyN,aACpBT,EAAU3J,OACVqC,EACAL,EAASnE,QACTkM,EACAM,aAASqV,EAAa3c,WACtB6c,EACAD,GApDkC,UAwDThjB,EAAUujB,cAxDD,eAwD9BC,EAxD8B,SA0DlC3iB,EAAOqF,KAAK,CACV6K,QACE,6MAGF+K,SAAU,YAKR2H,EAAuB/d,EAAKgP,SAAS2O,IAAd,OAAkBG,QAAlB,IAAkBA,IAAgB,GAC3DA,IAAiBC,GACnB5iB,EAAOqF,KAAK,CACV6K,QACE,+CAAwC/O,GACtC0D,EAAKgP,SACL,GAFF,sEAIsC1S,GACpCwhB,EACA,GANF,MAQF1H,SAAU,YAKR4H,EAAcrc,aAClB,IAAIhB,KACJ9D,GAAYO,+BAGV4K,aAASqV,EAAa3c,YAAcsd,GACtC7iB,EAAOqF,KAAK,CACV6K,QAAQ,iCAAD,OAAmC3P,GACxCgB,KAAUuB,KAAKpB,GAAYO,gCADtB,gBAGPgZ,SAAU,UAKRtP,EAAauW,EAAa3U,YAC5BX,aAAUY,mBACRrO,EADF,UAEE+iB,EAAaY,kBAFf,aAEE,EAAyB1E,YACxB8D,EAAaI,cAEhB,CAACnjB,GAEC4jB,EAAgBpX,EAAWrJ,KAAI,SAACiF,GAAD,OAAOA,EAAEmB,WAE7BuE,OAAOC,OACtB5B,GAA0BvG,WAAWwG,mBACrCjE,MACA,SAAC/E,GAAD,OACEwgB,EAAc1kB,SAASkE,EAAMkC,KAC7BlC,EAAM2J,kBAAoBgW,EAAahW,qBAInCgE,EAAUgS,EAAa3U,YACzB,gDACA,sCAEJvN,EAAOqF,KAAK,CACV6K,QAASA,EACT+K,SAAU,WA7HsB,kBAiI7Bjb,GAjI6B,4CAAH,4DCQtBgjB,GAAkB,yCAAG,WAChCne,GADgC,wBAAAxH,EAAA,sEAGTwH,EAAKoe,WAHI,cAG1BA,EAH0B,gBAIEpe,EAAK0d,yBAJP,cAI1Bpf,EAJ0B,gBAKJ0B,EAAKqe,MAAM7hB,WALP,cAK1B8hB,EAL0B,iBAMNte,EAAKqe,MAAME,SANL,eAM1BC,EAN0B,OAO1BC,EAAYze,EAAKqe,MAAMK,UAPG,kBASzB,CACLhhB,MAAOsC,EAAKtC,MACZ0gB,WACAre,OAAQC,EAAKD,OACbiP,SAAUhP,EAAKgP,SACf2P,kBAAmB3e,EAAK2e,kBACxBrgB,sBACAmgB,YACAH,gBACAE,cACAtV,IAAKlJ,IAnByB,4CAAH,sDCHlB4e,GAAgB9mB,cAAuB,SAACC,EAAKC,GAAN,MAAe,CACjE6mB,MAAO,GACPC,QAAS,SAAC9e,GACR,IAAMqH,EAAkBrH,EAAKkJ,IAAIvL,OAAOC,gBAExC7F,GAAI,SAACW,GAAD,MAAY,CACdmmB,MAAM,2BACDnmB,EAAMmmB,OADN,mBAEFxX,EAFE,2BAGE3O,EAAMmmB,MAAMxX,IAHd,mBAIArH,EAAKtC,MAAMrH,WAAa2J,eAOtB+e,GAAW,SAAC5mB,GACvB,IAAMmP,EAAYrB,mBAChB,kBAAM,IAAIsB,gBAAapP,EAASwF,UAChC,CAACxF,IAGH,EAAyBymB,IACvB,SAAC1X,GAAD,MAAW,CAACA,EAAM2X,MAAM1mB,EAASwF,OAAOC,iBAAkBsJ,EAAM4X,WAChE/Y,MAFF,oBAAO8Y,EAAP,KAAcC,EAAd,KAKME,EAAY5Y,sBAAW,wBAAC,6BAAA5N,EAAA,sEACR8O,EAAU2X,WADF,cACtBJ,EADsB,gBAGCvc,QAAQC,IAAIsc,EAAMphB,IAAI0gB,KAHvB,cAKbe,QAAQJ,GALK,2CAM3B,CAACxX,EAAWwX,IAEf,MAAO,CAAC1W,OAAOC,OAAP,OAAcwW,QAAd,IAAcA,IAAS,IAAKG,ICMhC1tB,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,IACVmsB,uBAAwB,EACxBC,wBAAyB,GAE3BC,QAAS,CACPtsB,MAAO,OACPC,SAAU,UAKVssB,GAAuC,CAC3CrB,WAAYnF,GACZ2E,aAAc,KAokBD8B,GAnjBM,WAAO,IAAD,UACnBlrB,EAAU/C,KAEhB,EAAuB0V,KAAZyB,EAAX,qBAEA,EAA4BY,mBAC1BiW,IADF,oBAAOrE,EAAP,KAAeC,EAAf,KAGA,EAA4B7R,qBAA5B,oBAAO4M,EAAP,KAAeuJ,EAAf,KAIA,EAAgDnW,oBAAkB,GAAlE,oBAAOoW,EAAP,KAAyBC,EAAzB,KAEA,EAAkCrW,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KAEMnS,EAAYqE,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAE/CyG,EAAYF,IAAa,SAAC7G,GAAD,OAAWA,EAAM+G,aAChD,EAAsC5H,IACpC,SAACa,GAAD,MAAW,CAACA,EAAMT,QAASS,EAAMxC,WACjC6P,MAFF,oBAAO9N,EAAP,KAAgB+B,EAAhB,KAKQiR,EAAoBC,cAApBD,gBA0BF0U,EAA6B,SAACjiB,GAAD,OAAmB,SAACuH,GACrDiW,GAAU,SAAC7S,GAAY,IAAD,EACduX,EAAS,8BAAQvX,QAAR,IAAQA,OAAR,EAAQA,EAAQP,sBAAhB,QAAkC,IAGjD,OAFA8X,EAAUliB,GAASuH,EAAM2J,OAAO7Z,MAEzB,2BAAKsT,GAAZ,IAAoBP,eAAgB8X,SAIlCnE,EAAoB,SAACC,GAAD,OAAuB,SAACzW,GAChDiW,GAAU,SAAC7S,GAAD,mBAAC,eAAiBA,GAAlB,mBAA2BqT,EAAYzW,EAAM2J,OAAO7Z,aAS1D8qB,EAA8B,SAAC/D,GAAD,OAAuB,SAAC7W,GAC1D,IAAI4D,IACK,OAANoS,QAAM,IAANA,OAAA,EAAAA,EAAQwC,gBAAe,OAACxC,QAAD,IAACA,OAAD,EAACA,EAAQwC,cAAe,GAAK3B,EAEnDjT,GAAY,IAAGA,EAAW,GAE9BqS,GAAU,SAAC7S,GAAD,mBAAC,eAAiBA,GAAlB,IAA0BoV,aAAc5U,EAASxS,kBAUvDgd,EAAc,WAClB6H,GAAU,SAACpI,GAAD,sBAAgBwM,QAGtBhc,GAAY,OAAN2X,QAAM,IAANA,OAAA,EAAAA,EAAQ7T,YAChBrI,KAAKG,MAAMO,EAAUwb,EAAO7T,YAAYO,KACxC,KAEEmY,EAAkBxc,EACpBA,EAAIiB,QAAO,SAAC7B,GAAD,MAAuB,aAAXA,EAAE4N,QACzB,GAEEyP,EACJzc,IAAG,OAAI2X,QAAJ,IAAIA,OAAJ,EAAIA,EAAQ2C,gBAAf,UACIta,EAAIb,MACF,SAACC,GAAD,MAAuB,aAAXA,EAAE4N,MAAuB5N,EAAElE,OAASyc,EAAO2C,yBAF7D,aACI,EAEGoC,YACH9nB,EAEA+nB,EAAmBjnB,EAAUyJ,MACjC,SAACtK,GAAD,OAAcA,EAASwF,OAAOC,mBAAhB,OAAoCqd,QAApC,IAAoCA,OAApC,EAAoCA,EAAQ5T,oBAGtD6Y,EAAe,WAiBnB,IAjB0B,IAAD,EACnBC,EACJlF,GACAA,EAAOhpB,OACPgpB,EAAO7T,YACP6T,EAAO2C,gBACP3C,EAAOva,WACPua,EAAO5T,iBACP4T,EAAOxT,kBAEH2Y,EACJnF,KACCA,EAAOvS,aACJuS,EAAOgD,cAAc,UAAEhD,EAAOwC,oBAAT,QAAyB,KAAO,GAGvD4C,GAAwB,EACnBvlB,EAAI,EAAGilB,GAAkBjlB,EAAIilB,EAAehlB,SACnDslB,MACQ,OAANpF,QAAM,IAANA,OAAA,EAAAA,EAAQnT,kBAAkBmT,EAAOnT,eAAehN,KAFSA,KAO7D,OAAOqlB,GAAWC,GAAqBC,GAGnCC,EAAc,yCAAG,qCAAA9nB,EAAA,yDACfL,EAAWa,EAAUyJ,MACzB,SAACC,GAAD,OAAOA,EAAE/E,OAAOC,mBAAT,OAA6Bqd,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQ5T,oBAGxCkZ,EAAcL,KAEhB/nB,IAAYooB,EAPK,wBAQblD,EARa,2BASdpC,GATc,IAUjB/kB,QAAS8D,IAELwmB,EAAmB/gB,EAAUwb,EAAQ7T,YAZxB,SAcEgW,GACnBC,EACAmD,EACAroB,EACAF,GAlBiB,OAcbge,EAda,OAqBnBuJ,EAAUvJ,GAEY,IAAlBA,EAAOlb,QACT0lB,IAxBiB,4CAAH,qDAsCdA,EAAqB,yCAAG,+BAAAjoB,EAAA,6DACtBL,EAAWa,EAAUyJ,MACzB,SAACC,GAAD,OAAOA,EAAE/E,OAAOC,mBAAT,OAA6Bqd,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQ5T,oBAG9C8D,GAAa,GALe,kBAQpB1C,EAAS,CACbxW,MAAOgpB,EAAQhpB,MACfiE,QAAS8D,EACToN,WAAY6T,EAAQ7T,WACpBS,eAAgBoT,EAAQ2C,eACxB9V,eAAgBmT,EAAQnT,eACxBlT,MAAOqmB,EAAQrmB,MACfqT,aAAcgT,EAAQva,UACtB2G,gBAAiBlP,EAAUwF,OAAOC,gBAClC6J,kBAAmBwT,EAAQxT,kBAC3B1S,MAAO,IACPmT,UAAWjQ,EACXyQ,YAAauS,EAAQvS,YACrBE,eAAgBqS,EAAQvS,YACpBuS,EAAQgD,WAAY1E,gBACpBrhB,EACJ2Q,SAAUoS,EAAQvS,YAAeuS,EAAQwC,kBAAgBvlB,IAxBjC,OA2B1Bmb,IA3B0B,gDA6BpBhI,EAAUC,8BAAmB,KAAMC,KAAM,KAAMF,SAErDJ,EAAgBI,EAAS,CACvB1W,QAAS,UAhCe,QAoC5BwW,GAAa,GApCe,yDAAH,qDAuC3B,OACE,qCACE,cAAC,GAAD,CACE8K,OAAQA,EACRpI,QAAS,kBAAM2R,EAAU,KACzBtJ,UArDuB,WACPgK,MAGlBO,IACAjB,EAAU,QAkDV,eAAChM,GAAA,EAAD,CAAMhf,UAAWH,EAAQzD,KAAzB,UACE,cAAC+iB,GAAA,EAAD,CAAY1hB,MAAO,WAAYic,OAAQ,cAAC,GAAD,MACvC,cAACiG,GAAA,EAAD,CAAalf,MAAO,CAAEtC,WAAY,EAAG8C,cAAe,GAApD,SACE,eAAC,KAAD,CAAyB+N,MAAOkd,KAAhC,UACE,sBACEzrB,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNE,IAAK,MACLD,eAAgB,eAChBuhB,SAAU,QANd,UASE,cAAC4I,GAAA,EAAD,CACElQ,SAAUlU,EACVud,OAAO,QACPzgB,MAAM,QACNR,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BuhB,SAAUwH,EAAkB,SAC5B1mB,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQhpB,OAAQgpB,EAAOhpB,MAAQ,KAExC,cAAC0uB,GAAA,EAAD,CACE1rB,MAAO,CACL/C,UAAW,EACX0uB,aAAc,EACdjvB,YAAa,EACbQ,WAAY,GAEd0uB,QACE,cAACC,GAAA,EAAD,CACEpM,WAAe,OAANuG,QAAM,IAANA,OAAA,EAAAA,EAAQvS,aACjBuL,SA9KmB,SAAChP,EAAYyP,GAChDwG,GAAU,SAAC7S,GAAD,mBAAC,eACNA,GADK,IAERK,YAAagM,QA4KC9f,MAAM,YAGVO,MAAM,iBAGV,sBACEF,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNE,IAAK,MACLD,eAAgB,eAChBuhB,SAAU,QANd,UASE,cAAC,KAAD,CACEtH,SAAUlU,EACVud,OAAO,QACPhW,GAAG,YACHmhB,aAAa,SACb5rB,OAAa,OAAN8lB,QAAM,IAANA,OAAA,EAAAA,EAAQvS,aAAc,YAAc,aAC3CqG,OAAO,mBACPnB,WAAW,EACX3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BqC,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQva,WAAYsH,aAASiT,EAAOva,WAAa,KACxDuT,SA5PgB,SAAC7Q,GAC7B8X,GAAU,SAAC7S,GAAD,mBAAC,eACNA,GADK,IAER3H,UAAW0C,GAAQ+c,aAAQ/c,GAAQA,EAAKoD,mBAAgBtO,QA0P9C8oB,oBAAqB,CACnB,aAAc,uBAGlB,cAACC,GAAD,CACElU,KAAM0S,EACNxtB,MAAK,iBACHgpB,QADG,IACHA,GADG,UACHA,EAAQgD,kBADL,aACH,EAAoBzE,mBADjB,QAEH,iCAJJ,SAOE,cAACiD,GAAA,EAAD,CACElQ,SAAUlU,KAAa,OAAC4iB,QAAD,IAACA,OAAD,EAACA,EAAQvS,aAChCkN,OAAO,QACPzgB,MAAM,wBACNR,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BwuB,QAAS,kBAAMxB,GAAoB,IACnCyB,OAAQ,kBAAMzB,GAAoB,IAClC3qB,MAAK,OAAEkmB,QAAF,IAAEA,GAAF,UAAEA,EAAQgD,kBAAV,aAAE,EAAoBzE,YAC3B9D,WAAY,CACVzgB,MAAO,CACLmsB,aAAc,WACd3L,WAAY,SACZ4L,SAAU,WAGd3E,WAAY,CACVI,aACE,cAACD,GAAA,EAAD,CACEtoB,SAAS,MACTU,MAAO,CAAE6W,aAAc,IAFzB,SAIE,cAAC,GAAD,CACEmI,SA3PO,SAAChP,GAC9B,IAAMgZ,EAAahZ,EAAM2J,OAAO7Z,MAEhCmmB,GAAU,SAAC7S,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B4V,mBAyPdlpB,MAAK,iBAAEkmB,QAAF,IAAEA,OAAF,EAAEA,EAAQgD,kBAAV,QAAwBnF,GAC7BvM,SAAUlU,KAAa,OAAC4iB,QAAD,IAACA,OAAD,EAACA,EAAQvS,sBAO5C,cAAC+T,GAAA,EAAD,CACElQ,SAAUlU,KAAa,OAAC4iB,QAAD,IAACA,OAAD,EAACA,EAAQvS,aAChCkN,OAAO,QACPzgB,MAAM,sBACNR,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BuhB,SAAUwH,EAAkB,gBAC5B1mB,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQwC,cAAexC,EAAOwC,aAAe,IACpDf,WAAY,CACVC,eAAgBjG,GAChBkG,eACE,cAACC,GAAA,EAAD,CAAgBtoB,SAAS,QAAQU,MAAO,CAAEhC,YAAa,GAAvD,SACE,cAACoZ,GAAA,EAAD,CACElS,KAAK,QACLkU,aAAW,kBACXrD,QAAS6U,GAA6B,IACtCvT,KAAK,QACLC,SAAUlU,KAAa,OAAC4iB,QAAD,IAACA,OAAD,EAACA,EAAQvS,aALlC,SAOE,cAAC,KAAD,QAINoU,aACE,cAACD,GAAA,EAAD,CACEtoB,SAAS,MACTU,MAAO,CAAE6W,aAAc,GAAI5Z,UAAW,IAFxC,SAIE,cAACma,GAAA,EAAD,CACElS,KAAK,QACLkU,aAAW,kBACXrD,QAAS6U,EAA4B,IACrCvT,KAAK,MACLC,SAAUlU,KAAa,OAAC4iB,QAAD,IAACA,OAAD,EAACA,EAAQvS,aALlC,SAOE,cAAC,KAAD,cAOZ,sBACEzT,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNE,IAAK,MACLD,eAAgB,eAChBuhB,SAAU,QANd,UASE,eAACC,GAAA,EAAD,CACEnf,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BkjB,OAAO,QACPrJ,SAAUlU,EALZ,UAOE,cAACipB,GAAA,EAAD,CAAY1hB,GAAG,oBAAf,sBACA,eAACoU,GAAA,EAAD,CACEuN,QAAQ,oBACRxsB,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQ5T,iBAAkB4T,EAAO5T,gBAAkB,GAC1D4M,SAAUwH,EAAkB,mBAH9B,UAKE,cAACvH,GAAA,EAAD,CAAU3H,UAAQ,EAAlB,kBACCvT,EAAUyE,KAAI,SAACtF,GAAD,OACb,cAAC+b,GAAA,EAAD,CAEEnf,MAAOoD,EAASwF,OAAOC,gBAFzB,6BAIgBzF,EAASuF,MAAQ,IAJjC,4BAC4BvF,EAASuF,iBAQ3C,eAACoW,GAAA,EAAD,CACEnf,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BkjB,OAAO,QACPrJ,SAAUlU,EALZ,UAOE,cAACipB,GAAA,EAAD,CAAY1hB,GAAG,yBAAf,mBACEqgB,GACA,cAACjM,GAAA,EAAD,CAAQuN,QAAQ,yBAAhB,SACE,cAACrN,GAAA,EAAD,CAAU3H,UAAQ,EAAlB,oBAGH0T,GACC,cAAC,GAAD,CACE9nB,SAAU8nB,EACVlrB,MAAK,WACG,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQxT,mBAAoBwT,EAAOxT,kBAAoB,IAEzDwM,SAAUwH,EAAkB,6BAKpC,sBACExmB,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNE,IAAK,MACLD,eAAgB,eAChBuhB,SAAU,QANd,UASE,eAACC,GAAA,EAAD,CACEnf,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BkjB,OAAO,QACPrJ,SAAUlU,EALZ,UAOE,cAACipB,GAAA,EAAD,CAAY1hB,GAAG,oBAAf,sBACA,eAACoU,GAAA,EAAD,CACEuN,QAAQ,oBACRxsB,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQ7T,YAAa6T,EAAO7T,WAAa,GAChD6M,SA1Za,SAAChP,GAC5BiW,GAAU,SAAC7S,GAAD,mBAAC,eACNA,GADK,IAERjB,WAAYnC,EAAM2J,OAAO7Z,MACzB6oB,oBAAgB1lB,EAChB4P,oBAAgB5P,QAkZN,UAKE,cAACgc,GAAA,EAAD,CAAU3H,UAAQ,EAAlB,kBACCnE,OAAOmL,QAAQ9T,GACb8E,QACC,qDACWrO,UAAY8D,KAExByD,KAAI,oCAAEmC,EAAF,KAAMD,EAAN,YACH,cAACuU,GAAA,EAAD,CAA0Cnf,MAAO6K,EAAjD,SACGD,EAASnB,MADZ,4BAAoCoB,aAM5C,eAACkU,GAAA,EAAD,CACEnf,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BkjB,OAAO,QACPrJ,SAAUlU,EALZ,UAOE,cAACipB,GAAA,EAAD,CAAY1hB,GAAG,2BAAf,oBACA,eAACoU,GAAA,EAAD,CACEuN,QAAQ,2BACRxsB,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQ2C,gBAAiB3C,EAAO2C,eAAiB,GACxD3J,SA3aW,SAAChP,GAC1BiW,GAAU,SAAC7S,GAAD,mBAAC,eACNA,GADK,IAERuV,eAAgB3Y,EAAM2J,OAAO7Z,MAC7B+S,oBAAgB5P,QAoaN,UAKE,cAACgc,GAAA,EAAD,CAAU3H,UAAQ,EAAlB,kBACCuT,EAAgBriB,KAAI,SAAC+jB,GAAD,OACnB,cAACtN,GAAA,EAAD,CAEEnf,MAAOysB,EAAOhjB,KAFhB,SAIG/D,GAA2B+mB,EAAOhjB,OAJrC,0BAC0BgjB,EAAOhjB,mBASzC,sBACEvJ,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNE,IAAK,MACLiD,cAAe,UALnB,UAQGuqB,GAAkBA,EAAehlB,OAAS,GACzC,cAACrG,EAAA,EAAD,CACEC,QAAQ,UACR5C,QAAQ,QACR6C,MAAM,gBACNK,MAAO,CAAE/C,UAAW,IAJtB,+BASD6tB,GACCA,EAAetiB,KAAI,WAAsBC,GAAtB,IAAGc,EAAH,EAAGA,KAAM8R,EAAT,EAASA,KAAT,OACjB,cAACmM,GAAA,EAAD,CAEElQ,SAAUlU,EACVud,OAAO,QACPzgB,MAAOsF,GAA2B+D,GAClC2e,WACE7M,EAAK9W,SAAS,OACV,SACAiB,GAA2B6V,GAEjC3b,QAAQ,SACRiZ,WAAS,EACTqG,SAAU0L,EAA2BjiB,GACrC3I,OACQ,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQnT,gBAAR,OACImT,QADJ,IACIA,OADJ,EACIA,EAAQnT,eAAepK,GACvB,IAhBR,gBACgBc,EADhB,YACwB8R,eAsBlC,eAACmR,GAAA,EAAD,CACExsB,MAAO,CAAE3C,eAAgB,gBAAiBuhB,SAAU,QADtD,UAGE,cAAC,GAAD,CACEtH,SAAUlU,EACVtD,OAAa,OAANkmB,QAAM,IAANA,OAAA,EAAAA,EAAQrmB,OAAQqmB,EAAOrmB,MAAQ,GACtCqf,SAAUwH,EAAkB,WAE9B,sBACExmB,MAAO,CACLlD,QAAS,OACTM,KAAM,EACNC,eAAgB,YAJpB,UAOE,qBAAK2C,MAAO,CAAElD,QAAS,OAAQoB,WAAY,UAA3C,SACE,cAAC+b,GAAA,EAAD,CACElE,QAASqI,EACTze,MAAM,UACN2X,SAAUlU,EAHZ,qBAQF,cAAC,GAAD,CACE2S,QAASsV,EACTnrB,MAAM,WACNkD,UAAWA,aAKnB,cAAC4T,GAAA,EAAD,CAASzX,UAAWH,EAAQgrB,cAO5BqC,GAID,SAAC,GAAmC,IAAjCvpB,EAAgC,EAAhCA,SAAUpD,EAAsB,EAAtBA,MAAOkf,EAAe,EAAfA,SACvB,EAA2B8K,GAAS5mB,GAApC,oBAAO0mB,EAAP,KAAcG,EAAd,KACA,EAAkC3V,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KAOA,OALA3N,qBAAU,WACR2N,GAAa,GACb6T,IAAYnV,MAAK,kBAAMsB,GAAa,QACnC,CAAC6T,IAGF,eAAChL,GAAA,EAAD,CAAQuN,QAAQ,yBAAyBxsB,MAAOA,EAAOkf,SAAUA,EAAjE,UACE,cAACC,GAAA,EAAD,CAAU3H,UAAQ,EAAlB,SAAoBlU,EAAY,aAAe,SAC9CwmB,EAAMphB,KAAI,SAACuC,GAAD,OACT,eAACkU,GAAA,EAAD,CAEEnf,MAAK,UAAKiL,EAAKtC,OAFjB,UAIE,sBAAMzI,MAAO,CAAEwa,WAAY,QAA3B,oBAA0CzP,EAAKtC,MAC5CW,IAAI,GACJhI,cACH,sBAAMpB,MAAO,CAAE9C,WAAY,GAA3B,2BAA4CuJ,GAC1CsE,EAAKD,QADP,yBAEkBzD,GAAgB0D,EAAKgP,SAAU,QATnD,iCACiChP,EAAKtC,eAexCujB,GAAgB9R,cAAW,SAAChf,GAAD,MAAmB,CAClDwxB,QAAS,CACPvuB,gBAAiB,OACjBwB,MAAO,4BAEPhC,SAAU,GACV6c,WAAY,OACZvd,UAAW,EACXO,QAAS,MARS0c,CAUlByS,MCxrBEtwB,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,IACVmsB,uBAAwB,EACxBC,wBAAyB,QAoBhB1rB,GAfE,WACf,IAAMW,EAAU/C,KAEhB,OACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,qBACEkD,UAAWH,EAAQzD,KADrB,SAGE,cAAC,GAAD,UC1BFU,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXqwB,WAAY,CACVjtB,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,WAEnB0uB,OAAQ,CACNltB,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,WAEnB2uB,SAAU,CACRntB,MAAO,OACPwF,OAAQ,oBACRhH,gBAAiB,gBAmCRiH,GA9BK,SAAC,GAMd,IALL2F,EAKI,EALJA,KACAzF,EAII,EAJJA,YAKMlG,EAAU/C,KAEZ6D,EAAQ6K,EAAKoe,SAAW,SAAW,WACnC4D,EAAchiB,EAAKoe,SAAW/pB,EAAQytB,OAASztB,EAAQ0tB,SAO3D,OALKxnB,IACHpF,EAAQ,uBACR6sB,EAAc3tB,EAAQwtB,YAItB,cAAC3nB,GAAA,EAAD,CACEC,KAAK,QACLvF,MAAM,UACND,QAAQ,UACRQ,MAAOA,EACPd,QAAS,CACPmG,aAAcwnB,M,qBClChB1wB,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXkZ,KAAM,CACJ3Y,QAAS,OACTyD,cAAe,SACfnD,KAAM,GAERsY,IAAK,CACHC,WAAW,gCACXC,aAAa,gCACbha,aAAc,SA4CLoxB,GAnCV,SAAC,GAAqC,IAAD,IAAlCltB,EAAkC,EAAlCA,MAAOwF,EAA2B,EAA3BA,YAAayQ,EAAc,EAAdA,QACpB3W,EAAU/C,KAEhB,OACE,eAACka,GAAA,EAAD,CAAUC,QAAM,EAACjX,UAAWH,EAAQsW,IAAKK,QAASA,EAAlD,UACE,sBACExW,UAAWH,EAAQqW,KACnBzV,MAAO,CAAEO,cAAe,MAAOrC,WAAY,UAF7C,UAIE,cAACuY,GAAA,EAAD,CACElX,UAAWH,EAAQqW,KACnBpa,QAAO,WAAMyE,EAAM2I,MAAMW,IAAI,GAAGhI,YAChCsV,UAAS,8BACP5W,EAAMuJ,2BADC,aACP,EAA2BjI,kBADpB,QACkC,EADlC,sBAIX,qBAAKpB,MAAO,CAAEhC,YAAa,GAAI6Y,aAAc,IAA7C,SACE,cAAC,GAAD,CAAa9L,KAAMjL,EAAOwF,YAAaA,SAG3C,eAACwR,GAAA,EAAD,CAAQC,QAAM,EAAd,UACE,cAACC,GAAA,EAAD,CAASC,YAAY,WAAWjX,MAAO,CAAEtD,YAAa,IAAMwa,UAAQ,IACpE,cAACT,GAAA,EAAD,CACEpb,QAAO,kBAAaoL,GAAmB3G,EAAMgL,SAC7C4L,UAAS,qBAAgBrP,GAAgBvH,EAAMia,SAAU,IACzDxa,UAAWH,EAAQqW,UAGvB,cAAC0B,GAAA,EAAD,UACE,cAAC,KAAD,CAAcnX,MAAO,CAAEL,MAAO,+B,UP5BhC4X,GAAY,CAAEza,QAAS,OAAQoB,WAAY,SAAUZ,IAAK,Q,SAE3DuoB,O,mBAAAA,I,uBAAAA,I,wBAAAA,Q,KAML,IQNKoH,GR4RUC,GAtRkC,SAAC,GAAe,IAAbptB,EAAY,EAAZA,MAC5C5E,EAAQuc,eACRC,EAAaC,aAAczc,EAAM0c,YAAYC,KAAK,OAEhD7B,EAAoBC,cAApBD,gBAER,EAAwB5B,oBAAkB,GAA1C,oBAAO0D,EAAP,KAAaC,EAAb,KAEA,EEJqB,SAAChN,GACtB,IAAMyF,EALkB,SAACzF,GACzB,MAAM,QAAN,OAAeA,EAAKrC,OAAOC,gBAA3B,YAA8CoC,EAAKtC,OAIvC0kB,CAAWpiB,GAEvB,EAAsCqJ,oBAAkB,GAAxD,oBAAO9O,EAAP,KAAoB+O,EAApB,KAEMwV,EAAUF,IAAc,SAAClmB,GAAD,OAAWA,EAAMomB,WAE/C,EAA0ChZ,GAAgBL,GAA1D,oBAAOiE,EAAP,KAA4BD,EAA5B,KAEM4Y,EAAc,yCAAG,WAAOxZ,GAAP,gBAAArQ,EAAA,6DACf8pB,EAAStiB,EAAK2e,kBAAkB4D,IAAI1Z,GADrB,kBAGd7I,EAAKqe,MAAMmE,cAAcF,IAHX,2CAAH,sDAMdG,EAAUrc,sBAAW,yCACzB,WAAOyC,GAAP,kBAAArQ,EAAA,6DACQ8pB,EAAStiB,EAAK2e,kBAAkB4D,IAAI1Z,GAD5C,SAGmB7I,EAAKqe,MAAMoE,QAAQH,GAHtC,OAGQ7d,EAHR,OAKEgF,EACEhF,EAAGxO,KADK,0BAEW4S,EAFX,YAGNA,EAAW,EAAI,aAAe,YAHxB,6CAKWA,EALX,YAMNA,EAAW,EAAI,aAAe,YANxB,6BALZ,2CADyB,sDAgBzB,CAAC7I,EAAMyJ,IAGHiZ,EAAWtc,sBAAW,yCAC1B,WAAOyC,GAAP,gBAAArQ,EAAA,sEACmBwH,EAAK0iB,SAAS7Z,GADjC,OACQpE,EADR,OAGEgF,EACEhF,EAAGxO,KADK,2BAEY4S,EAFZ,YAGNA,EAAW,EAAI,aAAe,YAHxB,8CAKYA,EALZ,YAMNA,EAAW,EAAI,aAAe,YANxB,6BAHZ,2CAD0B,sDAc1B,CAAC7I,EAAMyJ,IAgBT,OAbAjM,qBAAU,WACR,IAAMgN,EAAyBd,EAAoB3O,OAAS,EAExDyP,EACFlB,GAAe,GACLkB,GAA2BjQ,GACrC4jB,GAAmBne,GAAM6J,MAAK,SAACC,GAC7BgV,EAAQhV,GACRR,GAAe,QAGlB,CAAC/O,EAAamP,EAAqB1J,EAAM8e,IAErC,CACLuD,EACAI,EACAC,EACAnoB,EACAmP,EACAjE,GFlEuDkd,CAAQ5tB,EAAMmU,KAAvE,oBAAOmZ,EAAP,KAAuBI,EAAvB,KAAgCC,EAAhC,KAA0CnoB,EAA1C,KAEA,EAAgD8O,mBAAiB,GAAjE,oBAAOuZ,EAAP,KAAyBC,EAAzB,KACA,EAAkCxZ,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KACA,EAA4C9B,mBAC1CtU,EAAM0pB,YAAcqE,aAAUC,MAC1BjI,GAAgBkI,OAChBlI,GAAgBmI,UAHtB,oBAAOC,EAAP,KAAuBC,EAAvB,KAUMC,EAAkC,SAACtH,GAAD,OAAuB,WAC7D+G,GAAoB,SAACQ,GACnB,IAAIxa,GAAYwa,EAAevH,EAI/B,OAFIjT,GAAY,IAAGA,EAAW,GAEvBA,KAGTsa,EACEpuB,EAAM0pB,YAAcqE,aAAUC,MAC1BjI,GAAgBkI,OAChBlI,GAAgBmI,YAelBK,EAAc,yCAAG,WAAO9F,GAAP,kBAAAhlB,EAAA,2DACLglB,EAAqB,GADhB,oBAInBrS,GAAa,GAJM,SAOb+X,IAAmBpI,GAAgBkI,OAPtB,gCAQcX,EAAe7E,GAR7B,OAQT+F,EARS,OASfJ,EACEI,EAAiBzI,GAAgB0I,SAAW1I,GAAgBmI,UAV/C,UAcbC,IAAmBpI,GAAgB0I,SAdtB,kCAeTf,EAAQjF,GAfC,QAgBf2F,EAAkBrI,GAAgBkI,QAhBnB,WAmBbE,IAAmBpI,GAAgBmI,SAnBtB,kCAoBTP,EAASlF,GApBA,QAqBfqF,EAAoB,GAEpBM,EACEpuB,EAAM0pB,YAAcqE,aAAUC,MAC1BjI,GAAgBkI,OAChBlI,GAAgBmI,UA1BP,0DA8BX5X,EAAUC,8BAAmB,KAAMC,KAAM,KAAMF,SAErDJ,EAAgBI,EAAS,CACvB1W,QAAS,UAjCM,QAqCnBwW,GAAa,GArCM,0DAAH,sDAyCpB,OACE,qCACE,cAAC,GAAD,CACEpW,MAAOA,EACPwF,YAAaA,EACbyQ,QAAS,kBAAMgC,GAAQ,MAEzB,eAACW,GAAA,EAAD,CACEhB,WAAYA,EACZ3Z,SAAS,KACT4a,WAAW,EACXb,KAAMA,EACNc,QApFc,WAClBb,GAAQ,IA8EN,UAOE,cAACc,GAAA,EAAD,CACE7Y,MAAO,CAAElD,QAAS,OAAQO,eAAgB,iBAC1CshB,mBAAiB,EAFnB,SAIE,sBAAK3e,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,UACE,qBAAK4C,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,SACE,cAACqC,EAAA,EAAD,CAAYW,UAAW,KAAMV,QAAQ,KAArC,yBACYI,EAAM2I,MAAMW,IAAI,GAAGhI,gBAGjC,cAAC,GAAD,CAAegC,UAAWA,IAC1B,cAAC,GAAD,SAGJ,cAAC0V,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACE3Y,UAAW4Y,KACXld,UAAW,EACXkE,MAAO,CAAEmF,OAAO,aAAD,OAAejK,EAAME,QAAQ6d,OAAOC,QAHrD,SAKE,cAACC,GAAA,EAAD,CAAOC,aAAW,aAAlB,SACE,eAACC,GAAA,EAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBjZ,UAAU,KAAKoZ,MAAM,MAAtC,kCAGA,cAAC,GAAD,CAAkBE,MAAM,QAAxB,SACE,cAACja,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACGI,EAAMuJ,oBAAoBjI,kBAIjC,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBhB,UAAU,KAAKoZ,MAAM,MAAtC,oBAGA,cAAC,GAAD,CAAkBE,MAAM,QAAQ1Z,MAAOuX,GAAvC,SACE,cAAC,GAAD,CAAaxM,KAAMjL,EAAOwF,YAAaA,SAG3C,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBlF,UAAU,KAAKoZ,MAAM,MAAtC,oBAGA,cAAC,GAAD,CAAkBE,MAAM,QAAxB,SACGjT,GAAmB3G,EAAMgL,aAG9B,eAAC,GAAD,WACE,cAAC,GAAD,CAAiB1K,UAAU,KAAKoZ,MAAM,MAAtC,uBAGA,cAAC,GAAD,CAAkBE,MAAM,QAAxB,SACGrS,GAAgBvH,EAAMia,SAAU,QAGrC,eAAC,GAAD,WACE,cAAC,GAAD,CAAiB3Z,UAAU,KAAKoZ,MAAM,MAAtC,iCAGA,cAAC,GAAD,CAAkBE,MAAM,QAAxB,mBACMrS,GACFvH,EAAM4pB,kBACN5pB,EAAMupB,eAHV,YAIOvpB,EAAMypB,kBAGf,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBnpB,UAAU,KAAKoZ,MAAM,MAAtC,kCAGA,cAAC,GAAD,CAAkBE,MAAM,QAAQ1Z,MAAO,CAAElC,MAAO,KAAhD,SACE,cAAC0pB,GAAA,EAAD,CACElQ,SAAUlU,IAAckC,EACxBqb,OAAO,QACP7B,aAAW,EACXpf,QAAQ,SACRiZ,WAAS,EACT3Y,MAAO,CAAE5C,KAAM,EAAGK,SAAU,KAC5BuhB,SAAU,SAAChP,GAAD,OAjJQ4D,GAkJc5D,EAAM2J,OAAO7Z,QAjJ/C,IAAG8T,EAAW,GAE9Bga,EAAoBha,QACpBsa,EACEpuB,EAAM0pB,YAAcqE,aAAUC,MAC1BjI,GAAgBkI,OAChBlI,GAAgBmI,UAPa,IAACpa,GAoJlB9T,MAAO6tB,EACPlG,WAAY,CACVC,eAAgBjG,GAChBkG,eACE,cAACC,GAAA,EAAD,CAAgBtoB,SAAS,QAAzB,SACE,cAAC8X,GAAA,EAAD,CACElS,KAAK,QACLkU,aAAW,kBACXrD,QAASoY,GAAiC,IAC1C9W,KAAK,QACLC,SAAUlU,IAAckC,EAL1B,SAOE,cAAC,KAAD,QAINuiB,aACE,cAACD,GAAA,EAAD,CAAgBtoB,SAAS,MAAzB,SACE,cAAC8X,GAAA,EAAD,CACElS,KAAK,QACLkU,aAAW,kBACXrD,QAASoY,EAAgC,IACzC9W,KAAK,MACLC,SAAUlU,IAAckC,EAL1B,SAOE,cAAC,KAAD,gBAQd,eAAC,GAAD,WACE,cAAC,GAAD,CAAiBlF,UAAU,KAAKoZ,MAAM,MAAtC,mBAGA,eAACgV,GAAD,CAAc9U,MAAM,QAApB,oBACMrS,GACFvH,EAAM4pB,kBAAkB4D,IAAIK,GAC5B7tB,EAAMupB,gBAHV,WAMOvpB,EAAMypB,4BAOvB,eAACvP,GAAA,EAAD,CACEha,MAAO,CAAEhC,YAAa,GAAI6Y,aAAc,GAAInZ,WAAY,IAD1D,UAGE,cAACuc,GAAA,EAAD,CACEta,MAAM,UACN2X,SAAUlU,EACV2S,QAAS,WACP6X,EAAoB,GACpB7V,GAAQ,IALZ,mBAUA,eAACkC,GAAA,EAAD,CACE3C,SACElU,IACCkC,IACAxF,EAAMqpB,UACe,KAArBwE,EAEHhuB,MAAM,UACND,QAAQ,YACRM,MAAO,CAAEvC,SAAU,KACnBsY,QAAS,kBAAMsY,EAAeV,IAVhC,UAYGroB,GACC2oB,IAAmBpI,GAAgBkI,QACnC,kBACDzoB,GACC2oB,IAAmBpI,GAAgB0I,UACnC,UACDjpB,GACC2oB,IAAmBpI,GAAgBmI,UACnC,OACA1oB,GAAe,oCAUvBmU,GAAmBS,cAAW,SAAChf,GAAD,OAClCqB,YAAa,CACX4d,KAAM,CACJhc,gBAAiBjD,EAAME,QAAQgf,OAAOC,MACtC1a,MAAOzE,EAAME,QAAQgf,OAAOE,OAE9B9e,KAAM,CACJmC,SAAU,GACViY,aAAc,YARKsE,CAWvBK,MAEIiU,GAAetU,cAAW,SAAChf,GAAD,OAC9BqB,YAAa,CACX4d,KAAM,CACJhc,gBAAiBjD,EAAME,QAAQgf,OAAOC,MACtC1a,MAAOzE,EAAME,QAAQgf,OAAOE,OAE9B9e,KAAM,CACJmC,SAAU,OACV6c,WAAY,OACZ5E,aAAc,YATCsE,CAYnBK,MAEIhB,GAAkBW,cAAW,SAAChf,GAAD,OACjCqB,YAAa,CACX4d,KAAM,CACJhc,gBAAiBjD,EAAME,QAAQgf,OAAOC,MACtC1a,MAAOzE,EAAME,QAAQgf,OAAOE,OAE9B9e,KAAM,CACJmC,SAAU,GACV6c,WAAY,OACZ5E,aAAc,OACd7X,SAAU,QAVQmc,CAatBK,MAEIjB,GAAiBY,cAAW,SAAChf,GAAD,OAChCqB,YAAa,CACXZ,KAAM,CACJ,qBAAsB,CACpBwC,gBAAiBjD,EAAME,QAAQ6d,OAAOC,YAJvBgB,CAQrBO,M,iESzWIgU,GAAuBvU,cAAW,SAAChf,GAAD,OACtCqB,YAAa,CACXZ,KAAM,CACJkB,OAAQ,EACRjB,aAAc,GAEhB2J,aAAc,CACZpH,gBACEjD,EAAME,QAAQggB,KAA4B,UAAvBlgB,EAAME,QAAQigB,KAAmB,IAAM,MAE9DqT,IAAK,CACH9yB,aAAc,EACduC,gBAAiB,eAZM+b,CAe3ByU,MAEItyB,GAAYC,YAAW,CAC3BX,KAAM,CACJmC,MAAO,OACPC,SAAU,KAEZqsB,QAAS,CACPvtB,OAAQ,EACRiB,MAAO,OACPC,SAAU,OAmBC6wB,GAfmC5S,gBAAK,YAAoB,IAAjB5Y,EAAgB,EAAhBA,UAClDhE,EAAU/C,KAIV4f,EAFUvB,GAAc,MAEGtX,EAEjC,OACE,sBAAK7D,UAAWH,EAAQzD,KAAxB,UACGsgB,GAAiB,cAACwS,GAAD,CAAsB/uB,QAAQ,mBAC9Cuc,GAAiB,cAACjF,GAAA,EAAD,CAASzX,UAAWH,EAAQgrB,gBChC/C/tB,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmC,MAAO,OACPN,QAAS,EACTF,IAAK,MACLR,QAAS,OACTyD,cAAe,UAEjBsuB,gBAAiB,CACflxB,SAAUzC,EAAM4zB,WAAWC,QAAQ,IACnCjyB,QAAS,SAEXkyB,yBAA0B,CACxBrxB,SAAUzC,EAAM4zB,WAAWC,QAAQ,IACnCpvB,MAAOzE,EAAME,QAAQ6zB,KAAKvY,WAE5BwY,aAAc,CACZvO,OAAQ,EACR,WAAY,CACVwO,QAAS,SAGb/E,QAAS,CACPtsB,MAAO,OACPC,SAAU,UAmFDqxB,GA3EV,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAensB,EAAe,EAAfA,SACf9D,EAAU/C,KAEhB,EAAkC+X,oBAAkB,GAApD,oBAAOhR,EAAP,KAAkB8S,EAAlB,KAEA,EAA2B4T,GAAS5mB,GAApC,oBAAO0mB,EAAP,KAAcG,EAAd,KAEAxhB,qBAAU,WACR2N,GAAa,GACb6T,IAAYnV,MAAK,kBAAMsB,GAAa,QACnC,CAAC6T,IAEJ,MAAgC3V,mBAAkBib,GAAlD,oBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OACE,qCACE,cAAC,GAAD,CAASnsB,UAAWA,IACpB,eAACosB,GAAA,EAAD,CACEF,SAAUD,GAAiBC,EAC3BtQ,SATqB,WACzBuQ,GAAY,SAAC1R,GAAD,OAAWA,MASnB/hB,UAAW,EACXyD,UAAWH,EAAQ8vB,aAJrB,UAME,cAACO,GAAA,EAAD,CACEC,WAAaL,OAAqCpsB,EAArB,cAAC,KAAD,IAC7B0sB,gBAAA,4BAAoCzsB,EAASuF,OAC7CzI,MAAO,CAAE4vB,OAAQP,EAAgB,UAAY,WAC7C1kB,GAAE,2BAAsBzH,EAASuF,OAJnC,SAME,sBAAKzI,MAAO,CAAElD,QAAS,OAAQM,KAAM,EAAGc,WAAY,UAApD,UACE,sBACE8B,MAAO,CACLlD,QAAS,OACTyD,cAAe,SACfnD,KAAM,GAJV,UAOE,cAACqC,EAAA,EAAD,CAAYF,UAAWH,EAAQyvB,gBAA/B,6BACgB3rB,EAASuF,MAAQ,KAEjC,cAAChJ,EAAA,EAAD,CAAYF,UAAWH,EAAQ4vB,yBAA/B,mBACM3nB,GACFuiB,EAAMhM,OAAO3U,GAAgBF,IAC7B,GAHJ,0BAOAsmB,GACA,cAACpqB,GAAA,EAAD,CACEC,KAAK,QACLhF,MAAOovB,EAAW,YAAc,YAChCtvB,MAAO,CAAE4vB,OAAQ,kBAKzB,cAACC,GAAA,EAAD,CAAkB7vB,MAAO,CAAExC,QAAS,EAAG+C,cAAe,UAAtD,SACE,cAAC6e,GAAA,EAAD,CAAM7f,UAAWH,EAAQzD,KAAzB,SACGiuB,EAAMphB,KAAI,SAACuC,EAAMtC,GAAP,OACT,cAAC,GAAD,CAEE3I,MAAOiL,GAFT,oBACoBA,EAAKkJ,IAAIvL,OAAOC,gBADpC,YACuDF,kBCxG/DpM,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,IACVmsB,uBAAwB,EACxBC,wBAAyB,QAmChBzrB,GA9BDsd,gBAAK,WACjB,IAAM5c,EAAU/C,KAEV0H,EAAYqE,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAErD,OACE,eAAC,GAAD,WACE,eAACwa,GAAA,EAAD,CAAMhf,UAAWH,EAAQzD,KAAzB,UACE,cAAC+iB,GAAA,EAAD,CAAYzF,OAAQ,cAAC,GAAD,IAAkBjc,MAAM,UAC5C,cAACkiB,GAAA,EAAD,UACE,cAACzf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBS,UAAU,IAA5D,oDAKJ,qBAAKb,UAAWH,EAAQzD,KAAxB,SACE,cAAC4iB,GAAA,EAAD,CAAMve,MAAO,CAAEwe,oBAAqB,EAAGC,qBAAsB,GAA7D,SACG1a,EAAUyE,KAAI,SAACtF,EAAUuF,GAAX,OACb,cAAC,GAAD,CAEE4mB,cAAoC,IAArBtrB,EAAU+B,OACzB5C,SAAUA,GAHZ,qBACqBuF,iBCkKlBqnB,GA/LS,SAAC,GAQlB,IAAD,IAPJC,kBAOI,aANJC,qBAMI,MANY,KAMZ,EALJpX,EAKI,EALJA,QAMA,EAAwBxE,qBAAS4b,GAAjC,oBAAOlY,EAAP,KAAaC,EAAb,KACA,EAA4B3D,mBAC1B4b,GADF,oBAAOhK,EAAP,KAAeC,EAAf,KAGM/qB,EAAQuc,eACRC,EAAaC,aAAczc,EAAM0c,YAAYC,KAAK,OAElD9S,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnDwJ,EAAOH,IAAa,SAAC7G,GAAD,OAAWA,EAAMgH,QAMrC8b,EAAc,WAClBN,EAAU,MACVlO,GAAQ,GAEJa,GAASA,KA4ET4N,EAAoB,SAACC,GAAD,OAAuB,SAACzW,GAChDiW,GAAU,SAAC7S,GAAD,mBAAC,eAAiBA,GAAlB,mBAA2BqT,EAAYzW,EAAM2J,OAAO7Z,aAGhE,OACE,sCACIiwB,GACA,cAAC9V,GAAA,EAAD,CACEb,aAAW,eACXzZ,MAAM,UACND,QAAQ,YACRwF,KAAK,QACL+qB,QAAS,cAAC,KAAD,IACTla,QAjGgB,WACtBgC,GAAQ,IA0FJ,sBAWF,eAACW,GAAA,EAAD,CACEhB,WAAYA,EACZ3Z,SAAS,KACT4a,WAAW,EACXb,KAAMA,EACNc,QAAS2N,EALX,UAOE,cAAC1N,GAAA,EAAD,UACE,sBAAK7Y,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,UACE,qBAAK4C,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,UACS,OAAN4oB,QAAM,IAANA,OAAA,EAAAA,EAAQrb,IAAK,gBAAkB,0BAElC,cAAC,GAAD,SAGJ,eAACmO,GAAA,EAAD,WACE,cAAC0O,GAAA,EAAD,CACE0I,WAAS,EACTvP,OAAO,QACPzgB,MAAM,OACNgoB,WAAW,sFACXxoB,QAAQ,SACRiZ,WAAS,EACTqG,SAAUwH,EAAkB,QAC5B1mB,MAAK,OAAEkmB,QAAF,IAAEA,OAAF,EAAEA,EAAQzc,OAEjB,cAACie,GAAA,EAAD,CACE7G,OAAO,QACPzgB,MAAM,UACNgoB,WAAW,4BACXxoB,QAAQ,SACRiZ,WAAS,EACTqG,SAAUwH,EAAkB,WAC5B1mB,MAAK,OAAEkmB,QAAF,IAAEA,OAAF,EAAEA,EAAQzf,UAEjB,cAACihB,GAAA,EAAD,CACE7G,OAAO,QACPzgB,MAAM,MACNgoB,WAAW,kFACXxoB,QAAQ,SACRiZ,WAAS,EACTwX,WAAS,EACTC,KAAM,EACNpR,SAAUwH,EAAkB,OAC5B1mB,MAAK,OAAEkmB,QAAF,IAAEA,OAAF,EAAEA,EAAQtT,QA7BnB,mCAAyCsT,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAQrb,KAgCjD,eAACqP,GAAA,EAAD,CACEha,MAAO,CAAEhC,YAAa,GAAI6Y,aAAc,GAAInZ,WAAY,IAD1D,UAGGqH,IAAuBzG,EAASqC,YAC/B,qBAAKX,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,SACE,cAAC6c,GAAA,EAAD,CAAQlE,QA/IM,WACxB,IAAMxP,EAAU,6CAEhB0f,EAAU,CACRtb,GAAG,GAAD,OAAK5F,EAAL,YAA2BwB,GAC7BgD,KAAM,kBACNhD,QAASA,EACTmM,IAAK5I,KAAKC,UACR,CACE,CACEsmB,WAAW,EACXtF,OAAQ,CACN,CACEuF,SAAS,EACTC,aAAc,UACdhnB,KAAM,QACN8R,KAAM,YAGV9R,KAAM,UACN8R,KAAM,SAER,CACE0P,OAAQ,GACRxhB,KAAM,QACNinB,QAAS,CACP,CACED,aAAc,UACdhnB,KAAM,GACN8R,KAAM,YAGVoV,gBAAiB,OACjBpV,KAAM,YAER,CACE0P,OAAQ,GACRxhB,KAAM,MACNinB,QAAS,GACTC,gBAAiB,UACjBpV,KAAM,YAER,CACE0P,OAAQ,GACRxhB,KAAM,OACNinB,QAAS,GACTC,gBAAiB,OACjBpV,KAAM,aAGV,KACA,MA4F0C1b,MAAM,YAA1C,4BAKJ,cAACsa,GAAA,EAAD,CAAQlE,QAASwQ,EAAa5mB,MAAM,UAApC,oBAGA,cAACsa,GAAA,EAAD,CAAQlE,QA/FG,WAEjB,IAEa,EAFGiQ,GAAUA,EAAOtT,KAAOsT,EAAOzf,SAAWyf,EAAOzc,OAG/DkB,EAAK,2BACCub,GADF,IAEF/kB,QAAS8D,EACT4F,GAAE,iBAAEqb,QAAF,IAAEA,OAAF,EAAEA,EAAQrb,UAAV,kBAAmB5F,EAAnB,mBAAyCihB,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAQzf,YAGrD0f,EAAU,MACVlO,GAAQ,GACJa,GAASA,MAkFoBjZ,MAAM,UAAUD,QAAQ,YAArD,4B,WC5LJrD,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,IACVd,UAAW,SAgEFyzB,GA3Da,WAC1B,IAAMtxB,EAAU/C,KAEVs0B,KACJvY,UAAUwY,UAAYxY,UAAUwY,QAAQrmB,SAE1C,EAAkC6J,oBAAS,GAA3C,oBAAOyc,EAAP,KAAkBC,EAAlB,KACA,EAA0C1c,oBAAS,GAAnD,oBAAO2c,EAAP,KAAsBC,EAAtB,KAEAzoB,qBAAU,YACI,yCAAG,uBAAAhF,EAAA,yDACRotB,EADQ,iEAGavY,UAAUwY,QAAQK,YAH/B,eAMXH,GAAa,GANF,2CAAH,qDAUZ7X,KACC,CAAC0X,IAEJ,IAAMO,EAAY,yCAAG,6BAAA3tB,EAAA,6DACnBytB,GAAiB,GADE,SAEO5Y,UAAUwY,QAAQrmB,UAFzB,OAEb4mB,EAFa,OAGnBzuB,aAAasH,QAAQ,0BAA2B,OAChD8mB,GAAcK,GAJK,2CAAH,qDAOlB,OACE,mCACGN,IAAcnuB,aAAaC,QAAQ,4BAClC,eAAC4b,GAAA,EAAD,CAAMhf,UAAWH,EAAQzD,KAAzB,UACE,cAAC+iB,GAAA,EAAD,CAAY1hB,MAAO,oBACnB,cAACkiB,GAAA,EAAD,UACE,cAACzf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBS,UAAU,IAA5D,+NAOF,cAACosB,GAAA,EAAD,CAAaxsB,MAAO,CAAE3C,eAAgB,YAAtC,SACE,cAAC4c,GAAA,EAAD,CACElE,QAASmb,EACTvxB,MAAM,UACND,QAAQ,YACR4X,SAAUyZ,EAJZ,4BClEG,OAA0B,yCCiBnC10B,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,IACVmsB,uBAAwB,EACxBC,wBAAyB,GAE3BC,QAAS,CACPtsB,MAAO,OACPC,SAAU,UAoEVqzB,GAAiB,SAAC,GAQjB,IAPL7nB,EAOI,EAPJA,KACAhD,EAMI,EANJA,QACAwP,EAKI,EALJA,QAMA,OACE,cAACwI,GAAA,EAAD,UACE,cAAC8S,GAAA,EAAD,CACErxB,MAAO,CACLnD,OAAQ,OACRpB,WAAW,OAAD,OAAS61B,GAAT,eACVC,mBAAoB,wBACpBC,eAAgB,eAElBzb,QAASA,EAPX,SASE,eAACmJ,GAAA,EAAD,WACE,cAACzf,EAAA,EAAD,CAAYgyB,cAAY,EAAC/xB,QAAQ,KAAKU,UAAU,KAAhD,SACGmJ,IAEH,cAAC9J,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBS,UAAU,OAA5D,SACGiG,GAAUE,aAQR5H,GAhGG,WAChB,IAAMS,EAAU/C,KAEVmO,EAAYF,IAAa,SAAC7G,GAAD,OAAWA,EAAM+G,aAEhD,EAA8B4J,mBAA2B,MAAzD,oBAAOsd,EAAP,KAAgBC,EAAhB,KAEM5sB,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnD2wB,EAAmBze,OAAOmL,QAAQ9T,GAAW8E,QACjD,qDAA6BrO,UAAY8D,KAG3C,OACE,eAAC,GAAD,WACE,eAACwZ,GAAA,EAAD,CAAMhf,UAAWH,EAAQzD,KAAzB,UACE,cAAC+iB,GAAA,EAAD,CAAYzF,OAAQ,cAAC,GAAD,IAAkBjc,MAAM,cAC5C,cAACkiB,GAAA,EAAD,UACE,cAACzf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBS,UAAU,IAA5D,0FAKF,cAACosB,GAAA,EAAD,CAAaxsB,MAAO,CAAExC,QAAS,GAAIE,WAAY,GAA/C,SACE,cAAC,GAAD,SAGJ,cAACsZ,GAAA,EAAD,CAASzX,UAAWH,EAAQgrB,UAE5B,cAAC,GAAD,IAEA,cAAC,GAAD,CAEE2F,YAAY,EACZC,cAAe0B,EACf9Y,QAAS,kBAAM+Y,EAAW,QAJ5B,+BACwBD,QADxB,IACwBA,OADxB,EACwBA,EAAS/mB,KAMjC,qBACE3K,MAAO,CACL/C,UAAW,GACXH,QAAS,OACT+0B,oBAAqB,wCACrBC,aAAc,QACdC,QAAS,MACT10B,eAAgB,gBAChBS,MAAO,OACPC,SAAU,KATd,SAYG6zB,EAAiBppB,KAAI,oCAAEmC,EAAF,KAAMD,EAAN,YACpB,cAAC,GAAD,CAEEnB,KAAMmB,EAASnB,KACfhD,QAASmE,EAASnE,QAClBwP,QAAS,kBAAM4b,EAAWjnB,KAJ5B,wBACwBC,aC7E5B8jB,GAAuBvU,cAAW,SAAChf,GAAD,OACtCqB,YAAa,CACXZ,KAAM,CACJkB,OAAQ,GACRjB,aAAc,GAEhB2J,aAAc,CACZpH,gBACEjD,EAAME,QAAQggB,KAA4B,UAAvBlgB,EAAME,QAAQigB,KAAmB,IAAM,MAE9DqT,IAAK,CACH9yB,aAAc,EACduC,gBAAiB,eAZM+b,CAe3ByU,MAEItyB,GAAYC,YAAW,CAC3BX,KAAM,CACJmC,MAAO,OACPC,SAAU,IACVd,UAAW,IACX0uB,aAAc,OAmBHiD,GAfmC5S,gBAAK,YAAoB,IAAjB5Y,EAAgB,EAAhBA,UAClDhE,EAAU/C,KAIV4f,EAFUvB,GAAc,MAEGtX,EAEjC,OACE,sBAAK7D,UAAWH,EAAQzD,KAAxB,UACGsgB,GAAiB,cAAC,GAAD,CAAsBvc,QAAQ,mBAC9Cuc,GAAiB,qBAAKjc,MAAO,CAAEnD,OAAQ,YC9ChC,OAA0B,iCCenCR,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,UAsFDi0B,GAjFC,WACd,IAAM5yB,EAAU/C,KAEV41B,EAAUC,cAGRlpB,GAFShK,cAESyE,OAAS,CAAEuF,KAAM,CAAEjJ,SAAU,OAA/CiJ,KAER,EAAyCpG,IACvC,SAACa,GAAD,MAAW,CAACA,EAAMC,QAASD,EAAMH,WAAYG,EAAML,aACnD0N,MAFF,oBAAOpN,EAAP,KAAgBJ,EAAhB,KAA4BF,EAA5B,KAKM+uB,EAAgBhhB,sBAAW,wBAAC,qCAAA5N,EAAA,sEAExB6uB,EAAO,SAACC,GAAD,OACX,IAAIhlB,SAAQ,SAACilB,GAAD,OAAatX,WAAWsX,EAASD,OACzCE,EAAU,SAACC,EAAiBH,GAAlB,OACdhlB,QAAQolB,KAAK,CACXD,EACAJ,EAAKC,GAAIzd,MAAK,WACZ,MAAM,IAAI/Q,MAAM,iBAAmBwuB,EAAK,aARhB,SAYSE,EAAQzwB,GAAO4B,UAAW,KAZnC,gBAYtBR,EAZsB,EAYtBA,SAAUI,EAZY,EAYZA,WAElBI,EAAQR,EAAUI,GAAYsR,MAAK,kBAAMqd,EAAQ7rB,QAAQ4C,MAd3B,kDAgB9BnE,QAAQD,MAAM,uBAAd,MACAtB,IAjB8B,0DAmB/B,CAACI,EAASJ,EAAY0F,EAAMipB,IAQ/B,OANA1pB,qBAAU,WACJ9F,MACF0vB,MAED,CAACA,IAGF,eAAC,GAAD,CAAQp1B,UAAQ,EAAhB,WACIqG,GACA,eAACmb,GAAA,EAAD,CACEhf,UAAWH,EAAQzD,KACnBqE,MAAO,CACLnD,OAAQ,OACR61B,gBAAgB,OAAD,OAASC,GAAT,KACfC,iBAAkB,YAClBrB,mBAAoB,wBACpBC,eAAgB,eAPpB,UAUE,cAAC9S,GAAA,EAAD,CAAY1hB,MAAM,sBAClB,eAACkiB,GAAA,EAAD,WACE,cAACzf,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,gBAAgBS,UAAU,IAAhE,uEAGA,qBACEJ,MAAO,CACLlD,QAAS,OAETG,UAAW,IAJf,SAOE,cAACgd,GAAA,EAAD,CACEva,QAAQ,YACRC,MAAM,UACNoW,QAASoc,EAHX,kCAWR,cAAC,GAAD,CAAS/uB,UAAWA,Q,qDCjFpB/G,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,KAEZ80B,iBAAkB,CAChB1G,aAAc,WACd3L,WAAY,SACZ4L,SAAU,eAsEDxtB,GAjEC,WACd,IAAMQ,EAAU/C,KACV41B,EAAUC,cAERlc,EAAoBC,cAApBD,gBAER,EAA8BpT,IAC5B,SAACa,GAAD,MAAW,CAACA,EAAMT,QAASS,EAAMH,cACjCwN,MAFF,oBAAO9N,EAAP,KAAgBM,EAAhB,KAiBA,OACE,cAAC,GAAD,UACE,eAACib,GAAA,EAAD,CAAMhf,UAAWH,EAAQzD,KAAzB,UACE,cAAC+iB,GAAA,EAAD,CAAYzF,OAAQ,cAAC,GAAD,IAAkBjc,MAAM,YAC5C,cAACkiB,GAAA,EAAD,CAAalf,MAAO,CAAExC,QAAS,GAA/B,SACE,eAAC4hB,GAAA,EAAD,CAAM7f,UAAWH,EAAQzD,KAAzB,UACE,eAAC4a,GAAA,EAAD,CAAUC,QAAM,EAACT,QAlBA,WAAO,IAAD,GAC3B,UAACqC,iBAAD,aAAC,EAAWC,YAOhBD,UAAUC,UAAUC,UAAUtV,GAC9BgT,EAAgB,UAAW,CAAEuC,iBAAkB,OAP7CvC,EAAgB,0CAA2C,CACzDtW,QAAS,WAeL,UACE,cAACozB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACrc,GAAA,EAAD,CACEpb,QAAS,SACTqb,UACE,qCACE,cAACI,GAAA,EAAD,CAAQic,MAAI,EAAZ,SAAc1sB,GAAUrD,KACxB,cAAC8T,GAAA,EAAD,CAAQC,QAAM,EAAd,SAAgB/T,OAGpBhG,MAAOgG,EACP5D,QAAS,CAAEsX,UAAWtX,EAAQyzB,uBAGlC,cAAC7b,GAAA,EAAD,IACA,eAACT,GAAA,EAAD,CACEC,QAAM,EACNT,QAAS,WACPzS,IACA2uB,EAAQ7rB,QAAQ,MAJpB,UAOE,cAAC0sB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACrc,GAAA,EAAD,CAAcpb,QAAS,6BCrBtB23B,GAzEY,SAACn3B,GAC1B,OACE,8CACEo3B,YAAU,UACV92B,MAAM,6BACN2B,MAAO,IACPjB,OAAQ,QACRZ,QAAQ,mBACJJ,GANN,cAQE,sBACEO,EAAE,sPACFF,KAAK,YAEP,sBACEE,EAAE,mJACFF,KAAK,YAEP,sBAAMA,KAAK,UAAUE,EAAE,wBACvB,sBACEF,KAAK,UACLE,EAAE,0DAEJ,sBACEA,EAAE,8EACFF,KAAK,YAEP,sBACEA,KAAK,UACLE,EAAE,0DAEJ,sBACEA,EAAE,8EACFF,KAAK,YAEP,sBACEE,EAAE,sPACFF,KAAK,YAEP,sBACEE,EAAE,iGACFF,KAAK,YAEP,sBACEE,EAAE,kLACFF,KAAK,YAEP,sBACEE,EAAE,yLACFF,KAAK,SAEP,sBACEE,EAAE,+OACFF,KAAK,SAEP,sBACEE,EAAE,kFACFF,KAAK,SAEP,wBAAQg3B,GAAI,OAAQC,GAAI,QAASC,EAAG,OAAQl3B,KAAK,YACjD,sBACEE,EAAE,0UACFF,KAAK,YAEP,wBAAQg3B,GAAI,QAASC,GAAI,QAASC,EAAG,OAAQl3B,KAAK,YAClD,sBACEE,EAAE,2IACFF,KAAK,iBCTEm3B,GA/CiB,WAC9B,IAAMn4B,EAAQuc,eAERC,EAAaC,aAAczc,EAAM0c,YAAYC,KAAK,OAExD,EAA0CjV,IACxC,SAACa,GAAD,MAAW,CAACA,EAAMxC,QAASwC,EAAMJ,eACjCyN,MAFF,oBAAO/L,EAAP,KAKM+S,EALN,OAOGrX,GAAkB8D,SAAlB,OAA2BQ,QAA3B,IAA2BA,IAAsBzG,EAASuC,cAE7D,OACE,eAAC6X,GAAA,EAAD,CAAQhB,WAAYA,EAAY3Z,SAAS,KAAK4a,WAAW,EAAMb,KAAMA,EAArE,UACE,cAACe,GAAA,EAAD,kCACA,eAACC,GAAA,EAAD,WACE,qBAAK9Y,MAAO,CAAElD,QAAS,OAAQM,KAAM,GAArC,SACE,cAAC,GAAD,CAAoB4C,MAAO,CAAEnD,OAAQ,IAAKW,QAAS,QAErD,cAACiC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,gBAAgBS,UAAU,IAAhE,wDAGA,cAACX,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,gBAAgBS,UAAU,IAAhE,yEAGA,qBACEJ,MAAO,CACLlD,QAAS,OACTQ,IAAK,MACLL,UAAW,GACX0uB,aAAc,IALlB,SAQGlrB,GAAkB+H,KAAI,SAACvH,GAAD,OACrB,cAAC,GAAD,CAEEA,QAASA,GAFX,4BAC4BA,gB,gDClClC5E,GAAYC,aAAW,iBAAO,CAClCX,KAAM,CACJkB,OAAQ,QAEVy2B,OAAQ,CACNn1B,gBAAiBo1B,KAAOC,SAAS,KACjC32B,OAAQ,GACRiB,MAAO,QAyCIa,GArCG,SAAC,GAAiC,IAA/BY,EAA8B,EAA9BA,UAAck0B,EAAgB,mBAC3Cr0B,EAAU/C,KAEV0I,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnDuJ,EAAYF,IAAa,SAAC7G,GAAD,OAAWA,EAAM+G,aAE1ConB,EAAmBze,OAAOmL,QAAQ9T,GAAW8E,QACjD,qDAA6BrO,UAAY8D,KAG3C,OACE,cAACwZ,GAAA,EAAD,yBAAMhf,UAAW,CAACH,EAAQzD,KAAM4D,GAAW8V,KAAK,MAAUoe,GAA1D,aACE,cAACvU,GAAA,EAAD,UACE,eAACwU,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBj3B,QAAS,EAAjD,UACE,eAAC+2B,GAAA,EAAD,CAAM5d,MAAI,EAAC9V,MAAO,CAAE5C,KAAM,GAA1B,UACE,cAACqC,EAAA,EAAD,CAAYE,MAAM,gBAAgB8xB,cAAY,EAAC/xB,QAAQ,KAAvD,kCAGA,cAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,KAAxC,SACGkyB,EAAiB9rB,SAEpB,cAACzF,GAAA,EAAD,CAAMD,UAAWohB,IAAY7hB,MAAM,gBAAgBW,GAAG,aAAtD,uCAIF,cAACozB,GAAA,EAAD,CAAM5d,MAAI,EAAV,SACE,cAAC+d,GAAA,EAAD,CAAQt0B,UAAWH,EAAQk0B,OAA3B,SACE,cAAC,IAAD,iBClDDQ,GAAsB,yCAAG,WACpC/vB,GADoC,8BAAAR,EAAA,sDAGhC2C,EAAS6C,GAHuB,eAIbhF,GAJa,gEAIzBb,EAJyB,QAK5BmP,EAAY,IAAIC,gBAAapP,EAASwF,QALV,SAOd2J,EAAU2X,WAPI,cAO5BJ,EAP4B,iBASAvc,QAAQC,IACxCsc,EAAMphB,KAAI,SAACuC,GAAD,OAAUA,EAAK0d,6BAVO,QAS5Bpf,EAT4B,OAa5BmS,EAAOnS,EAAoBuU,QAAO,SAACmW,EAAOC,GAC9C,OAAOD,EAAM3qB,IAAI4qB,KAChBjrB,IAEH7C,EAASA,EAAOkD,IAAIoS,GAjBc,wKAoB7BtV,GApB6B,gEAAH,sD,iBCe7B7J,GAAYC,aAAW,iBAAO,CAClCX,KAAM,CACJkB,OAAQ,QAEVy2B,OAAQ,CACNn1B,gBAAiBo1B,KAAOC,SAAS,KACjC32B,OAAQ,GACRiB,MAAO,QAwCIm2B,GApCI,SAAC,GAAiC,IAA/B10B,EAA8B,EAA9BA,UAAck0B,EAAgB,mBAC5Cr0B,EAAU/C,KAEhB,EAA4C+X,mBAASrL,IAArD,oBAAOE,EAAP,KAAuBirB,EAAvB,KACMnwB,EAAYqE,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAMrD,OAJAwE,qBAAU,WACRurB,GAAuB/vB,GAAW6Q,MAAK,SAACmf,GAAD,OAAWG,EAAkBH,QACnE,CAAChwB,IAGF,cAACwa,GAAA,EAAD,yBAAMhf,UAAW,CAACH,EAAQzD,KAAM4D,GAAW8V,KAAK,MAAUoe,GAA1D,aACE,cAACvU,GAAA,EAAD,UACE,eAACwU,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBj3B,QAAS,EAAjD,UACE,eAAC+2B,GAAA,EAAD,CAAM5d,MAAI,EAAC9V,MAAO,CAAE5C,KAAM,GAA1B,UACE,cAACqC,EAAA,EAAD,CAAYE,MAAM,gBAAgB8xB,cAAY,EAAC/xB,QAAQ,KAAvD,kCAGA,cAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,KAAxC,SACG2H,GAAgB4B,EAAgB,KAEnC,cAAC5I,GAAA,EAAD,CAAMD,UAAWohB,IAAY7hB,MAAM,gBAAgBW,GAAG,SAAtD,mCAIF,cAACozB,GAAA,EAAD,CAAM5d,MAAI,EAAV,SACE,cAAC+d,GAAA,EAAD,CAAQt0B,UAAWH,EAAQk0B,OAA3B,SACE,cAAC,IAAD,iB,iBC1CRj3B,GAAYC,aAAW,iBAAO,CAClCX,KAAM,CACJkB,OAAQ,QAEVy2B,OAAQ,CACNn1B,gBAAiBo1B,KAAOC,SAAS,KACjC32B,OAAQ,GACRiB,MAAO,QA2CIW,GAvCE,SAAC,GAAiC,IAA/Bc,EAA8B,EAA9BA,UAAck0B,EAAgB,mBAC1Cr0B,EAAU/C,KAEV0I,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnDwQ,EAAoBD,IACxB,SAAC/N,GAAD,OAAWA,EAAMgO,qBAGb0iB,EAA6BhhB,OAAOC,OAAO3B,GAAmBnC,QAClE,SAAC7G,GAAD,OAAWA,EAAMxH,UAAY8D,KAG/B,OACE,cAACwZ,GAAA,EAAD,yBAAMhf,UAAW,CAACH,EAAQzD,KAAM4D,GAAW8V,KAAK,MAAUoe,GAA1D,aACE,cAACvU,GAAA,EAAD,UACE,eAACwU,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBj3B,QAAS,EAAjD,UACE,eAAC+2B,GAAA,EAAD,CAAM5d,MAAI,EAAC9V,MAAO,CAAE5C,KAAM,GAA1B,UACE,cAACqC,EAAA,EAAD,CAAYE,MAAM,gBAAgB8xB,cAAY,EAAC/xB,QAAQ,KAAvD,kCAGA,cAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,KAAxC,SACGy0B,EAA2BruB,SAE9B,cAACzF,GAAA,EAAD,CAAMD,UAAWohB,IAAY7hB,MAAM,gBAAgBW,GAAG,YAAtD,sCAIF,cAACozB,GAAA,EAAD,CAAM5d,MAAI,EAAV,SACE,cAAC+d,GAAA,EAAD,CAAQt0B,UAAWH,EAAQk0B,OAA3B,SACE,cAAC,IAAD,iB,sCCzCRj3B,GAAYC,aAAW,iBAAO,CAClCX,KAAM,CACJkB,OAAQ,QAEVy2B,OAAQ,CACNn1B,gBAAiBo1B,KAAOC,SAAS,KACjC32B,OAAQ,GACRiB,MAAO,QA2CIs2B,GAvCS,SAAC,GAAiC,IAA/B70B,EAA8B,EAA9BA,UAAck0B,EAAgB,mBACjDr0B,EAAU/C,KAEV0I,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEnDwQ,EAAoBD,IACxB,SAAC/N,GAAD,OAAWA,EAAMgO,qBAGb0iB,EAA6BhhB,OAAOC,OAAO3B,GAAmBnC,QAClE,SAAC7G,GAAD,OAAWA,EAAMxH,UAAY8D,GAAsB0D,EAAM6M,mBAG3D,OACE,cAACiJ,GAAA,EAAD,yBAAMhf,UAAW,CAACH,EAAQzD,KAAM4D,GAAW8V,KAAK,MAAUoe,GAA1D,aACE,cAACvU,GAAA,EAAD,UACE,eAACwU,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBj3B,QAAS,EAAjD,UACE,eAAC+2B,GAAA,EAAD,CAAM5d,MAAI,EAAC9V,MAAO,CAAE5C,KAAM,GAA1B,UACE,cAACqC,EAAA,EAAD,CAAYE,MAAM,gBAAgB8xB,cAAY,EAAC/xB,QAAQ,KAAvD,kCAGA,cAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,KAAxC,SACGy0B,EAA2BruB,SAE9B,cAACzF,GAAA,EAAD,CAAMD,UAAWohB,IAAY7hB,MAAM,gBAAgBW,GAAG,YAAtD,sCAIF,cAACozB,GAAA,EAAD,CAAM5d,MAAI,EAAV,SACE,cAAC+d,GAAA,EAAD,CAAQt0B,UAAWH,EAAQk0B,OAA3B,SACE,cAAC,KAAD,iB,sElBpCRj3B,GAAYC,aAAW,iBAAO,CAClCX,KAAM,CACJkB,OAAQ,QAEVy2B,OAAQ,CACNn1B,gBAAiBo1B,KAAOrT,OAAO,KAC/BrjB,OAAQ,GACRiB,MAAO,IAETu2B,YAAa,CACXl2B,gBAAiBo1B,KAAOe,MAAM,KAC9Bz3B,OAAQ,GACRiB,MAAO,S,SAINmvB,O,2CAAAA,I,yCAAAA,I,sCAAAA,Q,KAML,IAAMsH,GAAQ,CACZ,CACEv3B,MAAO,kCACPw3B,KAAM,SACNC,UAAW,uBAEb,CACEz3B,MAAO,sCACPw3B,KAAM,aACNC,UAAW,sBAEb,CACEz3B,MAAO,uCACPw3B,KAAM,YACNC,UAAW,0BAyEAC,GArEO,SAAC,GAAgC,EAA9Bn1B,UAA8B,mBAAC,IAChDH,EAAU/C,KAEVs4B,EAAaJ,GAAMzuB,OAAS,EAE5Bf,EAAqBnC,IAAa,SAACa,GAAD,OAAWA,EAAMxC,WAEzD,EAA4CmT,mBAASrL,IAArD,oBAAOE,EAAP,KAAuBirB,EAAvB,KACMnwB,EAAYqE,IAAkB,SAAC3E,GAAD,OAAWA,EAAMM,aAErDwE,qBAAU,WACRurB,GAAuB/vB,GAAW6Q,MAAK,SAACmf,GAAD,OAAWG,EAAkBH,QACnE,CAAChwB,IAEJ,IAAMyG,EAAYF,IAAa,SAAC7G,GAAD,OAAWA,EAAM+G,aAC1ConB,EAAmBze,OAAOmL,QAAQ9T,GAAW8E,QACjD,qDAA6BrO,UAAY8D,KAGvC6vB,EAAc3H,GAAM4H,gBAOxB,OANI5rB,EAAe6rB,IAAI/rB,IACrB6rB,EAAc3H,GAAM8H,mBACXnD,EAAiB9rB,QAAU,IACpC8uB,EAAc3H,GAAM+H,mBAIpB,qCACE,eAACtB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBj3B,QAAS,EAAjD,UACE,eAAC+2B,GAAA,EAAD,CAAM5d,MAAI,EAAC9V,MAAO,CAAE5C,KAAM,GAA1B,UACE,cAACqC,EAAA,EAAD,CACEE,MAAM,cACND,QAAQ,QACRM,MAAO,CAAE2rB,aAAc,UAHzB,SAKG4I,GAAMK,GAAa53B,QAEtB,cAACid,GAAA,EAAD,CACE7Z,UAAWohB,IACXlhB,GAAIi0B,GAAMK,GAAaJ,KACvB90B,QAAQ,YACRC,MAAM,UAJR,SAMG40B,GAAMK,GAAaH,eAGxB,eAACf,GAAA,EAAD,CAAM5d,MAAI,EAAV,UACG8e,IAAgBD,GACf,cAACd,GAAA,EAAD,CAAQt0B,UAAWH,EAAQk0B,OAA3B,SACE,cAAC,KAAD,MAGHsB,IAAgBD,GACf,cAACd,GAAA,EAAD,CAAQt0B,UAAWH,EAAQi1B,YAA3B,SACE,cAAC,KAAD,YAKR,cAACY,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACvG,GAAA,EAAD,CACE7uB,MAAsB,IAAd80B,EAAqBD,EAC7Bj1B,QAAQ,sBmB5GZrD,GAAYC,aAAW,SAACpB,GAAD,OAC3BqB,YAAa,CACXZ,KAAM,CACJmB,QAAS,OACTM,KAAM,EACNmD,cAAe,SACfzC,MAAO,OACPC,SAAU,IACVmsB,uBAAwB,EACxBC,wBAAyB,GAE3BC,QAAS,CACPtsB,MAAO,OACPC,SAAU,UAsCDS,GAjCF,WACX,IAAMY,EAAU/C,KAEhB,OACE,eAAC,GAAD,WACE,eAACkiB,GAAA,EAAD,CAAMhf,UAAWH,EAAQzD,KAAzB,UACE,cAAC+iB,GAAA,EAAD,CAAYzF,OAAQ,cAAC,GAAD,IAAkBjc,MAAM,iBAC5C,cAACkiB,GAAA,EAAD,UACE,cAAC,GAAD,SAGJ,cAAClI,GAAA,EAAD,CAASzX,UAAWH,EAAQgrB,UAC5B,sBACEpqB,MAAO,CACL/C,UAAW,GACXH,QAAS,OACT+0B,oBAAqB,wCACrBC,aAAc,QACdC,QAAS,MACT10B,eAAgB,gBAChBS,MAAO,OACPC,SAAU,KATd,UAYE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,WCjBFo3B,GAAwB,GAEjBC,GAA2B,WACtC,MAAkDxyB,IAAa,SAACa,GAAD,MAAW,CACxEA,EAAMJ,YACNI,EAAMxC,QACNwC,EAAML,UACNK,EAAMN,WAJR,oBAAOE,EAAP,KAAoBpC,EAApB,KAA6BmC,EAA7B,KAAwCD,EAAxC,KAOQ6S,EAAoBC,cAApBD,gBAER,EAAqC1F,IACnC,SAAC7M,GAAD,MAAW,CAACA,EAAM4L,aAAc5L,EAAMgN,gBACtCK,MAFF,oBAAOzB,EAAP,KAAqBoB,EAArB,KAKAlI,qBAAU,WACR,GACGlF,IACDD,GACCD,GACAlC,GACDA,IAAY3C,EAASuC,aAOvB,IAFA,IAAM4T,EAAsBtB,OAAOmL,QAAQjP,GAX7B,aAaT,IAbS,EAaT,uBAAOmB,EAAP,KACGiE,EADH,KACsCnF,QAAO,SAAC7B,GAAD,MAC9C,CAACnH,GAAmB2K,KAAM3K,GAAmB4K,SAAS3M,SAASkJ,EAAEiD,WAfvD,eAkBK+D,GAlBL,yBAkBDjF,EAlBC,QAmBV,GAAI2lB,GAAY5wB,SAASiL,EAAGxO,MAAO,cAEnCm0B,GAAY5pB,KAAKiE,EAAGxO,MA1DS,SAAC,GAMD,IALnCkC,EAKkC,EALlCA,SACAmyB,EAIkC,EAJlCA,YACAC,EAGkC,EAHlCA,YACAC,EAEkC,EAFlCA,SACA/lB,EACkC,EADlCA,GAEOtM,EACJsyB,mBAAmBhmB,EAAGxO,KAAM4G,GAAYI,eACxC4M,MAAK,WACAygB,GAAaA,EAAY7lB,EAAGxO,SAEjCy0B,OAAM,SAAC7wB,GACF2wB,GAAUA,EAAS/lB,EAAGxO,KAAM4D,MAEjC8wB,SAAQ,WACHJ,GAAaA,EAAY9lB,EAAGxO,SA4C9B20B,CAAsB,CACpBzyB,SAAUC,EAAOD,SACjBsM,GAAIA,EACJ6lB,YAAa,WACX5kB,EAAaD,EAAKhB,EAAGxO,KAAMsF,GAAmBsvB,WAC9C5f,EAAgBxG,EAAG4B,eAAgB,CACjC1R,QAAS,aAGb61B,SAAU,SAACM,EAAGjxB,GACZ,IAAMwR,EAAUC,8BAAmBzR,EAAM0R,KAAM1R,EAAMwR,SAErD3F,EAAaD,EAAKhB,EAAGxO,KAAMsF,GAAmBwvB,OAAQ1f,GACtDJ,EAAgBxG,EAAG6B,YAAa,CAC9B3R,QAAS,cAnBjB,2BAAsC,kBACD,OAnBzB,gCAad,MAAkC+U,EAAlC,eAAwD,MA8BvD,CACDpR,EACApC,EACAmC,EACAD,EACAkM,EACA2G,EACAvF,KChEJ,IAAMslB,GAAS,WACb,IAAM1yB,EAAcT,IAAa,SAACa,GAAD,OAAWA,EAAMJ,eAIlD,OAFA+xB,KAGE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CACED,OAAK,EACLC,KAAK,IACL5yB,YAAaA,EACbjD,UAAW5B,KAEb,cAAC,GAAD,CACEw3B,OAAK,EACLC,KAAK,YACL5yB,YAAaA,EACbjD,UAAW3B,KAEb,cAAC,GAAD,CACEu3B,OAAK,EACLC,KAAK,SACL5yB,YAAaA,EACbjD,UAAW1B,KAEb,cAAC,GAAD,CACEs3B,OAAK,EACLC,KAAK,aACL5yB,YAAaA,EACbjD,UAAWzB,KAEb,cAAC,GAAD,CACEq3B,OAAK,EACLC,KAAK,WACL5yB,YAAaA,EACbjD,UAAWxB,KAEb,cAAC,IAAD,CAAOq3B,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU31B,GAAG,cAOjB41B,GAKD,SAAC,GAAD,IAAG7yB,EAAH,EAAGA,YAAa2yB,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAAiBE,EAAxC,EAA6B/1B,UAA7B,OACH,cAAC,IAAD,CACE41B,MAAOA,EACPC,KAAMA,EACNG,OAAQ,SAACv6B,GAAD,OACNwH,EACE,cAAC8yB,EAAD,eAAet6B,IAEf,cAAC,IAAD,CACEyE,GAAI,CACFP,SAAU,WACV0D,MAAO,CAAEuF,KAAMnN,EAAMkD,iBAQlBs3B,GAhGf,WACE,IAAMC,EAAeC,iBAAY,MAIjC,OAFAjuB,KAGE,eAACkuB,EAAA,EAAD,CAAet7B,MAAOA,EAAtB,UACE,cAACu7B,EAAA,EAAD,IACA,eAAC,IAAD,CACEC,SAAU,EACVC,aAAc,CACZC,SAAU,MACVC,WAAY,QAEd5iB,IAAKqiB,EANP,UAQE,cAAC,GAAD,IACA,cAAC,GAAD,WCnCRQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.250011e1.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport primary from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          background: '#faf9f9 !important',\n        },\n      },\n    },\n    MuiCard: {\n      root: {\n        borderRadius: 20,\n      }\n    }\n  },\n  props: {\n    MuiCard: {\n      elevation: 0\n    }\n  }\n});\n\nexport default theme","function Logo(props: any) {\n  return (\n    <svg\n      viewBox=\"0 0 464 306\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M240.7 254.8V138.3l23.9-2.9 3.7 18.3c7.8-12.5 19.2-18.8 34-18.8 3.1 0 5.7.1 7.6.4l-.4 23.8c-2.9-.4-5.9-.7-9-.7-10.5 0-18.3 2.8-23.5 8.4-5.2 5.6-7.8 13.3-7.8 23.3v64.8h-28.5v-.1z\"\n        fill=\"#000\"\n      />\n      <path\n        d=\"M78.4 118.3V7.5S42.5 25.4 42.5 63.4s35.9 54.9 35.9 54.9z\"\n        fill=\"#008CFF\"\n      />\n      <path\n        d=\"M78.4 7.5s35.9 17.9 35.9 55.9-35.9 55-35.9 55V7.5z\"\n        fill=\"#0CBFE8\"\n      />\n      <path\n        d=\"M162.1 170.4l49.3-28s-17-11.4-33.9-1.8-15.4 29.8-15.4 29.8z\"\n        fill=\"#008CFF\"\n      />\n      <path\n        d=\"M211.4 142.4s1.1 20.5-15.8 30.1c-16.9 9.6-33.5-2-33.5-2l49.3-28.1z\"\n        fill=\"#0CBFE8\"\n      />\n      <path\n        d=\"M213.7 138c-.9-.5-21.7-11.4-39.2-1.3-14.1 8.1-16.9 24.4-17.4 31.2l-6.5 3.7c-3.2-3.2-7.7-5.2-12.6-5.2-4.8 0-9.2 1.9-12.4 5l-29.8-17.2c.3-1.4.5-2.8.5-4.3 0-8.2-5.5-15.1-13-17.3V122c8.7-5.6 36.2-25.8 36.2-58.1 0-37.3-37-60.6-38.6-61.6L78.3.7l-2.6 1.6c-1.6 1-38.6 24.3-38.6 61.6 0 32.2 27.5 52.5 36.2 58.1v10.6c-7.5 2.2-13 9.1-13 17.3 0 1.5.2 2.9.5 4.3L31 171.4c-3.2-3.1-7.6-5-12.4-5-9.9 0-18 8.1-18 18 0 8.2 5.5 15.1 13 17.3v35.7c-7.5 2.2-13 9.1-13 17.3 0 9.9 8.1 18 18 18 5.3 0 10-2.3 13.3-5.9l28.9 16.7c-.3 1.4-.5 2.8-.5 4.3 0 9.9 8.1 18 18 18s18-8.1 18-18c0-1.5-.2-2.9-.5-4.3l28.9-16.7c3.3 3.6 8 5.9 13.3 5.9 9.9 0 18-8.1 18-18 0-8.2-5.5-15.1-13-17.3v-35.7c7.5-2.2 13-9.1 13-17.3 0-1.4-.2-2.9-.5-4.2l6.5-3.7c3.8 1.8 11.3 4.7 19.8 4.7 5.2 0 10.7-1.1 16.1-4.2 17.5-10.1 18.5-33.6 18.5-34.6l.1-3.1-2.8-1.3zM143 190.8c-1.4 1.1-3.1 1.7-5 1.7-1 0-1.9-.2-2.8-.5-.8-.3-1.5-.7-2.1-1.2-1.6-1.2-2.7-3.1-3-5.2 0-.4-.1-.8-.1-1.2 0-.3 0-.7.1-1 .4-2.9 2.3-5.4 5-6.5.9-.4 1.9-.6 2.9-.6 1.1 0 2.2.2 3.1.6 2.9 1.2 4.9 4.1 4.9 7.4 0 .5 0 .9-.1 1.3-.3 2.2-1.3 3.9-2.9 5.2zm3.1 63.9c0 4.4-3.6 8-8 8-1.5 0-3-.4-4.2-1.2-2.3-1.4-3.8-3.9-3.8-6.8v-.2c0-.9.2-1.7.5-2.5.5-1.4 1.4-2.7 2.6-3.6 1-.8 2.2-1.4 3.6-1.6.4-.1.9-.1 1.4-.1 1.9 0 3.6.7 5 1.7 1.7 1.5 2.9 3.8 2.9 6.3zm-13-17.2c-2.4.7-4.7 1.9-6.6 3.5L96 223.4c.2-1.1.3-2.3.3-3.5 0-1.7-.3-3.4-.7-5l30-17.3c2.1 2 4.6 3.5 7.4 4.3v35.6h.1zm-54.7 58.3c-4 0-7.3-2.9-7.9-6.8-.1-.4-.1-.8-.1-1.2 0-3.4 2.1-6.2 5-7.4.9-.4 2-.6 3-.6 1.1 0 2.1.2 3 .6 2.9 1.2 5 4.1 5 7.4 0 .4 0 .8-.1 1.2-.6 3.9-3.9 6.8-7.9 6.8zm-17.6-72.4L30.3 241c-1.9-1.6-4.1-2.8-6.6-3.5v-35.7c2.9-.8 5.4-2.3 7.5-4.3l30 17.3c-.5 1.6-.7 3.3-.7 5.1-.1 1.1 0 2.3.3 3.5zm-34 31.3c0 2.9-1.5 5.4-3.8 6.8-1.2.8-2.7 1.2-4.2 1.2-4.4 0-8-3.6-8-8 0-2.5 1.2-4.8 3-6.3 1.4-1.1 3.1-1.7 5-1.7.5 0 .9 0 1.4.1 1.3.2 2.5.8 3.6 1.6 1.2.9 2.1 2.2 2.6 3.6.3.8.5 1.6.5 2.5-.1.1-.1.2-.1.2zm-16.1-70.2c0-4.4 3.6-8 8-8 1 0 2 .2 2.9.6 2.6 1 4.6 3.4 5 6.3.1.4.1.8.1 1.2 0 .4 0 .8-.1 1.2-.3 2.1-1.4 3.9-3 5.2-.6.5-1.3.9-2 1.1-.9.4-1.9.6-3 .6-1.9 0-3.6-.6-5-1.7-1.7-1.7-2.9-4-2.9-6.5zm62.7-40.8c1.4-1.1 3.1-1.7 5-1.7s3.6.7 5 1.7c1.6 1.3 2.7 3.1 3 5.1.1.4.1.8.1 1.2 0 2.5-1.2 4.8-3.1 6.3-.6.5-1.3.9-2 1.1-.9.4-1.9.6-3 .6-1 0-2-.2-3-.6-.7-.3-1.4-.7-2-1.1-1.9-1.5-3.1-3.7-3.1-6.3 0-.4 0-.8.1-1.2.3-2 1.4-3.8 3-5.1zm13 76.4c-.1 2.4-1.3 4.6-3 6-.4.3-.8.5-1.2.8-1.1.6-2.4 1-3.8 1-1.3 0-2.6-.3-3.7-.9-.4-.2-.9-.5-1.2-.8-1.8-1.4-3-3.6-3-6.1v-.2c0-.7.1-1.4.3-2.1.4-1.7 1.4-3.2 2.8-4.2.9-.7 1.9-1.2 3-1.5.6-.2 1.3-.3 2-.3s1.4.1 2.1.3c1.1.3 2 .8 2.9 1.4 1.3 1.1 2.3 2.5 2.7 4.1.2.7.3 1.4.3 2.2-.2.1-.2.2-.2.3zm34.2-40c-.3 1.4-.5 2.8-.5 4.3s.2 3 .6 4.5l-30.3 17.5c-2-1.8-4.3-3.1-7-3.9v-35.2c2.9-.8 5.4-2.3 7.5-4.3l29.7 17.1zm-73.5-116c0-26.4 23.3-45.6 31.2-51.3 8 5.7 31.2 24.8 31.2 51.3 0 22.1-16.4 38.2-26.3 45.8V68.1c0-2.8-2.2-5-5-5-2.7 0-5 2.2-5 5V110c-9.7-7.7-26.1-23.7-26.1-45.9zM65.9 163c2.1 2 4.6 3.5 7.5 4.3v35.2c-2.6.7-4.9 2-6.9 3.8l-30.3-17.5c.3-1.4.5-2.8.5-4.3s-.2-2.9-.5-4.3L65.9 163zm-29.5 94.9c.2-1 .3-2.1.3-3.1 0-1.9-.3-3.8-.9-5.5l29.6-17c2.2 2.3 4.9 4 8 4.9v33.4c-2.9.8-5.4 2.3-7.5 4.4l-29.5-17.1zm54.5 17c-2.1-2-4.6-3.5-7.5-4.4v-33.4c3.1-.9 5.9-2.6 8-4.9l29.5 17c-.6 1.7-.9 3.6-.9 5.5 0 1.1.1 2.1.3 3.1l-29.4 17.1zm102-106.4c-6.6 3.8-14.1 3.1-19.7 1.6l9.9-5.7c2.4-1.4 3.2-4.4 1.8-6.8-1.4-2.4-4.4-3.2-6.8-1.8l-9.9 5.7c1.5-5.6 4.6-12.4 11.2-16.2 9.5-5.5 21.2-2 26.6.1-.7 5.7-3.5 17.6-13.1 23.1zM330.5 108.6c0-9.7 5.4-14.6 16.2-14.6 10.8 0 16.2 4.9 16.2 14.6 0 4.6-1.4 8.2-4.1 10.8-2.7 2.6-6.8 3.9-12.2 3.9-10.7 0-16.1-4.9-16.1-14.7zm31.1 146.2h-29.8V136.9h29.8v117.9zM453.4 159.3h-25.8v95.5h-29.8v-95.5h-16.4v-14.4l16.4-8v-8c0-12.5 3.1-21.6 9.2-27.3 6.1-5.7 16-8.6 29.5-8.6 10.3 0 19.5 1.5 27.5 4.6l-7.6 21.9c-6-1.9-11.5-2.8-16.6-2.8-4.2 0-7.3 1.3-9.2 3.8-1.9 2.5-2.8 5.7-2.8 9.6v6.8h25.8v22.4h-.2z\"\n        fill=\"#000\"\n      />\n    </svg>\n  )\n}\n\nexport default Logo","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Logo from \"../assets/Logo\";\nimport { Link } from \"react-router-dom\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ScheduleIcon from \"@material-ui/icons/EventAvailable\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport ContractsIcon from \"@material-ui/icons/OfflineBolt\";\nimport AccountIcon from \"@material-ui/icons/AccountCircle\";\n\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport ScheduleOutlinedIcon from \"@material-ui/icons/EventAvailableOutlined\";\nimport StoreOutlinedIcon from \"@material-ui/icons/StoreOutlined\";\nimport ContractsOutlinedIcon from \"@material-ui/icons/OfflineBoltOutlined\";\nimport AccountOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\n\nimport { useLocation } from \"react-router-dom\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    logo: ({ hideMenu }: any) => ({\n      height: 32,\n      \"@media (max-width: 360px)\": {\n        display: hideMenu ? \"initial\" : \"none\",\n      },\n    }),\n    title: ({ hideMenu }: any) => ({\n      marginTop: 8,\n      marginLeft: 5,\n      flexGrow: 1,\n      \"@media (max-width: 500px)\": {\n        display: hideMenu ? \"initial\" : \"none\",\n      },\n    }),\n    navButtons: {\n      display: \"flex\",\n      flex: 1,\n      justifyContent: \"flex-end\",\n      gap: \"5px\",\n    },\n    navButton: {\n      padding: 0,\n      minWidth: 60,\n      paddingTop: \"0px !important\",\n      fontSize: \"0.75rem !important\",\n    },\n    navLabel: {\n      fontSize: \"0.75rem !important\",\n    },\n    toolbar: {\n      display: \"flex\",\n      flex: 1,\n      width: \"100%\",\n      maxWidth: 800,\n      padding: 0,\n      paddingLeft: 12,\n    },\n    appBar: ({ scrolled }) => ({\n      display: \"flex\",\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#faf9f9\",\n      padding: 0,\n      boxShadow: scrolled ? \"0px 5px 20px -5px rgb(0 0 0 / 25%)\" : \"none\",\n    }),\n  })\n);\n\nenum ESection {\n  Home = 0,\n  Schedule = 1,\n  Store = 2,\n  Contracts = 3,\n  Account = 4,\n}\n\nconst menuIndexes: { [key: string]: number } = {\n  \"/\": ESection.Home,\n  \"/schedule\": ESection.Schedule,\n  \"/store\": ESection.Store,\n  \"/contracts\": ESection.Contracts,\n  \"/account\": ESection.Account,\n};\n\nconst Layout: React.FC<{ hideMenu?: boolean }> = ({ children, hideMenu }) => {\n  const location = useLocation();\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const classes = useStyles({ hideMenu, scrolled });\n\n  return (\n    <>\n      <AppBar position=\"sticky\" className={classes.appBar} elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <Logo className={classes.logo} />\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            color=\"textPrimary\"\n          >\n            scheduler\n          </Typography>\n          {!hideMenu && (\n            <div className={classes.navButtons}>\n              <BottomNavigation\n                showLabels\n                value={menuIndexes[location.pathname]}\n                style={{ background: \"transparent\" }}\n              >\n                <BottomNavigationAction\n                  label=\"Home\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Home ? (\n                      <HomeIcon />\n                    ) : (\n                      <HomeOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/\"\n                />\n                <BottomNavigationAction\n                  label=\"Schedule\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Schedule ? (\n                      <ScheduleIcon />\n                    ) : (\n                      <ScheduleOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/schedule\"\n                />\n                <BottomNavigationAction\n                  label=\"Store\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Store ? (\n                      <StoreIcon />\n                    ) : (\n                      <StoreOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/store\"\n                />\n                <BottomNavigationAction\n                  label=\"Contracts\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Contracts ? (\n                      <ContractsIcon />\n                    ) : (\n                      <ContractsOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/contracts\"\n                />\n                <BottomNavigationAction\n                  label=\"Account\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Account ? (\n                      <AccountIcon />\n                    ) : (\n                      <AccountOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/account\"\n                />\n              </BottomNavigation>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <div\n        style={{\n          padding: 15,\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          paddingBottom: 60,\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import { EExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\n\nexport enum ENetwork {\n  NotSupported = -1,\n  RSKMainnet = 30,\n  RSKTestnet = 31,\n}\n\nexport const SupportedNetworks = [ENetwork.RSKMainnet, ENetwork.RSKTestnet];\n\nexport const NetworkName = {\n  [ENetwork.NotSupported]: \"Unsupported network\",\n  [ENetwork.RSKMainnet]: \"RSK Mainnet\",\n  [ENetwork.RSKTestnet]: \"RSK Testnet\",\n};\n\nexport const NetworkExplorer = {\n  [ENetwork.NotSupported]: null,\n  [ENetwork.RSKMainnet]: \"https://explorer.rsk.co/\",\n  [ENetwork.RSKTestnet]: \"https://explorer.testnet.rsk.co/\",\n};\n\nexport const getExplorerTxLink = (hash: string, network: ENetwork) => {\n  const explorerUrl = NetworkExplorer[network];\n  if (!explorerUrl) return null;\n\n  return new URL(`/tx/${hash}`, explorerUrl).toString();\n};\n\nexport const ExecutionStateDescriptions = {\n  [EExecutionState.NotScheduled]: \"Not scheduled\",\n  [EExecutionState.Scheduled]: \"Scheduled\",\n  [EExecutionState.ExecutionSuccessful]: \"Successful\",\n  [EExecutionState.ExecutionFailed]: \"Failed\",\n  [EExecutionState.Overdue]: \"Overdue\",\n  [EExecutionState.Refunded]: \"Refunded\",\n  [EExecutionState.Cancelled]: \"Cancelled\",\n};\n","import RLogin from \"@rsksmart/rlogin\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { SupportedNetworks } from \"../shared/types\";\n\nexport const rLogin = new RLogin({\n  cacheProvider: true, // change to true to cache user's wallet choice\n  providerOptions: {\n    // read more about providers setup in https://github.com/web3Modal/web3modal/\n    walletconnect: {\n      package: WalletConnectProvider, // setup wallet connect for mobile wallet support\n      options: {\n        rpc: {\n          31: \"https://public-node.testnet.rsk.co\", // use RSK public nodes to connect to the testnet\n        },\n      },\n    },\n  },\n  supportedChains: SupportedNetworks,\n});\n\nexport const isRLoginConnected = () => {\n  const result = localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\")\n    ? true\n    : false;\n\n  return result;\n};\n","import create from \"zustand\";\nimport { providers, Signer } from \"ethers\";\nimport { isRLoginConnected } from \"./rLogin\";\nimport { ENetwork, SupportedNetworks } from \"../shared/types\";\n\nexport interface IUseConnector {\n  account: string | undefined;\n  provider: providers.Web3Provider | undefined;\n  signer: Signer | undefined;\n  isLoading: boolean;\n  network: ENetwork | undefined;\n  isConnected: boolean;\n  disconnect: () => Promise<void>;\n  connect: (rProvider: any, rDisconnect: any) => Promise<void>;\n}\n\nconst useConnector = create<IUseConnector>((set, get) => ({\n  account: undefined,\n  provider: undefined,\n  signer: undefined,\n  isLoading: isRLoginConnected(),\n  network: undefined,\n  isConnected: false,\n  disconnect: async () => {\n    localStorage.clear();\n    set((state) => ({\n      isConnected: false,\n      isLoading: false,\n    }));\n  },\n  connect: async (rProvider: any, rDisconnect: any) => {\n    try {\n      if (!rDisconnect) throw new Error(\"disconnect functions is empty\");\n\n      const web3Provider = new providers.Web3Provider(rProvider);\n      const [account] = await web3Provider.listAccounts();\n      const signer: Signer = web3Provider.getSigner(0);\n\n      const isConnected = account && signer ? true : false;\n\n      const network = await web3Provider.getNetwork();\n\n      set((state) => ({\n        account,\n        provider: web3Provider,\n        signer: signer,\n        disconnect: async () => {\n          localStorage.clear();\n          set((state) => ({\n            isConnected: false,\n            isLoading: false,\n          }));\n          rProvider.removeAllListeners();\n          rDisconnect();\n        },\n        isConnected: isConnected,\n        isLoading: false,\n        network: network.chainId as ENetwork,\n      }));\n\n      const handleConnectionChanges = async (\n        rProvider: any,\n        chainId: number\n      ) => {\n        if (!SupportedNetworks.includes(chainId)) {\n          set((state) => ({\n            network: parseInt(chainId.toString()) as ENetwork,\n            isLoading: true,\n          }));\n          return;\n        }\n\n        const web3Provider = new providers.Web3Provider(rProvider);\n        const [account] = await web3Provider.listAccounts();\n        const signer: Signer = web3Provider.getSigner(0);\n\n        const isConnected = account && signer ? true : false;\n\n        if (!isConnected) {\n          get().disconnect();\n          return;\n        }\n\n        set((state) => ({\n          network: parseInt(chainId.toString()) as ENetwork,\n          provider: web3Provider,\n          signer: signer,\n          account: account,\n          isConnected: isConnected,\n          isLoading: false,\n        }));\n      };\n\n      // Subscribe to accounts change\n      rProvider.on(\"accountsChanged\", (accounts: string[]) => {\n        handleConnectionChanges(rProvider, get().network as number);\n      });\n\n      // Subscribe to chainId change\n      rProvider.on(\"chainChanged\", (chainId: number) => {\n        handleConnectionChanges(rProvider, chainId);\n      });\n\n      // Subscribe to rProvider connection\n      rProvider.on(\"connect\", (info: { chainId: number }) => {\n        handleConnectionChanges(rProvider, info.chainId);\n      });\n\n      // Subscribe to rProvider disconnection\n      rProvider.on(\"disconnect\", (error: { code: number; message: string }) => {\n        get().disconnect();\n      });\n    } catch (error) {\n      console.error(\"connect error: \", error);\n      const disconnect = get().disconnect;\n      if (disconnect) disconnect();\n    }\n  },\n}));\n\nexport default useConnector;\n","import useConnector from \"./useConnector\"\nimport Chip from '@material-ui/core/Chip';\nimport { ENetwork, NetworkName } from \"../shared/types\";\n\n// By default shows the connected network\nconst NetworkLabel = ({ network }: { network?: ENetwork }) => {\n    const connectedToNetwork = useConnector(state => state.network)\n\n    const displayNetwork = network ? network : connectedToNetwork\n\n    let color = \"default\"\n\n    color = displayNetwork === ENetwork.RSKMainnet ? \"primary\" : color\n    color = displayNetwork === ENetwork.RSKTestnet ? \"secondary\" : color\n\n    const label = displayNetwork ? NetworkName[displayNetwork] : NetworkName[ENetwork.NotSupported]\n\n    return <Chip size=\"small\" color={color as any} label={label ?? NetworkName[ENetwork.NotSupported]} />\n}\n\nexport default NetworkLabel","import Chip from \"@material-ui/core/Chip\";\nimport { ExecutionStateDescriptions } from \"../shared/types\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { EExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\nimport { IExecutionSnapshot } from \"../sdk-hooks/useExecution\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    [EExecutionState.NotScheduled]: {\n      color: \"#333\",\n      border: \"1px solid #f7e463\",\n      backgroundColor: \"#f7e463\",\n    },\n    [EExecutionState.Scheduled]: {\n      color: \"#333\",\n      border: \"1px solid #7cd992\",\n      backgroundColor: \"#7cd992\",\n    },\n    [EExecutionState.ExecutionSuccessful]: {\n      color: \"#333\",\n      border: \"1px solid #7cd992\",\n      backgroundColor: \"#7cd992\",\n    },\n    [EExecutionState.ExecutionFailed]: {\n      color: \"#fff\",\n      border: \"1px solid #eb6060\",\n      backgroundColor: \"#eb6060\",\n    },\n    [EExecutionState.Overdue]: {\n      color: \"#fff\",\n      border: \"1px solid #eb6060\",\n      backgroundColor: \"#eb6060\",\n    },\n    [EExecutionState.Cancelled]: {\n      color: \"#333\",\n      border: \"1px solid #a8a8a8\",\n      backgroundColor: \"#a8a8a8\",\n    },\n    [EExecutionState.Refunded]: {\n      color: \"#333\",\n      border: \"1px solid #a8a8a8\",\n      backgroundColor: \"#a8a8a8\",\n    },\n  })\n);\n\nconst StatusLabel: React.FC<{\n  execution: IExecutionSnapshot;\n  isLoading?: boolean;\n  isConfirmed?: boolean;\n}> = ({ execution, isLoading, isConfirmed }) => {\n  const classes = useStyles();\n\n  const state = execution.state ?? EExecutionState.NotScheduled;\n\n  const label = isLoading\n    ? \"...\"\n    : isConfirmed\n    ? ExecutionStateDescriptions[state]\n    : \"Waiting confirmation\";\n\n  return (\n    <Chip\n      size=\"small\"\n      color=\"primary\"\n      variant=\"default\"\n      label={label}\n      classes={{\n        colorPrimary:\n          classes[isConfirmed ? state : EExecutionState.NotScheduled],\n      }}\n    />\n  );\n};\n\nexport default StatusLabel;\n","const hyphensAndCamelCaseToWords = (str: string) => {\n  var arr = str.split(/[_-]/);\n  var newStr = \"\";\n  for (var i = 1; i < arr.length; i++) {\n    newStr += arr[i].charAt(0).toUpperCase() + arr[i].slice(1) + \" \";\n  }\n\n  const text = (arr[0] + newStr).trim();\n\n  const result = text.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n};\n\nexport default hyphensAndCamelCaseToWords;\n","function shortText(address?: string): string {\n  if (!address) return \"\";\n\n  return `${address.substr(0, 6)}...${address.substr(\n    address.length - 4,\n    address.length\n  )}`;\n}\n\nexport default shortText;\n","import { useCallback, useMemo } from \"react\";\nimport create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport shallow from \"zustand/shallow\";\nimport useConnector from \"../connect/useConnector\";\nimport localbasePersist from \"../shared/localbasePersist\";\nimport { ENetwork } from \"../shared/types\";\n\nexport enum ETransactionStatus {\n  Idle,\n  Waiting,\n  Failed,\n  Confirmed,\n}\n\nexport interface ITransaction {\n  network: ENetwork;\n  hash: string;\n  status: ETransactionStatus;\n  confirmMessage: string;\n  failMessage: string;\n  startedAt: string;\n  errorMessage?: string;\n}\n\nexport interface IUseTransactionsStore {\n  transactions: {\n    [key: string]: ITransaction[];\n  };\n  register: (key: string, tx: ITransaction) => void;\n  changeStatus: (\n    key: string,\n    txHash: string,\n    status: ETransactionStatus,\n    errorMessage?: string\n  ) => void;\n}\n\nexport const useTransactionsStore = create<IUseTransactionsStore>(\n  persist(\n    (set, get) => ({\n      transactions: {},\n      register: (key: string, tx: ITransaction) => {\n        const result = (get().transactions[key] ?? []).filter(\n          (x) => x.hash !== tx.hash\n        );\n\n        set((state) => ({\n          transactions: {\n            ...state.transactions,\n            [key]: [...result, tx],\n          },\n        }));\n      },\n      changeStatus: (\n        key: string,\n        txHash: string,\n        status: ETransactionStatus,\n        errorMessage?: string\n      ) => {\n        let transactionToChange = (get().transactions[key] ?? []).find(\n          (x) => x.hash === txHash\n        );\n\n        if (transactionToChange) {\n          transactionToChange.status = status;\n          transactionToChange.errorMessage = errorMessage;\n\n          const result = (get().transactions[key] ?? []).filter(\n            (x) => x.hash !== txHash\n          );\n\n          set((state) => ({\n            transactions: {\n              ...state.transactions,\n              [key]: [...result, transactionToChange!],\n            },\n          }));\n        }\n      },\n    }),\n    localbasePersist(\"transactions\")\n  )\n);\n\nexport const useTransactions = (key: string) => {\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const [transactions, registerIntoStore] = useTransactionsStore(\n    (state) => [state.transactions, state.register],\n    shallow\n  );\n\n  const transactionsFilteredByKey = useMemo(\n    () => transactions[key] ?? [],\n    [key, transactions]\n  );\n\n  const pendingTransactions = transactionsFilteredByKey.filter((x) =>\n    [ETransactionStatus.Idle, ETransactionStatus.Waiting].includes(x.status)\n  );\n\n  const register = useCallback(\n    (txHash: string, confirmMessage: string, failMessage) => {\n      registerIntoStore(key, {\n        hash: txHash,\n        network: connectedToNetwork!,\n        status: ETransactionStatus.Idle,\n        confirmMessage,\n        failMessage,\n        startedAt: new Date().toISOString(),\n      });\n    },\n    [connectedToNetwork, key, registerIntoStore]\n  );\n\n  return [pendingTransactions, register] as const;\n};\n","import { BigNumber as EthBigNumber } from \"@ethersproject/bignumber\";\nimport BigNumber from \"bignumber.js\";\n\nexport const fromNumberToHms = (secondsInput: number) => {\n  const days = Math.floor(secondsInput / (60 * 60 * 24));\n\n  const divisor_for_hours = secondsInput % (60 * 60 * 24);\n\n  const hours = Math.floor(divisor_for_hours / (60 * 60));\n\n  const divisor_for_minutes = divisor_for_hours % (60 * 60);\n  const minutes = Math.floor(divisor_for_minutes / 60);\n\n  const divisor_for_seconds = divisor_for_minutes % 60;\n  const seconds = Math.ceil(divisor_for_seconds);\n\n  let result = \"\";\n  if (days > 0) result += `${days}d `;\n  if (hours > 0) result += `${hours}h `;\n  if (minutes > 0) result += `${minutes}m `;\n  if (seconds > 0) result += `${seconds}s `;\n\n  return result.trim();\n};\n\nexport const fromBigNumberToHms = (secondsInput: EthBigNumber) => {\n  const days = secondsInput.div(60 * 60 * 24);\n\n  const divisor_for_hours = secondsInput.mod(60 * 60 * 24);\n\n  const hours = divisor_for_hours.div(60 * 60);\n\n  const divisor_for_minutes = divisor_for_hours.mod(60 * 60);\n  const minutes = divisor_for_minutes.div(60);\n\n  const divisor_for_seconds = divisor_for_minutes.mod(60);\n  const seconds = divisor_for_seconds;\n\n  let result = \"\";\n  if (days.gt(0)) result += `${days.toBigInt().toString()}d `;\n  if (hours.gt(0)) result += `${hours.toBigInt().toString()}h `;\n  if (minutes.gt(0)) result += `${minutes.toBigInt().toString()}m `;\n  if (seconds.gt(0)) result += `${seconds.toBigInt().toString()}s `;\n\n  return result.trim();\n};\n\nexport const formatBigNumber = (price: EthBigNumber, decimals: number) => {\n  const bigNumber = new BigNumber(price.toString()).div(10 ** decimals);\n\n  if (bigNumber.decimalPlaces() > 0) {\n    return bigNumber.toFormat(5);\n  }\n\n  return bigNumber.toFormat();\n};\n","const environment = {\n  SCHEDULER_PROVIDERS_TESTNET: (\n    process.env.REACT_APP_SCHEDULER_PROVIDERS_TESTNET as string\n  ).split(\";\"),\n  SCHEDULER_PROVIDERS_MAINNET: (\n    process.env.REACT_APP_SCHEDULER_PROVIDERS_MAINNET as string\n  ).split(\";\"),\n  CONFIRMATIONS: parseInt(process.env.REACT_APP_CONFIRMATIONS as string),\n  ER677_TOKENS_TESTNET: (\n    process.env.REACT_APP_ER677_TOKENS_TESTNET as string\n  ).split(\";\"),\n  ER677_TOKENS_MAINNET: (\n    process.env.REACT_APP_ER677_TOKENS_MAINNET as string\n  ).split(\";\"),\n  MINIMUM_TIME_BEFORE_EXECUTION: parseInt(\n    process.env.REACT_APP_MINIMUM_TIME_BEFORE_EXECUTION as string\n  ),\n};\n\nexport default environment;\n","import { Config } from \"@rsksmart/rif-scheduler-sdk/dist/Base\";\nimport { Signer } from \"ethers\";\nimport { useEffect } from \"react\";\nimport create from \"zustand\";\nimport useConnector from \"../connect/useConnector\";\nimport environment from \"../shared/environment\";\nimport { ENetwork } from \"../shared/types\";\n\nexport interface IProviderSnapshot {\n  index: number;\n  network: ENetwork;\n  config: Config;\n}\n\nexport interface IUseProvidersStore {\n  providers: IProviderSnapshot[];\n  setProviders: (providers: IProviderSnapshot[]) => void;\n}\n\nexport const useProvidersStore = create<IUseProvidersStore>((set, get) => ({\n  providers: [],\n  setProviders: (providers: IProviderSnapshot[]) => {\n    set((state) => ({\n      providers,\n    }));\n  },\n}));\n\nexport const createProviderSnapshot = (\n  index: number,\n  address: string,\n  network: ENetwork,\n  signer: Signer\n): IProviderSnapshot => {\n  const supportedERC677Tokens =\n    network === ENetwork.RSKMainnet\n      ? environment.ER677_TOKENS_MAINNET\n      : environment.ER677_TOKENS_TESTNET;\n\n  return {\n    index,\n    network: network,\n    config: {\n      contractAddress: address,\n      providerOrSigner: signer as any,\n      supportedERC677Tokens,\n    },\n  };\n};\n\nexport const useProvidersLoader = () => {\n  const [isConnected, network, isLoading, signer] = useConnector((state) => [\n    state.isConnected,\n    state.network,\n    state.isLoading,\n    state.signer,\n  ]);\n\n  const setProviders = useProvidersStore((state) => state.setProviders);\n\n  useEffect(() => {\n    if (\n      !isConnected ||\n      isLoading ||\n      !signer ||\n      !network ||\n      network === ENetwork.NotSupported\n    ) {\n      return;\n    }\n\n    const providerAddresses =\n      network === ENetwork.RSKMainnet\n        ? environment.SCHEDULER_PROVIDERS_MAINNET\n        : environment.SCHEDULER_PROVIDERS_TESTNET;\n\n    const providers = providerAddresses.map((address, index) =>\n      createProviderSnapshot(index, address, network, signer)\n    );\n\n    setProviders(providers);\n  }, [isConnected, network, isLoading, signer, setProviders]);\n};\n","import { BigNumber } from \"ethers\";\nimport { IPlanSnapshot } from \"../sdk-hooks/usePlan\";\n\nexport const BIG_ZERO = BigNumber.from(0);\n\nexport const executionsLeft = (\n  accumulatedPlans: BigNumber | undefined,\n  currentPlan: IPlanSnapshot\n) => {\n  const accumulated = accumulatedPlans ?? BIG_ZERO;\n\n  return accumulated.add(currentPlan.remainingExecutions ?? BIG_ZERO);\n};\n","import Localbase from \"localbase\";\n\ntype StateStorage = {\n  getItem: (name: string) => string | null | Promise<string | null>;\n  setItem: (name: string, value: string) => void | Promise<void>;\n};\n\nconst localbaseStorage: StateStorage = {\n  async getItem(name: string) {\n    let db = new Localbase(\"db\");\n    db.config.debug = false;\n\n    const data = await db.collection(\"zustand\").doc(name).get();\n\n    return JSON.stringify(data);\n  },\n\n  async setItem(name: string, value: string) {\n    let db = new Localbase(\"db\");\n    db.config.debug = false;\n\n    const data = JSON.parse(value);\n\n    await db.collection(\"zustand\").doc(name).set(data);\n  },\n};\n\nconst localbasePersist = (storeName: string, blacklist?: any[]) => {\n  return {\n    name: storeName, // unique name\n    blacklist: blacklist,\n    getStorage: () => localbaseStorage,\n  };\n};\n\nexport default localbasePersist;\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport localbasePersist from \"../shared/localbasePersist\";\nimport { ENetwork } from \"../shared/types\";\n\nexport interface IContract {\n  id: string;\n  name: string;\n  network: ENetwork;\n  address: string;\n  ABI: string;\n}\n\nexport interface IUseContracts {\n  contracts: {\n    [id: string]: IContract;\n  };\n  save: (contract: IContract) => void;\n}\n\nconst useContracts = create<IUseContracts>(\n  persist(\n    (set, get) => ({\n      contracts: {},\n      save: (contract: IContract) =>\n        set((state) => ({\n          contracts: { ...state.contracts, [contract.id]: contract },\n        })),\n    }),\n    localbasePersist(\"contracts\")\n  )\n);\n\nexport default useContracts;\n","import { Contract, utils } from \"ethers\";\nimport { providers } from \"ethers\";\nimport { addSeconds, differenceInMinutes, subSeconds } from \"date-fns\";\nimport { EExecutionState, Execution } from \"@rsksmart/rif-scheduler-sdk\";\n\n// PROMISE_PARALLEL_NUMBER needs to be a multiple of 4,\n// because the getExecutedTransactions throws 4 threads simultaneously each iteration\nconst PROMISE_PARALLEL_NUMBER = 4 * 4;\n\nexport interface IExecutedEventInfo {\n  id: string;\n  result: string;\n  success: boolean;\n}\n\nexport interface IExecutedTransaction {\n  event: IExecutedEventInfo;\n  txHash: string;\n}\n\nconst getExecutedTransaction = async (\n  scheduledTxHash: string,\n  execution: Execution\n) => {\n  const provider = execution.provider as any;\n  const contractAddress = execution.config.contractAddress;\n  const window = execution.plan.window.toNumber();\n\n  const state = await execution.getState();\n\n  if (\n    ![\n      EExecutionState.ExecutionSuccessful,\n      EExecutionState.ExecutionFailed,\n    ].includes(state)\n  ) {\n    return null;\n  }\n\n  const blocksProcessed: number[] = [];\n  const addProcess = (initialBlock: number, offset: number) => {\n    const processing = initialBlock + offset;\n    if (!blocksProcessed.includes(processing)) {\n      blocksProcessed.push(processing);\n      return getEventIfExist(provider, processing, contractAddress, execution);\n    }\n  };\n\n  const executeAt = new Date(execution.executeAt);\n\n  const scheduledTx = await provider.getTransaction(scheduledTxHash);\n\n  const scheduledBlockNumber = scheduledTx.blockNumber!;\n  const lastBlockNumber = await provider.getBlockNumber();\n\n  const { blocksRate, fromDate: scheduledDate } = await getBlocksRateByMinute(\n    provider,\n    scheduledBlockNumber,\n    lastBlockNumber\n  );\n\n  const blockNumberExecuteAtMid = getEstimatedBlockNumber(\n    executeAt,\n    scheduledDate,\n    scheduledBlockNumber,\n    blocksRate\n  );\n  const blockNumberExecuteAtLow = getEstimatedBlockNumber(\n    subSeconds(executeAt, window),\n    scheduledDate,\n    scheduledBlockNumber,\n    blocksRate\n  );\n  const blockNumberExecuteAtUpper = getEstimatedBlockNumber(\n    addSeconds(executeAt, window),\n    scheduledDate,\n    scheduledBlockNumber,\n    blocksRate\n  );\n\n  const lowWindowBlock = Math.trunc(\n    Math.max(blockNumberExecuteAtLow, scheduledBlockNumber)\n  );\n  const upperWindowBlock = Math.trunc(\n    Math.min(blockNumberExecuteAtUpper, lastBlockNumber)\n  );\n  const midBlockNumber = Math.trunc(blockNumberExecuteAtMid);\n\n  let foundedEvent: IExecutedTransaction | null = null;\n  let counter = 0;\n  let running = [];\n  while (!foundedEvent) {\n    running.push(addProcess(lowWindowBlock, counter));\n\n    running.push(addProcess(midBlockNumber, -counter));\n\n    running.push(addProcess(midBlockNumber, counter));\n\n    running.push(addProcess(upperWindowBlock, -counter));\n\n    if (running.length === PROMISE_PARALLEL_NUMBER) {\n      const runResult = await Promise.all(running);\n\n      foundedEvent = runResult.find((x) => (x ? true : false)) ?? null;\n\n      running = [];\n    }\n\n    counter++;\n  }\n\n  return foundedEvent;\n};\n\nconst getBlocksRateByMinute = async (\n  provider: providers.Provider,\n  fromBlockNumber: number,\n  toBlockNumber: number\n) => {\n  const fromBlock = await provider.getBlock(fromBlockNumber);\n  const toBlock = await provider.getBlock(toBlockNumber);\n  const fromDate = new Date(+fromBlock.timestamp * 1000);\n  const toDate = new Date(+toBlock.timestamp * 1000);\n\n  const diffInMinutes = differenceInMinutes(toDate, fromDate);\n  const diffInBlocks = toBlockNumber - fromBlockNumber;\n  const blocksRate = diffInBlocks / diffInMinutes;\n\n  return { blocksRate, fromBlock, toBlock, fromDate, toDate };\n};\n\nconst getEstimatedBlockNumber = (\n  date: Date,\n  fromDate: Date,\n  initialBlockNumber: number,\n  blocksRate: number\n) => {\n  return initialBlockNumber + differenceInMinutes(date, fromDate) * blocksRate;\n};\n\nconst getEventIfExist = async (\n  provider: providers.Provider,\n  blockNumber: number,\n  contractAddress: string,\n  execution: Execution\n): Promise<IExecutedTransaction | null> => {\n  const abi = [\n    \"event Executed(bytes32 indexed id, bool success, bytes result)\",\n  ];\n  const eventInterface = new utils.Interface(abi);\n  const rifSchedulerContract = new Contract(contractAddress, abi, provider);\n\n  const executeId = execution.getId().substr(2);\n  const filterByExecutionId = rifSchedulerContract.filters.Executed(\n    execution.getId()\n  );\n  const filterTopics = filterByExecutionId.topics as string[];\n\n  const searchingBlock = await provider.getBlockWithTransactions(blockNumber);\n\n  const filteredTxs = searchingBlock.transactions.filter(\n    (x) =>\n      x.to?.toLowerCase() === contractAddress.toLowerCase() &&\n      x.data.includes(executeId!)\n  );\n\n  for (const tx of filteredTxs) {\n    const receipt = await provider.getTransactionReceipt(tx.hash);\n\n    const log = receipt.logs.find((x) => areEquals(x.topics, filterTopics));\n\n    if (log) {\n      const result: IExecutedEventInfo = eventInterface.parseLog(log)\n        .args as any;\n\n      return {\n        event: result,\n        txHash: tx.hash,\n      };\n    }\n  }\n\n  return null;\n};\n\nconst areEquals = (a1: string[], a2: string[]) =>\n  a1.length === a2.length && a1.every((value, index) => value === a2[index]);\n\nexport default getExecutedTransaction;\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { format, compareAsc, addMonths, addYears } from \"date-fns\";\nimport NextIcon from \"@material-ui/icons/NavigateNext\";\nimport BeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { useEffect, useState } from \"react\";\nimport useConnector from \"../connect/useConnector\";\nimport ExecutionInfo from \"./ExecutionInfo\";\nimport { useExecutions } from \"../sdk-hooks/useExecutions\";\nimport { IExecutionSnapshot } from \"../sdk-hooks/useExecution\";\nimport { useMemo } from \"react\";\nimport {\n  Button,\n  FormControl,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport LoadingCircle from \"../shared/LoadingCircle\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      padding: 5,\n      gap: \"5px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  })\n);\ninterface IGroupBy {\n  [group: string]: IExecutionSnapshot[];\n}\n\nenum EHistoryOption {\n  Month,\n  Year,\n  Schedule,\n}\n\nconst defaultDate = () =>\n  new Date(\n    new Date().getFullYear(),\n    new Date().getMonth(),\n    new Date().getDate()\n  );\n\nconst defaultHistoryOption = () => {\n  const option = JSON.parse(\n    localStorage.getItem(\"DEFAULT_HISTORY_OPTION\") ?? \"0\"\n  ) as EHistoryOption;\n  return [\n    EHistoryOption.Month,\n    EHistoryOption.Year,\n    EHistoryOption.Schedule,\n  ].includes(option)\n    ? option\n    : EHistoryOption.Month;\n};\n\nconst PAGE_SIZE = 20;\n\nconst History = () => {\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [page, setPage] = useState<number>(0);\n  const [refDate, setRefDate] = useState<Date>(defaultDate());\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const [historyOption, setHistoryOption] = useState<EHistoryOption>(\n    defaultHistoryOption()\n  );\n\n  const [executions, loadExecutions] = useExecutions();\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadExecutions().then(() => setIsLoading(false));\n  }, [loadExecutions]);\n\n  const itemsGrouped: IGroupBy = useMemo(() => {\n    if (historyOption === EHistoryOption.Year) {\n      return executions\n        .filter(\n          (item) =>\n            item.index.network === connectedToNetwork &&\n            item.executeAt.getFullYear() === refDate.getFullYear()\n        )\n        .sort((firstItem, nextItem) =>\n          compareAsc(firstItem.executeAt, nextItem.executeAt)\n        )\n        .reduce((prev: any, item) => {\n          const groupId = format(item.executeAt, \"MMMM\");\n          const group = [...(prev[groupId] ?? []), item];\n\n          return { ...prev, [groupId]: group };\n        }, {});\n    }\n    if (historyOption === EHistoryOption.Month) {\n      return executions\n        .filter(\n          (item) =>\n            item.index.network === connectedToNetwork &&\n            item.executeAt.getFullYear() === refDate.getFullYear() &&\n            item.executeAt.getMonth() === refDate.getMonth()\n        )\n        .sort((firstItem, nextItem) =>\n          compareAsc(firstItem.executeAt, nextItem.executeAt)\n        )\n        .reduce((prev: any, item) => {\n          const groupId = format(item.executeAt, \"EEEE, do\");\n          const group = [...(prev[groupId] ?? []), item];\n\n          return { ...prev, [groupId]: group };\n        }, {});\n    }\n    if (historyOption === EHistoryOption.Schedule) {\n      return executions\n        .filter(\n          (item) =>\n            item.index.network === connectedToNetwork &&\n            item.executeAt >= refDate\n        )\n        .sort((firstItem, nextItem) =>\n          compareAsc(firstItem.executeAt, nextItem.executeAt)\n        )\n        .slice(page * PAGE_SIZE, (page + 1) * PAGE_SIZE)\n        .reduce((prev: any, item) => {\n          const groupId = \"Your schedule\";\n          const group = [...(prev[groupId] ?? []), item];\n\n          return { ...prev, [groupId]: group };\n        }, {});\n    }\n  }, [connectedToNetwork, executions, historyOption, page, refDate]);\n\n  const handleIncrement = (inc: number) => () => {\n    switch (historyOption) {\n      case EHistoryOption.Month:\n        setRefDate((prev) => addMonths(prev, inc));\n        break;\n      case EHistoryOption.Year:\n        setRefDate((prev) => addYears(prev, inc));\n        break;\n      case EHistoryOption.Schedule:\n        setPage((prev) => {\n          let result = prev + inc;\n\n          if ((result + 1) * PAGE_SIZE > executions.length) result = prev;\n\n          if (result <= 0) result = 0;\n\n          return result;\n        });\n        break;\n    }\n  };\n\n  const handleClear = () => {\n    setRefDate(defaultDate());\n    setPage(0);\n  };\n\n  const groupedEntries = Object.entries(itemsGrouped);\n\n  return (\n    <>\n      <Card style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }}>\n        <CardHeader\n          disableTypography\n          title={\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"5px\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 1,\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  flexWrap: \"nowrap\",\n                }}\n              >\n                <Button variant=\"outlined\" onClick={handleClear}>\n                  Today\n                </Button>\n                <div style={{ width: 60 }}>\n                  <IconButton size=\"small\" onClick={handleIncrement(-1)}>\n                    <BeforeIcon />\n                  </IconButton>\n                  <IconButton size=\"small\" onClick={handleIncrement(1)}>\n                    <NextIcon />\n                  </IconButton>\n                </div>\n                {historyOption === EHistoryOption.Year && (\n                  <Typography variant=\"h6\">\n                    {format(refDate, \"yyyy\")}\n                  </Typography>\n                )}\n                {historyOption === EHistoryOption.Month && (\n                  <Typography variant=\"h6\">\n                    {format(refDate, \"MMM yyyy\")}\n                  </Typography>\n                )}\n                {historyOption === EHistoryOption.Schedule && (\n                  <Typography variant=\"h6\">{`${page * PAGE_SIZE + 1}-${\n                    (page + 1) * PAGE_SIZE > executions.length\n                      ? executions.length\n                      : (page + 1) * PAGE_SIZE\n                  } of ${executions.length}`}</Typography>\n                )}\n              </div>\n              <LoadingCircle isLoading={isLoading} />\n              <FormControl variant=\"outlined\" hiddenLabel size=\"small\">\n                <Select\n                  value={historyOption}\n                  onChange={(event) => {\n                    const option = event.target.value as EHistoryOption;\n\n                    setHistoryOption(option);\n                    handleClear();\n\n                    localStorage.setItem(\n                      \"DEFAULT_HISTORY_OPTION\",\n                      option.toString()\n                    );\n                  }}\n                >\n                  <MenuItem value={EHistoryOption.Month}>Month</MenuItem>\n                  <MenuItem value={EHistoryOption.Year}>Year</MenuItem>\n                  <MenuItem value={EHistoryOption.Schedule}>Schedule</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n          }\n        />\n        <CardContent style={{ padding: 0 }}>\n          {groupedEntries.map(([group, items], index) => (\n            <List\n              key={`history-group-${index}`}\n              subheader={<ListSubheader component=\"div\">{group}</ListSubheader>}\n              className={classes.root}\n            >\n              {items.map((item) => (\n                <ExecutionInfo\n                  key={`history-item-${item.id}`}\n                  execution={item}\n                />\n              ))}\n            </List>\n          ))}\n          {!isLoading && groupedEntries.length === 0 && (\n            <List key={`history-group-empty`} className={classes.root}>\n              <ListItem>\n                <ListItemText\n                  primary={\n                    \"There is nothing scheduled for the selected period.\"\n                  }\n                />\n              </ListItem>\n            </List>\n          )}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default History;\n","import { Execution, RIFScheduler } from \"@rsksmart/rif-scheduler-sdk\";\nimport { useCallback } from \"react\";\nimport { useProvidersStore } from \"./useProviders\";\nimport shallow from \"zustand/shallow\";\nimport create from \"zustand\";\nimport useContracts from \"../contracts/useContracts\";\nimport { ContractTransaction, utils } from \"ethers\";\nimport { parseISO } from \"date-fns\";\nimport { persist } from \"zustand/middleware\";\nimport localbasePersist from \"../shared/localbasePersist\";\nimport {\n  createExecutionSnapshot,\n  getExecutionKey,\n  getExecutionScheduleKey,\n  IExecutionSnapshot,\n} from \"./useExecution\";\nimport useConnector from \"../connect/useConnector\";\nimport { ETransactionStatus, useTransactionsStore } from \"./useTransactions\";\nimport { ENetwork } from \"../shared/types\";\n\nexport interface IExecutionIndex {\n  id?: string;\n  title: string;\n  network: ENetwork;\n  contractId: string;\n  contractMethod: string;\n  contractFields: string[];\n  color: string;\n  executeAtISO: string;\n  providerAddress: string;\n  providerPlanIndex: string;\n  value: string;\n  requestor: string;\n  isRecurrent: boolean;\n  cronExpression?: string;\n  quantity?: string;\n  scheduledTxHash?: string;\n  completedTxHash?: string;\n  result?: string;\n}\n\nexport interface IUseIndexedExecutions {\n  indexedExecutions: {\n    [key: string]: IExecutionIndex;\n  };\n  setIndexedExecution: (key: string, indexedExecution: IExecutionIndex) => void;\n}\n\nexport const useIndexedExecutionsStore = create<IUseIndexedExecutions>(\n  persist(\n    (set, get) => ({\n      indexedExecutions: {},\n      setIndexedExecution: (key: string, indexedExecution: IExecutionIndex) => {\n        set((state) => ({\n          indexedExecutions: {\n            ...state.indexedExecutions,\n            [key]: indexedExecution,\n          },\n        }));\n      },\n    }),\n    localbasePersist(\"indexed-executions\")\n  )\n);\n\nexport interface IUseExecutionsStore {\n  executions: {\n    [key: string]: IExecutionSnapshot;\n  };\n  setExecution: (key: string, execution: IExecutionSnapshot) => void;\n}\n\nexport const useExecutionsStore = create<IUseExecutionsStore>((set, get) => ({\n  executions: {},\n  setExecution: (key: string, execution: IExecutionSnapshot) => {\n    set((state) => ({\n      executions: {\n        ...state.executions,\n        [key]: execution,\n      },\n    }));\n  },\n}));\n\nexport const useExecutions = () => {\n  const contracts = useContracts((state) => state.contracts);\n\n  const providers = useProvidersStore((state) => state.providers);\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const registerTxWithKey = useTransactionsStore((state) => state.register);\n\n  const [indexedExecutions, setIndexedExecution] = useIndexedExecutionsStore(\n    (store) => [store.indexedExecutions, store.setIndexedExecution],\n    shallow\n  );\n\n  const [executions, setExecution] = useExecutionsStore(\n    (store) => [store.executions, store.setExecution],\n    shallow\n  );\n\n  const getExecution = useCallback(\n    async (index: IExecutionIndex) => {\n      const contract = contracts[index.contractId];\n      const provider = providers.find(\n        (x) => x.config.contractAddress === index.providerAddress\n      );\n\n      if (!contract || !provider) {\n        return null;\n      }\n\n      const scheduler = new RIFScheduler(provider.config);\n\n      const plan = await scheduler.getPlan(index.providerPlanIndex);\n\n      const encodedFunctionCall = new utils.Interface(\n        contract.ABI\n      ).encodeFunctionData(index.contractMethod, index.contractFields);\n\n      return new Execution(\n        provider.config,\n        plan,\n        contract.address,\n        encodedFunctionCall,\n        parseISO(index.executeAtISO),\n        index.value,\n        index.requestor\n      );\n    },\n    [contracts, providers]\n  );\n\n  const loadExecutions = useCallback(async () => {\n    for (const index of Object.values(indexedExecutions)) {\n      const execution = await getExecution(index);\n\n      if (!execution) continue;\n\n      const executionSnapshot = await createExecutionSnapshot(execution, index);\n\n      const key = getExecutionKey(execution);\n\n      setExecution(key, executionSnapshot);\n    }\n  }, [getExecution, indexedExecutions, setExecution]);\n\n  const schedule = useCallback(\n    async (index: IExecutionIndex) => {\n      const provider = providers.find(\n        (x) => x.config.contractAddress === index.providerAddress\n      );\n\n      if (!provider) throw new Error(\"Could not find the provider.\");\n\n      const scheduler = new RIFScheduler(provider.config);\n\n      const execution = await getExecution(index);\n\n      let tx: ContractTransaction;\n\n      if (!execution)\n        throw new Error(\n          \"Something went wrong, please check all your data and try again.\"\n        );\n\n      if (index.isRecurrent) {\n        const executions = Execution.fromCronExpression(\n          execution,\n          index.cronExpression!,\n          index.quantity!\n        );\n        tx = (await scheduler.scheduleMany(executions)) as any;\n\n        for (const current of executions) {\n          const key = getExecutionKey(current);\n\n          setIndexedExecution(key, {\n            ...index,\n            id: current.getId(),\n            scheduledTxHash: tx.hash,\n            executeAtISO: current.executeAt.toISOString(),\n          });\n        }\n      } else {\n        tx = (await scheduler.schedule(execution)) as any;\n\n        const key = getExecutionKey(execution);\n\n        setIndexedExecution(key, {\n          ...index,\n          id: execution.getId(),\n          scheduledTxHash: tx.hash,\n        });\n      }\n\n      const scheduleKey = getExecutionScheduleKey(\n        index.providerAddress,\n        tx.hash\n      );\n\n      registerTxWithKey(scheduleKey, {\n        hash: tx.hash,\n        network: connectedToNetwork!,\n        status: ETransactionStatus.Idle,\n        confirmMessage: `Your \"${index.title}\" execution was confirmed!`,\n        failMessage: `Your \"${index.title}\" execution could not be confirmed.`,\n        startedAt: new Date().toISOString(),\n      });\n    },\n    [\n      connectedToNetwork,\n      getExecution,\n      providers,\n      registerTxWithKey,\n      setIndexedExecution,\n    ]\n  );\n\n  return [Object.values(executions), loadExecutions, schedule] as const;\n};\n","import { EExecutionState, Execution } from \"@rsksmart/rif-scheduler-sdk\";\nimport { BigNumber, utils } from \"ethers\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport useContracts from \"../contracts/useContracts\";\nimport getExecutedTransaction from \"../shared/getExecutionResult\";\nimport { IExecutionIndex, useExecutionsStore } from \"./useExecutions\";\nimport { useTransactions } from \"./useTransactions\";\n\nexport interface IExecutionSnapshot {\n  index: IExecutionIndex;\n  id: string;\n  executeAt: Date;\n  value: BigNumber;\n  state: EExecutionState;\n  ref: Execution;\n}\n\nexport const createExecutionSnapshot = async (\n  execution: Execution,\n  index: IExecutionIndex\n): Promise<IExecutionSnapshot> => {\n  const state = await execution.getState();\n  const id = execution.getId();\n\n  return {\n    index,\n    id,\n    state,\n    executeAt: execution.executeAt,\n    value: execution.value,\n    ref: execution,\n  };\n};\n\nexport const getExecutionKey = (execution: Execution) => {\n  return `execution@${execution.config.contractAddress}@${execution.getId()}`;\n};\n\nexport const getExecutionScheduleKey = (\n  providerAddress: string,\n  scheduleHash: string\n) => {\n  return `execution@schedule@${providerAddress}@${scheduleHash}`;\n};\n\nexport const useExecution = (execution: Execution, index: IExecutionIndex) => {\n  const key = getExecutionKey(execution);\n  const scheduleKey = getExecutionScheduleKey(\n    index.providerAddress,\n    index.scheduledTxHash ?? \"not-scheduled\"\n  );\n\n  const contracts = useContracts((state) => state.contracts);\n  const contract = contracts[index.contractId];\n\n  const [isConfirmed, setIsConfirmed] = useState<boolean>(true);\n\n  const setExecution = useExecutionsStore((state) => state.setExecution);\n\n  const [pendingScheduleTransactions] = useTransactions(scheduleKey);\n  const [pendingExecutionTransactions, registerTx] = useTransactions(key);\n  const pendingTransactions = useMemo(\n    () => pendingScheduleTransactions.concat(pendingExecutionTransactions),\n    [pendingScheduleTransactions, pendingExecutionTransactions]\n  );\n\n  const refresh = useCallback(async () => {\n    return createExecutionSnapshot(execution, index).then((snap) => {\n      setExecution(key, snap);\n    });\n  }, [execution, index, key, setExecution]);\n\n  const cancel = useCallback(async () => {\n    const tx = await execution.cancel();\n\n    registerTx(\n      tx.hash,\n      `Your \"${index.title}\" execution was cancelled!`,\n      `Your \"${index.title}\" execution could not be cancelled.`\n    );\n  }, [execution, index.title, registerTx]);\n\n  const refund = useCallback(async () => {\n    const tx = await execution.refund();\n\n    registerTx(\n      tx.hash,\n      `Your \"${index.title}\" execution was refunded!`,\n      `Your \"${index.title}\" execution could not be refunded.`\n    );\n  }, [execution, index.title, registerTx]);\n\n  const locateResult = useCallback(async () => {\n    if (!index.scheduledTxHash || !contract) return;\n\n    const executedTransaction = await getExecutedTransaction(\n      index.scheduledTxHash,\n      execution\n    );\n\n    const contractInterface = new utils.Interface(contract.ABI);\n\n    const state = await execution.getState();\n\n    const parsedResult =\n      executedTransaction && state === EExecutionState.ExecutionSuccessful\n        ? contractInterface\n            .decodeFunctionResult(\n              index.contractMethod,\n              executedTransaction.event.result\n            )\n            .join(\", \")\n        : executedTransaction?.event.result;\n\n    createExecutionSnapshot(execution, index).then((snap) => {\n      setExecution(key, {\n        ...snap,\n        index: {\n          ...snap.index,\n          result: parsedResult,\n          completedTxHash: executedTransaction?.txHash,\n        },\n      });\n    });\n  }, [contract, execution, index, key, setExecution]);\n\n  useEffect(() => {\n    const hasPendingTransactions = pendingTransactions.length > 0;\n\n    if (hasPendingTransactions) {\n      setIsConfirmed(false);\n    } else if (!hasPendingTransactions && !isConfirmed) {\n      createExecutionSnapshot(execution, index).then((snap) => {\n        setExecution(key, snap);\n        setIsConfirmed(true);\n      });\n    }\n  }, [isConfirmed, pendingTransactions, execution, setExecution, index, key]);\n\n  return [\n    refresh,\n    cancel,\n    refund,\n    locateResult,\n    contract,\n    isConfirmed,\n    pendingTransactions,\n    key,\n  ] as const;\n};\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nimport { useState } from \"react\";\nimport hyphensAndCamelCaseToWords from \"../shared/hyphensAndCamelCaseToWords\";\nimport StatusLabel from \"./StatusLabel\";\nimport { Hidden } from \"@material-ui/core\";\nimport { useProvidersStore } from \"../sdk-hooks/useProviders\";\nimport { IExecutionSnapshot, useExecution } from \"../sdk-hooks/useExecution\";\nimport { BigNumber } from \"ethers\";\nimport { getMessageFromCode } from \"eth-rpc-errors\";\nimport { useSnackbar } from \"notistack\";\n\nconst useRowStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    part: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    row: ({ color = \"#333\" }: any) => ({\n      borderLeft: `${color} 4px solid`,\n      borderBottom: `${color} 1px solid`,\n      borderRadius: 15,\n    }),\n  })\n);\n\nexport const ExecutionButton: React.FC<{\n  item: IExecutionSnapshot;\n  onClick?: () => void;\n}> = ({ item, onClick }) => {\n  const classes = useRowStyles({ color: item.index.color });\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [refresh, , , , contract, isConfirmed] = useExecution(\n    item.ref,\n    item.index\n  );\n\n  const providers = useProvidersStore((state) => state.providers);\n\n  const provider = providers.find(\n    (x) => x.config.contractAddress === item.index.providerAddress\n  );\n\n  const handleUpdateStatusClick = async () => {\n    setIsLoading(true);\n\n    try {\n      await refresh();\n    } catch (error) {\n      const message = getMessageFromCode(error.code, error.message);\n\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleItemClick = () => {\n    if (onClick) onClick();\n  };\n\n  return (\n    <ListItem button className={classes.row} onClick={handleItemClick}>\n      <div\n        className={classes.part}\n        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <ListItemText\n          className={classes.part}\n          primary={item.index.title}\n          secondary={`${formatDistanceToNow(item.executeAt, {\n            addSuffix: true,\n          })}`}\n        />\n        <div style={{ paddingLeft: 16, paddingRight: 16 }}>\n          <StatusLabel execution={item} isConfirmed={isConfirmed} />\n        </div>\n      </div>\n      <Hidden xsDown>\n        <Divider orientation=\"vertical\" style={{ marginRight: 16 }} flexItem />\n        <ListItemText\n          primary={\n            <span>\n              {contract?.name}&nbsp;&#10140;&nbsp;\n              {hyphensAndCamelCaseToWords(item.index.contractMethod)}\n            </span>\n          }\n          secondary={`Provider #${provider!.index + 1} - Plan #${BigNumber.from(\n            item.index.providerPlanIndex\n          )\n            .add(1)\n            .toString()}`}\n          className={classes.part}\n        />\n      </Hidden>\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          onClick={handleUpdateStatusClick}\n          disabled={isLoading || !isConfirmed}\n        >\n          <RefreshIcon style={{ color: item.index.color }} />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport StatusLabel from \"./StatusLabel\";\nimport { format } from \"date-fns\";\nimport hyphensAndCamelCaseToWords from \"../shared/hyphensAndCamelCaseToWords\";\nimport shortText from \"../shared/shortText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport { useSnackbar } from \"notistack\";\nimport { getExplorerTxLink } from \"../shared/types\";\nimport useConnector from \"../connect/useConnector\";\nimport Link from \"@material-ui/core/Link\";\nimport LinkIcon from \"@material-ui/icons/Launch\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport { useEffect } from \"react\";\nimport { EExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\nimport { useProvidersStore } from \"../sdk-hooks/useProviders\";\nimport { useState } from \"react\";\nimport { BIG_ZERO } from \"../shared/reduceExecutionsLeft\";\nimport { IExecutionSnapshot, useExecution } from \"../sdk-hooks/useExecution\";\nimport { ExecutionButton } from \"./ExecutionButton\";\nimport { getMessageFromCode } from \"eth-rpc-errors\";\n\nconst rowStyles = { display: \"flex\", alignItems: \"center\", gap: \"5px\" };\n\nconst ExecutionInfo: React.FC<{\n  execution: IExecutionSnapshot;\n}> = ({ execution }) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [refresh, cancel, refund, locateResult, contract, isConfirmed] =\n    useExecution(execution.ref, execution.index);\n\n  const providers = useProvidersStore((state) => state.providers);\n\n  const provider = providers.find(\n    (x) => x.config.contractAddress === execution.index.providerAddress\n  );\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const scheduledTxExplorerAddressUrl =\n    execution.index.scheduledTxHash &&\n    connectedToNetwork &&\n    getExplorerTxLink(execution.index.scheduledTxHash, connectedToNetwork);\n\n  const completedTxExplorerAddressUrl =\n    execution.index.completedTxHash &&\n    connectedToNetwork &&\n    getExplorerTxLink(execution.index.completedTxHash, connectedToNetwork);\n\n  useEffect(() => {\n    if (\n      !execution.index.completedTxHash &&\n      [\n        EExecutionState.ExecutionFailed,\n        EExecutionState.ExecutionSuccessful,\n      ].includes(execution.state ?? EExecutionState.NotScheduled)\n    ) {\n      locateResult();\n    }\n  }, [execution.index.completedTxHash, execution.state, locateResult]);\n\n  const handleCopy = (textToCopy: string | undefined | null) => () => {\n    if (!textToCopy) {\n      return;\n    }\n\n    if (!navigator?.clipboard) {\n      enqueueSnackbar(\"Your browser can't access the clipboard\", {\n        variant: \"error\",\n      });\n      return;\n    }\n\n    navigator.clipboard.writeText(textToCopy);\n    enqueueSnackbar(\"Copied!\", { autoHideDuration: 500 });\n  };\n\n  const handleUpdateStatusClick = async () => {\n    setIsLoading(true);\n\n    try {\n      await refresh();\n    } catch (error) {\n      const message = getMessageFromCode(error.code, error.message);\n\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleCancelClick = async () => {\n    setIsLoading(true);\n\n    try {\n      await cancel();\n    } catch (error) {\n      const message = getMessageFromCode(error.code, error.message);\n\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleRefundClick = async () => {\n    setIsLoading(true);\n\n    try {\n      await refund();\n    } catch (error) {\n      const message = getMessageFromCode(error.code, error.message);\n\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  if (!provider || !contract) return null;\n\n  return (\n    <>\n      <ExecutionButton item={execution} onClick={() => setOpen(true)} />\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <DialogTitle>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <div style={{ display: \"flex\", flex: 1 }}>\n              {execution.index.title}\n            </div>\n            <NetworkLabel />\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <TableContainer\n            component={Paper}\n            elevation={0}\n            style={{ border: `1px solid ${theme.palette.action.hover}` }}\n          >\n            <Table aria-label=\"info table\">\n              <TableBody>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    #\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={rowStyles}>\n                    <IconButton\n                      aria-label=\"copy id\"\n                      size=\"small\"\n                      onClick={handleCopy(execution.id)}\n                    >\n                      <CopyIcon fontSize=\"inherit\" />\n                    </IconButton>\n                    <span>{shortText(execution.id)}</span>\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Scheduled tx\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={rowStyles}>\n                    <IconButton\n                      aria-label=\"copy transaction hash\"\n                      size=\"small\"\n                      onClick={handleCopy(execution.index.scheduledTxHash)}\n                    >\n                      <CopyIcon fontSize=\"inherit\" />\n                    </IconButton>\n                    {scheduledTxExplorerAddressUrl && (\n                      <Link\n                        target=\"_blank\"\n                        href={scheduledTxExplorerAddressUrl ?? undefined}\n                        rel=\"noreferrer\"\n                        style={rowStyles}\n                      >\n                        <LinkIcon style={{ fontSize: 16 }} />\n                        {execution.index.scheduledTxHash &&\n                          shortText(execution.index.scheduledTxHash)}\n                      </Link>\n                    )}\n                    {!scheduledTxExplorerAddressUrl && (\n                      <span>\n                        {execution.index.scheduledTxHash &&\n                          shortText(execution.index.scheduledTxHash)}\n                      </span>\n                    )}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Status\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={rowStyles}>\n                    <IconButton\n                      aria-label=\"refresh status\"\n                      size=\"small\"\n                      onClick={handleUpdateStatusClick}\n                      disabled={isLoading || !isConfirmed}\n                    >\n                      <RefreshIcon fontSize=\"inherit\" />\n                    </IconButton>\n                    <StatusLabel\n                      execution={execution}\n                      isConfirmed={isConfirmed}\n                      isLoading={isLoading}\n                    />\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Execute at\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    {format(execution.executeAt, \"MMMM do yyyy, hh:mm aaa\")}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    {`Provider #${provider?.index + 1}`}\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    {contract.name}&nbsp;&#10140;&nbsp;\n                    {hyphensAndCamelCaseToWords(execution.index.contractMethod)}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Plan #{+execution.index.providerPlanIndex + 1}\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    {`Window: ${fromBigNumberToHms(\n                      execution.ref.plan.window ?? BIG_ZERO\n                    )} - Gas limit: ${formatBigNumber(\n                      execution.ref.plan.gasLimit ?? BIG_ZERO,\n                      0\n                    )}`}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Executed tx\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={rowStyles}>\n                    {execution.index.completedTxHash && (\n                      <IconButton\n                        aria-label=\"copy transaction hash\"\n                        size=\"small\"\n                        onClick={handleCopy(execution.index.completedTxHash)}\n                      >\n                        <CopyIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                    {completedTxExplorerAddressUrl && (\n                      <Link\n                        target=\"_blank\"\n                        href={completedTxExplorerAddressUrl ?? undefined}\n                        rel=\"noreferrer\"\n                        style={rowStyles}\n                      >\n                        <LinkIcon style={{ fontSize: 16 }} />\n                        {execution.index.completedTxHash &&\n                          shortText(execution.index.completedTxHash)}\n                      </Link>\n                    )}\n                    {!completedTxExplorerAddressUrl && (\n                      <span>\n                        {execution.index.completedTxHash\n                          ? shortText(execution.index.completedTxHash)\n                          : \"---\"}\n                      </span>\n                    )}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Result\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={rowStyles}>\n                    {execution.index.result && (\n                      <IconButton\n                        aria-label=\"refresh result\"\n                        size=\"small\"\n                        onClick={\n                          execution.index.result\n                            ? handleCopy(execution.index.result)\n                            : undefined\n                        }\n                        disabled={isLoading}\n                      >\n                        <CopyIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                    <span>\n                      {execution.index.result\n                        ? shortText(execution.index.result)\n                        : \"---\"}\n                    </span>\n                  </RegularTableCell>\n                </StyledTableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </DialogContent>\n        <DialogActions\n          style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n        >\n          <div style={{ display: \"flex\", flex: 1 }}>\n            {execution.state === EExecutionState.Scheduled && (\n              <Button\n                onClick={handleCancelClick}\n                disabled={isLoading || !isConfirmed}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Cancel\n              </Button>\n            )}\n            {execution.state === EExecutionState.Overdue && (\n              <Button\n                onClick={handleRefundClick}\n                disabled={isLoading || !isConfirmed}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Refund\n              </Button>\n            )}\n          </div>\n          <Button onClick={() => setOpen(false)} color=\"inherit\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ExecutionInfo;\n\nconst RegularTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      borderBottom: \"none\",\n    },\n  })\n)(TableCell);\n\nconst StrongTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      borderBottom: \"none\",\n      maxWidth: 100,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n","import { useState, useLayoutEffect } from \"react\";\n\nexport const useDelayMount = (delay = 0) => {\n  const [mounted, setMounted] = useState(false);\n\n  useLayoutEffect(() => {\n    const delayedMount = setTimeout(() => {\n      setMounted(true);\n    }, delay);\n    return () => clearTimeout(delayedMount);\n  }, [delay]);\n\n  return mounted;\n};\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport CircularProgress, {\n  CircularProgressProps,\n} from \"@material-ui/core/CircularProgress\";\nimport { memo } from \"react\";\nimport { useDelayMount } from \"./useDelayMount\";\n\nconst useCircleStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      width: 24,\n      height: 24,\n    },\n    bottom: {\n      color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    top: {\n      color: \"#1a90ff\",\n      animationDuration: \"550ms\",\n      position: \"absolute\",\n      left: 0,\n    },\n    circle: {\n      strokeLinecap: \"round\",\n    },\n  })\n);\n\nconst CustomCircularProgress = (props: CircularProgressProps) => {\n  const classes = useCircleStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        className={classes.bottom}\n        size={24}\n        thickness={4}\n        {...props}\n        value={100}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={24}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst LoadingCircle: React.FC<{ isLoading: boolean }> = memo(\n  ({ isLoading }) => {\n    const mounted = useDelayMount(330);\n\n    const loadingResult = mounted && isLoading;\n\n    return (\n      <>\n        {loadingResult && <CustomCircularProgress />}\n        {!loadingResult && <div style={{ height: 24 }} />}\n      </>\n    );\n  }\n);\n\nexport default LoadingCircle;\n","export enum ECronArrayDefinition {\n  Minute = 0,\n  Hour = 1,\n  Day = 2,\n  Month = 3,\n  DayWeek = 4,\n}\n\nexport enum ECronFieldOption {\n  Day,\n  Week,\n  Month,\n  Year,\n  Custom,\n}\n\nexport enum EMonths {\n  January,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December,\n}\n\nexport enum EMidday {\n  AM,\n  PM,\n}\n\nexport enum EWeekDay {\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n}\n","import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { red, teal, yellow, orange, lightBlue } from \"@material-ui/core/colors\";\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\nimport { Typography } from \"@material-ui/core\";\n\nconst RedRadio = withStyles({\n  root: {\n    padding: 7,\n    color: red[400],\n    \"&$checked\": {\n      color: red[400],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst TealRadio = withStyles({\n  root: {\n    padding: 7,\n    color: teal[400],\n    \"&$checked\": {\n      color: teal[400],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst YellowRadio = withStyles({\n  root: {\n    padding: 7,\n    color: yellow[700],\n    \"&$checked\": {\n      color: yellow[700],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst LightBlueRadio = withStyles({\n  root: {\n    padding: 7,\n    color: lightBlue[400],\n    \"&$checked\": {\n      color: lightBlue[400],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst OrangeRadio = withStyles({\n  root: {\n    padding: 7,\n    color: orange[700],\n    \"&$checked\": {\n      color: orange[700],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst ColorSelector = ({ value, onChange, disabled }: any) => {\n  const [selectedValue, setSelectedValue] = useState<string | null>(value);\n\n  useEffect(() => {\n    if (value !== selectedValue) {\n      setSelectedValue(value);\n    }\n  }, [value, selectedValue]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(event);\n    }\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <div style={{ textAlign: \"right\", whiteSpace: \"nowrap\" }}>\n      <Typography variant=\"caption\" style={{marginLeft: 8, marginRight: 8}}>Color</Typography>\n      <RedRadio\n        disabled={disabled}\n        checked={selectedValue === red[400]}\n        onChange={handleChange}\n        value={red[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Red\" }}\n      />\n      <OrangeRadio\n        disabled={disabled}\n        checked={selectedValue === orange[400]}\n        onChange={handleChange}\n        value={orange[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Orange\" }}\n      />\n      <YellowRadio\n        disabled={disabled}\n        checked={selectedValue === yellow[400]}\n        onChange={handleChange}\n        value={yellow[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Yellow\" }}\n      />\n      <TealRadio\n        disabled={disabled}\n        checked={selectedValue === teal[400]}\n        onChange={handleChange}\n        value={teal[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Teal\" }}\n      />\n      <LightBlueRadio\n        disabled={disabled}\n        checked={selectedValue === lightBlue[400]}\n        onChange={handleChange}\n        value={lightBlue[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Light Blue\" }}\n      />\n    </div>\n  );\n};\n\nexport default ColorSelector;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: \"relative\",\n    },\n    buttonProgress: {\n      color: blue[500],\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  })\n);\n\nconst ButtonWithLoading = ({ isLoading, onClick, label }: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={isLoading}\n          onClick={onClick}\n        >\n          {label}\n        </Button>\n        {isLoading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ButtonWithLoading;\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { Alert, Color } from \"@material-ui/lab\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\ninterface IScheduleFormDialogProps {\n  onClose: () => void;\n  onConfirm: () => void;\n  alerts?: IScheduleFormDialogAlert[];\n}\n\nexport interface IScheduleFormDialogAlert {\n  severity: Color;\n  message: string;\n  actionLabel?: string;\n  actionLink?: string;\n}\n\nconst ScheduleFormDialog = ({\n  alerts = [],\n  onClose,\n  onConfirm,\n}: IScheduleFormDialogProps) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const open = alerts.length > 0 ? true : false;\n\n  if (alerts.length === 0) return null;\n\n  const hasErrors = alerts.find((x) => x.severity === \"error\") ? true : false;\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      maxWidth=\"sm\"\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        <div style={{ display: \"flex\", flex: 1 }}>\n          <div style={{ display: \"flex\", flex: 1 }}>Requires your review!</div>\n          <NetworkLabel />\n        </div>\n      </DialogTitle>\n      <DialogContent\n        style={{ display: \"flex\", flexDirection: \"column\", gap: \"5px\" }}\n      >\n        {alerts.map((alert, index) => (\n          <Alert\n            key={`form-alert-${index}`}\n            severity={alert.severity}\n            action={\n              alert.actionLabel &&\n              alert.actionLink && (\n                <Button\n                  color=\"inherit\"\n                  component={RouterLink}\n                  to={alert.actionLink}\n                  size=\"small\"\n                >\n                  {alert.actionLabel}\n                </Button>\n              )\n            }\n          >\n            {alert.message}\n          </Alert>\n        ))}\n      </DialogContent>\n      <DialogActions\n        style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n      >\n        <Button onClick={onClose} color=\"inherit\">\n          Close\n        </Button>\n        {!hasErrors && (\n          <Button onClick={onConfirm} color=\"secondary\" variant=\"contained\">\n            Schedule anyway!\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ScheduleFormDialog;\n","import NumberFormat from \"react-number-format\";\n\ninterface INumberFormatCustomProps {\n  inputRef: (instance: NumberFormat | null) => void;\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst NumberInput = (props: INumberFormatCustomProps) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      decimalScale={0}\n      prefix=\"\"\n    />\n  );\n};\n\nexport default NumberInput;\n","import { ECronFieldOption, EMonths, EWeekDay } from \"./enums\";\n\nexport const WEEK_LIST = [\n  EWeekDay.Sunday,\n  EWeekDay.Monday,\n  EWeekDay.Tuesday,\n  EWeekDay.Wednesday,\n  EWeekDay.Thursday,\n  EWeekDay.Friday,\n  EWeekDay.Saturday,\n];\n\nexport const WEEK_LABEL = {\n  [EWeekDay.Sunday]: \"S\",\n  [EWeekDay.Monday]: \"M\",\n  [EWeekDay.Tuesday]: \"T\",\n  [EWeekDay.Wednesday]: \"W\",\n  [EWeekDay.Thursday]: \"T\",\n  [EWeekDay.Friday]: \"F\",\n  [EWeekDay.Saturday]: \"S\",\n};\n\nexport const getCronFieldOptions = (repetition: number) => ({\n  [ECronFieldOption.Day]: repetition > 1 ? \"days\" : \"day\",\n  [ECronFieldOption.Week]: repetition > 1 ? \"weeks\" : \"week\",\n  [ECronFieldOption.Month]: repetition > 1 ? \"months\" : \"month\",\n  [ECronFieldOption.Year]: repetition > 1 ? \"years\" : \"year\",\n  [ECronFieldOption.Custom]: \"advanced\",\n});\n\nexport const MONTHS_LIST = [\n  EMonths.January,\n  EMonths.February,\n  EMonths.March,\n  EMonths.April,\n  EMonths.May,\n  EMonths.June,\n  EMonths.July,\n  EMonths.August,\n  EMonths.September,\n  EMonths.October,\n  EMonths.November,\n  EMonths.December,\n];\n\nexport const MONTHS_LABEL = {\n  [EMonths.January]: \"January\",\n  [EMonths.February]: \"February\",\n  [EMonths.March]: \"March\",\n  [EMonths.April]: \"April\",\n  [EMonths.May]: \"May\",\n  [EMonths.June]: \"June\",\n  [EMonths.July]: \"July\",\n  [EMonths.August]: \"August\",\n  [EMonths.September]: \"September\",\n  [EMonths.October]: \"October\",\n  [EMonths.November]: \"November\",\n  [EMonths.December]: \"December\",\n};\n","import {\n  ECronArrayDefinition,\n  ECronFieldOption,\n  EMidday,\n  EMonths,\n  EWeekDay,\n} from \"./enums\";\nimport cronstrue from \"cronstrue\";\nimport Cron from \"cron-converter\";\nimport { MONTHS_LIST, WEEK_LIST } from \"./descriptions\";\nconst cronConverter = new Cron();\n\nexport interface ICronField {\n  option: ECronFieldOption;\n  every: number;\n  hour: number;\n  minute: number;\n  midday: EMidday;\n  weekDays: EWeekDay[];\n  months: EMonths[];\n  monthDays: number[];\n  expression: string;\n  description: string;\n}\n\nconst CRON_DEFAULT = \"0 0 */1 * *\";\n\nexport const DEFAULT_CRON_FIELD: ICronField = {\n  option: ECronFieldOption.Day,\n  every: 1,\n  hour: 12,\n  minute: 0,\n  midday: EMidday.AM,\n  weekDays: [EWeekDay.Monday],\n  months: [EMonths.January],\n  monthDays: [1],\n  expression: CRON_DEFAULT,\n  description: cronstrue.toString(CRON_DEFAULT, { verbose: true }),\n};\n\nexport const convertToCronExpression = (field: ICronField) => {\n  let expression = field.expression;\n\n  if (field.option !== ECronFieldOption.Custom) {\n    let currentValueArray: Cron.CronArray = [[], [], [], [], []];\n\n    if (field.midday === EMidday.AM)\n      currentValueArray[ECronArrayDefinition.Hour][0] =\n        field.hour === 12 ? 0 : field.hour;\n\n    if (field.midday === EMidday.PM)\n      currentValueArray[ECronArrayDefinition.Hour][0] =\n        field.hour === 12 ? 12 : field.hour + 12;\n\n    currentValueArray[ECronArrayDefinition.Minute][0] = field.minute;\n\n    if (field.option === ECronFieldOption.Day) {\n      currentValueArray[ECronArrayDefinition.Day] = arrayFromWithStep(\n        Array.from(Array(31).keys()).map((x) => x + 1),\n        field.every\n      );\n\n      currentValueArray[ECronArrayDefinition.Month] = MONTHS_LIST.map(\n        (x) => x + 1\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = WEEK_LIST;\n    } else if (field.option === ECronFieldOption.Week) {\n      const weeksRepetitionStart = arrayFromWithStep(\n        Array.from(Array(31).keys()).map((x) => x + 1),\n        field.every * 7\n      );\n\n      currentValueArray[ECronArrayDefinition.Day] = weeksRepetitionStart\n        .map((currentValue) =>\n          arrayFromWithStep(\n            Array.from(Array(7).keys()).map((x) => x + currentValue),\n            1\n          )\n        )\n        .reduce((acc, curVal) => acc.concat(curVal), [])\n        .filter((x) => x <= 31);\n\n      currentValueArray[ECronArrayDefinition.Month] = MONTHS_LIST.map(\n        (x) => x + 1\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = field.weekDays;\n    } else if (field.option === ECronFieldOption.Month) {\n      currentValueArray[ECronArrayDefinition.Day] = field.monthDays;\n\n      currentValueArray[ECronArrayDefinition.Month] = arrayFromWithStep(\n        MONTHS_LIST.map((x) => x + 1),\n        field.every\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = WEEK_LIST;\n    } else if (field.option === ECronFieldOption.Year) {\n      currentValueArray[ECronArrayDefinition.Day] = field.monthDays;\n\n      currentValueArray[ECronArrayDefinition.Month] = field.months.map(\n        (x) => x + 1\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = WEEK_LIST;\n    }\n\n    expression = cronConverter.fromArray(currentValueArray).toString();\n  }\n\n  return {\n    expression,\n    description: cronstrue.toString(expression, { verbose: true }),\n  };\n};\n\nfunction arrayFromWithStep(array: number[], step: number) {\n  const result: number[] = [];\n  for (let index = 0; index < array.length; index += step) {\n    result.push(array[index]);\n  }\n\n  return result;\n}\n","import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  Link,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport EditIcon from \"@material-ui/icons/DateRange\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useEffect, useState } from \"react\";\nimport NumberInput from \"../shared/NumberInput\";\n\nimport PlusIcon from \"@material-ui/icons/AddCircleRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircleRounded\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport cronstrue from \"cronstrue\";\nimport {\n  ECronFieldOption,\n  EMidday,\n  EMonths,\n  EWeekDay,\n} from \"./cronParser/enums\";\nimport {\n  getCronFieldOptions,\n  MONTHS_LABEL,\n  MONTHS_LIST,\n  WEEK_LABEL,\n  WEEK_LIST,\n} from \"./cronParser/descriptions\";\nimport {\n  convertToCronExpression,\n  ICronField,\n} from \"./cronParser/convertToCronExpression\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogPaper: {\n      margin: 0,\n\n      [theme.breakpoints.down(\"xs\")]: {\n        maxWidth: \"100% !important\",\n      },\n    },\n  })\n);\n\ninterface ICronButtonProps {\n  disabled: boolean;\n  value: ICronField;\n  onChange: (event: { target: { value: ICronField } }) => void;\n}\n\nconst CronButton: React.FC<ICronButtonProps> = ({\n  value,\n  onChange,\n  disabled,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [fields, setFields] = useState<ICronField>(value);\n\n  const cronFieldOptions = getCronFieldOptions(fields.every);\n\n  const [cronError, setCronError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setFields(value);\n  }, [value]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleClear = () => {\n    setFields(value);\n  };\n\n  const handleClose = () => {\n    handleClear();\n    setOpen(false);\n  };\n\n  const handleFieldChange = (fieldName: string, value: any) => {\n    const newValue = { ...fields, [fieldName]: value };\n    const cron = convertToCronExpression(newValue);\n\n    setFields({ ...newValue, ...cron });\n  };\n\n  const handleOptionChange = (event: any) => {\n    const option = event.target.value as ECronFieldOption;\n\n    let every = fields.every;\n\n    if ([ECronFieldOption.Year, ECronFieldOption.Custom].includes(option)) {\n      every = 1; // every is disabled on year and custom\n    }\n\n    const newValue = { ...fields, option, every };\n    const cron = convertToCronExpression(newValue);\n\n    setFields({ ...newValue, ...cron });\n  };\n\n  const handleEveryIncrement = (increment: number) => (event: any) => {\n    let result = fields.every + increment;\n\n    if (result <= 1) result = 1;\n\n    handleFieldChange(\"every\", result);\n  };\n\n  const handleWeekDaysChange = (day: EWeekDay) => () => {\n    if (fields.weekDays.includes(day)) {\n      if (fields.weekDays.length <= 1) {\n        return;\n      }\n      handleFieldChange(\n        \"weekDays\",\n        fields.weekDays.filter((x) => x !== day)\n      );\n    } else {\n      handleFieldChange(\"weekDays\", [...fields.weekDays, day]);\n    }\n  };\n\n  const handleMonthDaysChange = (day: number) => () => {\n    if (fields.monthDays.includes(day)) {\n      if (fields.monthDays.length <= 1) {\n        return;\n      }\n      handleFieldChange(\n        \"monthDays\",\n        fields.monthDays.filter((x) => x !== day)\n      );\n    } else {\n      handleFieldChange(\"monthDays\", [...fields.monthDays, day]);\n    }\n  };\n\n  const handleMonthsChange = (month: EMonths) => () => {\n    if (fields.months.includes(month)) {\n      if (fields.months.length <= 1) {\n        return;\n      }\n      handleFieldChange(\n        \"months\",\n        fields.months.filter((x) => x !== month)\n      );\n    } else {\n      handleFieldChange(\"months\", [...fields.months, month]);\n    }\n  };\n\n  const handleExpressionChange = (event: any) => {\n    const expression = event.target.value;\n\n    setCronError(null);\n\n    setFields((prev) => ({ ...prev, expression }));\n    try {\n      const description = cronstrue.toString(expression, { verbose: true });\n\n      setFields((prev) => ({ ...prev, description }));\n    } catch (error) {\n      let message = \"\";\n      if (typeof error === \"string\") message = error;\n      else message = error.message;\n\n      if (message.includes(\"Error: \")) message = message.replace(\"Error: \", \"\");\n\n      setFields((prev) => ({ ...prev, description: \"\" }));\n      setCronError(message);\n    }\n  };\n\n  const handleOkButton = () => {\n    if (fields.option === ECronFieldOption.Custom && cronError) return;\n\n    const cron = convertToCronExpression(fields);\n\n    onChange({ target: { value: { ...fields, ...cron } } });\n    handleClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"edit cron expression\"\n        onClick={() => setOpen(true)}\n        edge=\"end\"\n        disabled={disabled}\n      >\n        <EditIcon />\n      </IconButton>\n      <Dialog\n        scroll=\"body\"\n        fullWidth={false}\n        classes={{\n          paper: classes.dialogPaper,\n        }}\n        maxWidth={\"xs\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"cron-expression-dialog-title\"\n      >\n        <DialogTitle\n          disableTypography\n          id=\"cron-expression-dialog-title\"\n          style={{ height: 100, backgroundColor: theme.palette.primary.main }}\n        >\n          <Typography\n            component=\"h2\"\n            variant=\"h6\"\n            style={{ color: theme.palette.primary.contrastText }}\n          >\n            Recurrence\n          </Typography>\n          <Typography\n            component=\"h3\"\n            variant=\"caption\"\n            style={{ color: theme.palette.primary.contrastText }}\n          >\n            You can select the periodicity for the contract execution.\n          </Typography>\n        </DialogTitle>\n        <DialogContent style={{ minHeight: 200 }}>\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\n            <Typography variant=\"subtitle2\">Repeat every</Typography>\n            <TextField\n              margin=\"dense\"\n              variant=\"filled\"\n              fullWidth\n              style={{ flex: 1, minWidth: 120 }}\n              value={fields.every}\n              hiddenLabel\n              onChange={(event) =>\n                handleFieldChange(\"every\", +event.target.value)\n              }\n              disabled={[\n                ECronFieldOption.Year,\n                ECronFieldOption.Custom,\n              ].includes(fields.option)}\n              InputProps={{\n                inputComponent: NumberInput as any,\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"sub 10 quantity\"\n                      onClick={handleEveryIncrement(-1)}\n                      edge=\"start\"\n                      disabled={[\n                        ECronFieldOption.Year,\n                        ECronFieldOption.Custom,\n                      ].includes(fields.option)}\n                    >\n                      <MinusIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"add 10 quantity\"\n                      onClick={handleEveryIncrement(1)}\n                      edge=\"end\"\n                      disabled={[\n                        ECronFieldOption.Year,\n                        ECronFieldOption.Custom,\n                      ].includes(fields.option)}\n                    >\n                      <PlusIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <FormControl\n              variant=\"filled\"\n              fullWidth\n              style={{ flex: 1, minWidth: 90 }}\n              margin=\"dense\"\n              hiddenLabel\n            >\n              <Select value={fields.option} onChange={handleOptionChange}>\n                <MenuItem value={ECronFieldOption.Day}>\n                  {cronFieldOptions[ECronFieldOption.Day]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Week}>\n                  {cronFieldOptions[ECronFieldOption.Week]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Month}>\n                  {cronFieldOptions[ECronFieldOption.Month]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Year}>\n                  {cronFieldOptions[ECronFieldOption.Year]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Custom}>\n                  {cronFieldOptions[ECronFieldOption.Custom]}\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          {fields.option === ECronFieldOption.Week && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Repeat on</Typography>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                }}\n              >\n                {WEEK_LIST.map((week, index) => (\n                  <Chip\n                    key={`cron-week-${index}`}\n                    label={WEEK_LABEL[week]}\n                    size=\"small\"\n                    clickable\n                    color={\n                      fields.weekDays.includes(week) ? \"primary\" : \"default\"\n                    }\n                    onClick={handleWeekDaysChange(week)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n\n          {[ECronFieldOption.Month, ECronFieldOption.Year].includes(\n            fields.option\n          ) && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Repeat on</Typography>\n              </div>\n            </>\n          )}\n\n          {fields.option === ECronFieldOption.Year && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                  flexWrap: \"wrap\",\n                }}\n              >\n                {MONTHS_LIST.map((month, index) => (\n                  <Chip\n                    key={`cron-month-${index}`}\n                    label={MONTHS_LABEL[month]}\n                    size=\"small\"\n                    clickable\n                    color={\n                      fields.months.includes(month) ? \"primary\" : \"default\"\n                    }\n                    onClick={handleMonthsChange(month)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n\n          {[ECronFieldOption.Month, ECronFieldOption.Year].includes(\n            fields.option\n          ) && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                  flexWrap: \"wrap\",\n                }}\n              >\n                {Array.from(Array(31).keys()).map((day, index) => (\n                  <Chip\n                    key={`cron-year-${index}`}\n                    label={(day + 1).toString().padStart(2, \"0\")}\n                    size=\"small\"\n                    clickable\n                    color={\n                      fields.monthDays.includes(day + 1) ? \"primary\" : \"default\"\n                    }\n                    onClick={handleMonthDaysChange(day + 1)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n\n          {fields.option !== ECronFieldOption.Custom && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 16,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Repeat at</Typography>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                }}\n              >\n                <FormControl\n                  variant=\"filled\"\n                  style={{ flex: 1, maxWidth: 70 }}\n                  margin=\"dense\"\n                  hiddenLabel\n                >\n                  <Select\n                    value={fields.hour}\n                    onChange={(event) =>\n                      handleFieldChange(\n                        \"hour\",\n                        parseInt(event.target.value as string)\n                      )\n                    }\n                  >\n                    {Array.from(Array(12).keys())\n                      .reverse()\n                      .map((value) => (\n                        <MenuItem key={`cron-hour-${value}`} value={value + 1}>\n                          {value + 1}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                <Typography variant=\"subtitle2\">:</Typography>\n                <FormControl\n                  variant=\"filled\"\n                  style={{ flex: 1, maxWidth: 70 }}\n                  margin=\"dense\"\n                  hiddenLabel\n                >\n                  <Select\n                    value={fields.minute}\n                    onChange={(event) =>\n                      handleFieldChange(\n                        \"minute\",\n                        parseInt(event.target.value as string)\n                      )\n                    }\n                  >\n                    {Array.from(Array(60).keys())\n                      .filter((x) => x % 5 === 0)\n                      .map((value) => (\n                        <MenuItem key={`cron-minute-${value}`} value={value}>\n                          {value.toString().padStart(2, \"0\")}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                <FormControl\n                  variant=\"filled\"\n                  style={{ flex: 1, maxWidth: 70 }}\n                  margin=\"dense\"\n                  hiddenLabel\n                >\n                  <Select\n                    value={fields.midday}\n                    onChange={(event) =>\n                      handleFieldChange(\"midday\", event.target.value as EMidday)\n                    }\n                  >\n                    <MenuItem value={EMidday.AM}>am</MenuItem>\n                    <MenuItem value={EMidday.PM}>pm</MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n            </>\n          )}\n\n          {fields.option === ECronFieldOption.Custom && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 16,\n                }}\n              >\n                <Typography variant=\"subtitle2\">\n                  Learn more about cron expressions&nbsp;\n                  <Link\n                    component=\"a\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://en.wikipedia.org/wiki/Cron\"\n                  >\n                    here\n                  </Link>\n                </Typography>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                }}\n              >\n                <TextField\n                  margin=\"dense\"\n                  label=\"Expression\"\n                  variant=\"filled\"\n                  fullWidth\n                  style={{ flex: 1, minWidth: 200 }}\n                  onChange={handleExpressionChange}\n                  error={cronError ? true : false}\n                  value={fields.expression}\n                  helperText={cronError ? cronError : fields.description}\n                />\n              </div>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleOkButton} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CronButton;\n","import { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {\n  withStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fromBigNumberToHms, formatBigNumber } from \"../shared/formatters\";\nimport LoadingCircle from \"../shared/LoadingCircle\";\nimport StatusLabel from \"./StatusLabel\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { IPlanSnapshot, usePlan } from \"../sdk-hooks/usePlan\";\nimport PlanButton from \"./PlanButton\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport NumberInput from \"../shared/NumberInput\";\nimport PlusIcon from \"@material-ui/icons/AddCircleRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircleRounded\";\nimport { TokenType } from \"@rsksmart/rif-scheduler-sdk/dist/token\";\nimport { useSnackbar } from \"notistack\";\nimport { getMessageFromCode } from \"eth-rpc-errors\";\n\nconst rowStyles = { display: \"flex\", alignItems: \"center\", gap: \"5px\" };\n\nenum EApprovalStatus {\n  verify,\n  verified,\n  approved,\n}\n\nconst Plan: React.FC<{ value: IPlanSnapshot }> = ({ value }) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const [verifyApproval, approve, purchase, isConfirmed] = usePlan(value.ref);\n\n  const [buyingExecutions, setBuyingExecutions] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [approvalStatus, setApprovalStatus] = useState<EApprovalStatus>(\n    value.tokenType === TokenType.ERC20\n      ? EApprovalStatus.verify\n      : EApprovalStatus.approved\n  );\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleBuyingExecutionsIncrement = (increment: number) => () => {\n    setBuyingExecutions((prevQuantity) => {\n      let quantity = +prevQuantity + increment;\n\n      if (quantity <= 0) quantity = 0;\n\n      return quantity;\n    });\n\n    setApprovalStatus(\n      value.tokenType === TokenType.ERC20\n        ? EApprovalStatus.verify\n        : EApprovalStatus.approved\n    );\n  };\n\n  const handleBuyingExecutionsChange = (quantity: number) => {\n    if (quantity <= 0) quantity = 0;\n\n    setBuyingExecutions(quantity);\n    setApprovalStatus(\n      value.tokenType === TokenType.ERC20\n        ? EApprovalStatus.verify\n        : EApprovalStatus.approved\n    );\n  };\n\n  const handleBuyClick = async (executionsQuantity: number) => {\n    const isValid = executionsQuantity > 0 ? true : false;\n\n    if (isValid) {\n      setIsLoading(true);\n\n      try {\n        if (approvalStatus === EApprovalStatus.verify) {\n          const approvalResult = await verifyApproval(executionsQuantity);\n          setApprovalStatus(\n            approvalResult ? EApprovalStatus.verified : EApprovalStatus.approved\n          );\n        }\n\n        if (approvalStatus === EApprovalStatus.verified) {\n          await approve(executionsQuantity);\n          setApprovalStatus(EApprovalStatus.verify);\n        }\n\n        if (approvalStatus === EApprovalStatus.approved) {\n          await purchase(executionsQuantity);\n          setBuyingExecutions(0);\n\n          setApprovalStatus(\n            value.tokenType === TokenType.ERC20\n              ? EApprovalStatus.verify\n              : EApprovalStatus.approved\n          );\n        }\n      } catch (error) {\n        const message = getMessageFromCode(error.code, error.message);\n\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        });\n      }\n\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <PlanButton\n        value={value}\n        isConfirmed={isConfirmed}\n        onClick={() => setOpen(true)}\n      />\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          disableTypography\n        >\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <div style={{ display: \"flex\", flex: 1 }}>\n              <Typography component={\"h2\"} variant=\"h6\">\n                {`Plan #${value.index.add(1).toString()}`}\n              </Typography>\n            </div>\n            <LoadingCircle isLoading={isLoading} />\n            <NetworkLabel />\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <TableContainer\n            component={Paper}\n            elevation={0}\n            style={{ border: `1px solid ${theme.palette.action.hover}` }}\n          >\n            <Table aria-label=\"info table\">\n              <TableBody>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Remaining executions\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    <Typography variant=\"h5\">\n                      {value.remainingExecutions.toString()}\n                    </Typography>\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Status\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={rowStyles}>\n                    <StatusLabel plan={value} isConfirmed={isConfirmed} />\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Window\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    {fromBigNumberToHms(value.window)}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Gas limit\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    {formatBigNumber(value.gasLimit, 0)}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Price per execution\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\">\n                    {`${formatBigNumber(\n                      value.pricePerExecution,\n                      value.tokenDecimals\n                    )} ${value.tokenSymbol}`}\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Quantity to purchase\n                  </StrongTableCell>\n                  <RegularTableCell align=\"right\" style={{ width: 200 }}>\n                    <TextField\n                      disabled={isLoading || !isConfirmed}\n                      margin=\"dense\"\n                      hiddenLabel\n                      variant=\"filled\"\n                      fullWidth\n                      style={{ flex: 1, minWidth: 120 }}\n                      onChange={(event) =>\n                        handleBuyingExecutionsChange(+event.target.value)\n                      }\n                      value={buyingExecutions}\n                      InputProps={{\n                        inputComponent: NumberInput as any,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <IconButton\n                              size=\"small\"\n                              aria-label=\"sub 10 quantity\"\n                              onClick={handleBuyingExecutionsIncrement(-10)}\n                              edge=\"start\"\n                              disabled={isLoading || !isConfirmed}\n                            >\n                              <MinusIcon />\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              size=\"small\"\n                              aria-label=\"add 10 quantity\"\n                              onClick={handleBuyingExecutionsIncrement(10)}\n                              edge=\"end\"\n                              disabled={isLoading || !isConfirmed}\n                            >\n                              <PlusIcon />\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </RegularTableCell>\n                </StyledTableRow>\n                <StyledTableRow>\n                  <StrongTableCell component=\"th\" scope=\"row\">\n                    Total\n                  </StrongTableCell>\n                  <BigTableCell align=\"right\">\n                    {`${formatBigNumber(\n                      value.pricePerExecution.mul(buyingExecutions),\n                      value.tokenDecimals\n                    )}`}\n\n                    {` ${value.tokenSymbol}`}\n                  </BigTableCell>\n                </StyledTableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </DialogContent>\n        <DialogActions\n          style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n        >\n          <Button\n            color=\"inherit\"\n            disabled={isLoading}\n            onClick={() => {\n              setBuyingExecutions(0);\n              setOpen(false);\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            disabled={\n              isLoading ||\n              !isConfirmed ||\n              !value.isActive ||\n              +buyingExecutions === 0\n            }\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ minWidth: 160 }}\n            onClick={() => handleBuyClick(buyingExecutions)}\n          >\n            {isConfirmed &&\n              approvalStatus === EApprovalStatus.verify &&\n              \"Verify approval\"}\n            {isConfirmed &&\n              approvalStatus === EApprovalStatus.verified &&\n              \"Approve\"}\n            {isConfirmed &&\n              approvalStatus === EApprovalStatus.approved &&\n              \"Buy\"}\n            {!isConfirmed && \"Waiting confirmation\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Plan;\n\nconst RegularTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      borderBottom: \"none\",\n    },\n  })\n)(TableCell);\n\nconst BigTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: \"1rem\",\n      fontWeight: \"bold\",\n      borderBottom: \"none\",\n    },\n  })\n)(TableCell);\n\nconst StrongTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      borderBottom: \"none\",\n      maxWidth: 60,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n","import { addSeconds, parseISO } from \"date-fns\";\nimport { BigNumber, utils } from \"ethers\";\nimport { Execution, RIFScheduler } from \"@rsksmart/rif-scheduler-sdk\";\nimport { IContract } from \"../contracts/useContracts\";\nimport { useIndexedExecutionsStore } from \"../sdk-hooks/useExecutions\";\nimport { IProviderSnapshot } from \"../sdk-hooks/useProviders\";\nimport environment from \"../shared/environment\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport { IFormFields } from \"./ScheduleForm\";\nimport { IScheduleFormDialogAlert } from \"./ScheduleFormDialog\";\n\nexport const validateBeforeSchedule = async (\n  scheduleItem: IFormFields,\n  contract: IContract,\n  provider: IProviderSnapshot,\n  myAccountAddress: string\n): Promise<IScheduleFormDialogAlert[]> => {\n  // TODO: add an input form for this value\n  const valueToTransfer = BigNumber.from(0);\n\n  const scheduler = new RIFScheduler(provider.config);\n\n  const plan = await scheduler.getPlan(\n    BigNumber.from(scheduleItem.providerPlanIndex)\n  );\n\n  const result: IScheduleFormDialogAlert[] = [];\n\n  const executionsQuantity = scheduleItem.isRecurrent\n    ? +scheduleItem.cronQuantity!\n    : 1;\n\n  // validate purchased execution\n  const hasAnExecutionLeft = (await plan.getRemainingExecutions()).gte(\n    executionsQuantity\n  );\n\n  if (!hasAnExecutionLeft) {\n    result.push({\n      message: `You don't have ${formatBigNumber(\n        BigNumber.from(executionsQuantity),\n        0\n      )} ${executionsQuantity === 1 ? \"execution\" : \"executions\"} left`,\n      severity: \"error\",\n      actionLabel: \"Purchase more\",\n      actionLink: \"/store\",\n    });\n  }\n\n  const encodedFunctionCall = new utils.Interface(\n    contract.ABI\n  ).encodeFunctionData(\n    scheduleItem.contractAction,\n    scheduleItem.contractFields\n  );\n\n  const execution = new Execution(\n    scheduler.config,\n    plan,\n    contract.address,\n    encodedFunctionCall,\n    parseISO(scheduleItem.executeAt),\n    valueToTransfer,\n    myAccountAddress\n  );\n\n  // if gasEstimation is undefined warn the user that the execution might fail\n  const estimatedGas = await execution.estimateGas();\n  if (!estimatedGas) {\n    result.push({\n      message:\n        \"We couldn't estimate the gas for the execution you want to schedule. \" +\n        \"Hint: Make sure that all the parameters are correct and \" +\n        \"that you will comply the execution requirements at the time of its execution.\",\n      severity: \"warning\",\n    });\n  }\n\n  // estimatedGas is lower than the gas limit for the selected plan\n  const isInsidePlanGasLimit = plan.gasLimit.gte(estimatedGas ?? 0);\n  if (estimatedGas && !isInsidePlanGasLimit) {\n    result.push({\n      message:\n        `The selected plan has a gas limit of ${formatBigNumber(\n          plan.gasLimit,\n          0\n        )} which is lower that ` +\n        `our estimation for this execution (${formatBigNumber(\n          estimatedGas,\n          0\n        )}).`,\n      severity: \"warning\",\n    });\n  }\n\n  // validate minimum date/time\n  const minimumDate = addSeconds(\n    new Date(),\n    environment.MINIMUM_TIME_BEFORE_EXECUTION\n  );\n\n  if (parseISO(scheduleItem.executeAt) <= minimumDate) {\n    result.push({\n      message: `You need to schedule at least ${fromBigNumberToHms(\n        BigNumber.from(environment.MINIMUM_TIME_BEFORE_EXECUTION)\n      )} in advance.`,\n      severity: \"error\",\n    });\n  }\n\n  // validate existing scheduled execution\n  const executions = scheduleItem.isRecurrent\n    ? Execution.fromCronExpression(\n        execution,\n        scheduleItem.cronFields?.expression!,\n        +scheduleItem.cronQuantity!\n      )\n    : [execution];\n\n  const executionsIds = executions.map((x) => x.getId());\n\n  const existing = Object.values(\n    useIndexedExecutionsStore.getState().indexedExecutions\n  ).find(\n    (index) =>\n      executionsIds.includes(index.id!) &&\n      index.providerAddress === scheduleItem.providerAddress\n  );\n\n  if (existing) {\n    const message = scheduleItem.isRecurrent\n      ? \"One or more executions are already scheduled.\"\n      : \"This execution is already scheduled\";\n\n    result.push({\n      message: message,\n      severity: \"error\",\n    });\n  }\n\n  return result;\n};\n","import { Plan, TokenType } from \"@rsksmart/rif-scheduler-sdk\";\nimport { BigNumber, BigNumberish } from \"ethers\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { usePlansStore } from \"./usePlans\";\nimport { useTransactions } from \"./useTransactions\";\n\nexport interface IPlanSnapshot {\n  index: BigNumber;\n  isActive: boolean;\n  window: BigNumber;\n  gasLimit: BigNumber;\n  pricePerExecution: BigNumber;\n  remainingExecutions: BigNumber;\n  tokenType: TokenType;\n  tokenDecimals: number;\n  tokenSymbol: string;\n  ref: Plan;\n}\n\nexport const createPlanSnapshot = async (\n  plan: Plan\n): Promise<IPlanSnapshot> => {\n  const isActive = await plan.isActive();\n  const remainingExecutions = await plan.getRemainingExecutions();\n  const tokenDecimals = await plan.token.decimals();\n  const tokenSymbol = await plan.token.symbol();\n  const tokenType = plan.token.getType();\n\n  return {\n    index: plan.index,\n    isActive,\n    window: plan.window,\n    gasLimit: plan.gasLimit,\n    pricePerExecution: plan.pricePerExecution,\n    remainingExecutions,\n    tokenType,\n    tokenDecimals,\n    tokenSymbol,\n    ref: plan,\n  };\n};\n\nexport const getPlanKey = (plan: Plan) => {\n  return `plan@${plan.config.contractAddress}@${plan.index}`;\n};\n\nexport const usePlan = (plan: Plan) => {\n  const key = getPlanKey(plan);\n\n  const [isConfirmed, setIsConfirmed] = useState<boolean>(true);\n\n  const setPlan = usePlansStore((state) => state.setPlan);\n\n  const [pendingTransactions, registerTx] = useTransactions(key);\n\n  const verifyApproval = async (quantity: BigNumberish) => {\n    const amount = plan.pricePerExecution.mul(quantity);\n\n    return plan.token.needsApproval(amount);\n  };\n\n  const approve = useCallback(\n    async (quantity: BigNumberish) => {\n      const amount = plan.pricePerExecution.mul(quantity);\n\n      const tx = await plan.token.approve(amount);\n\n      registerTx(\n        tx.hash,\n        `Your approve of ${quantity} ${\n          quantity > 1 ? \"executions\" : \"execution\"\n        } was confirmed!`,\n        `Your approve of ${quantity} ${\n          quantity > 1 ? \"executions\" : \"execution\"\n        } could not be confirmed.`\n      );\n    },\n    [plan, registerTx]\n  );\n\n  const purchase = useCallback(\n    async (quantity: BigNumberish) => {\n      const tx = await plan.purchase(quantity);\n\n      registerTx(\n        tx.hash,\n        `Your purchase of ${quantity} ${\n          quantity > 1 ? \"executions\" : \"execution\"\n        } was confirmed!`,\n        `Your purchase of ${quantity} ${\n          quantity > 1 ? \"executions\" : \"execution\"\n        } could not be confirmed.`\n      );\n    },\n    [plan, registerTx]\n  );\n\n  useEffect(() => {\n    const hasPendingTransactions = pendingTransactions.length > 0;\n\n    if (hasPendingTransactions) {\n      setIsConfirmed(false);\n    } else if (!hasPendingTransactions && !isConfirmed) {\n      createPlanSnapshot(plan).then((snap) => {\n        setPlan(snap);\n        setIsConfirmed(true);\n      });\n    }\n  }, [isConfirmed, pendingTransactions, plan, setPlan]);\n\n  return [\n    verifyApproval,\n    approve,\n    purchase,\n    isConfirmed,\n    pendingTransactions,\n    key,\n  ] as const;\n};\n","import { RIFScheduler } from \"@rsksmart/rif-scheduler-sdk\";\nimport { useCallback, useMemo } from \"react\";\nimport { createPlanSnapshot, IPlanSnapshot } from \"./usePlan\";\nimport { IProviderSnapshot } from \"./useProviders\";\nimport shallow from \"zustand/shallow\";\nimport create from \"zustand\";\n\nexport interface IUsePlansStore {\n  plans: {\n    [providerAddress: string]: {\n      [index: string]: IPlanSnapshot;\n    };\n  };\n  setPlan: (plan: IPlanSnapshot) => void;\n}\n\nexport const usePlansStore = create<IUsePlansStore>((set, get) => ({\n  plans: {},\n  setPlan: (plan: IPlanSnapshot) => {\n    const providerAddress = plan.ref.config.contractAddress;\n\n    set((state) => ({\n      plans: {\n        ...state.plans,\n        [providerAddress]: {\n          ...state.plans[providerAddress],\n          [plan.index.toString()]: plan,\n        },\n      },\n    }));\n  },\n}));\n\nexport const usePlans = (provider: IProviderSnapshot) => {\n  const scheduler = useMemo(\n    () => new RIFScheduler(provider.config),\n    [provider]\n  );\n\n  const [plans, setPlan] = usePlansStore(\n    (store) => [store.plans[provider.config.contractAddress], store.setPlan],\n    shallow\n  );\n\n  const loadPlans = useCallback(async () => {\n    const plans = await scheduler.getPlans();\n\n    const plansSnapshots = await Promise.all(plans.map(createPlanSnapshot));\n\n    plansSnapshots.forEach(setPlan);\n  }, [scheduler, setPlan]);\n\n  return [Object.values(plans ?? []), loadPlans] as const;\n};\n","import \"date-fns\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ColorSelector from \"./ColorSelector\";\nimport useContracts from \"../contracts/useContracts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { parseISO, isValid } from \"date-fns\";\nimport hyphensAndCamelCaseToWords from \"../shared/hyphensAndCamelCaseToWords\";\nimport shallow from \"zustand/shallow\";\nimport ButtonWithLoading from \"../shared/ButtonWIthLoading\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport useConnector from \"../connect/useConnector\";\nimport { useSnackbar } from \"notistack\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport {\n  Divider,\n  IconButton,\n  InputAdornment,\n  withStyles,\n} from \"@material-ui/core\";\nimport ScheduleFormDialog, {\n  IScheduleFormDialogAlert,\n} from \"./ScheduleFormDialog\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport NumberInput from \"../shared/NumberInput\";\nimport PlusIcon from \"@material-ui/icons/AddCircleRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircleRounded\";\nimport CronButton from \"./CronButton\";\nimport {\n  DEFAULT_CRON_FIELD,\n  ICronField,\n} from \"./cronParser/convertToCronExpression\";\nimport {\n  IProviderSnapshot,\n  useProvidersStore,\n} from \"../sdk-hooks/useProviders\";\nimport { validateBeforeSchedule } from \"./validateBeforeSchedule\";\nimport { usePlans } from \"../sdk-hooks/usePlans\";\nimport { useExecutions } from \"../sdk-hooks/useExecutions\";\nimport { getMessageFromCode } from \"eth-rpc-errors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst DEFAULT_FIELDS: Partial<IFormFields> = {\n  cronFields: DEFAULT_CRON_FIELD,\n  cronQuantity: \"0\",\n};\n\nexport interface IFormFields {\n  title: string;\n  executeAt: string;\n  providerAddress: string;\n  providerPlanIndex: string;\n  contractId: string;\n  contractAction: string;\n  contractFields: string[];\n  color?: string;\n  isRecurrent?: boolean;\n  cronFields?: ICronField;\n  cronQuantity?: string;\n}\n\nconst ScheduleForm = () => {\n  const classes = useStyles();\n\n  const [, , schedule] = useExecutions();\n\n  const [fields, setFields] = useState<Partial<IFormFields> | null>(\n    DEFAULT_FIELDS\n  );\n  const [alerts, setAlerts] = useState<\n    IScheduleFormDialogAlert[] | undefined\n  >();\n\n  const [cronFieldFocused, setCronFieldFocused] = useState<boolean>(false);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const providers = useProvidersStore((state) => state.providers);\n\n  const contracts = useContracts((state) => state.contracts);\n  const [account, connectedToNetwork] = useConnector(\n    (state) => [state.account, state.network],\n    shallow\n  );\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleExecuteAtChange = (date: Date | null) => {\n    setFields((values) => ({\n      ...values,\n      executeAt: date && isValid(date) ? date.toISOString() : undefined,\n    }));\n  };\n\n  const handleContractChange = (event: any) => {\n    setFields((values) => ({\n      ...values,\n      contractId: event.target.value,\n      contractAction: undefined,\n      contractFields: undefined,\n    }));\n  };\n\n  const handleMethodChange = (event: any) => {\n    setFields((values) => ({\n      ...values,\n      contractAction: event.target.value,\n      contractFields: undefined,\n    }));\n  };\n\n  const handleContractFieldsChange = (index: number) => (event: any) => {\n    setFields((values) => {\n      const newFields = [...(values?.contractFields ?? [])];\n      newFields[index] = event.target.value;\n\n      return { ...values, contractFields: newFields };\n    });\n  };\n\n  const handleFieldChange = (fieldName: string) => (event: any) => {\n    setFields((values) => ({ ...values, [fieldName]: event.target.value }));\n  };\n\n  const handleCronFieldsChange = (event: any) => {\n    const cronFields = event.target.value;\n\n    setFields((values) => ({ ...values, cronFields }));\n  };\n\n  const handleCronQuantityIncrement = (increment: number) => (event: any) => {\n    let quantity =\n      (fields?.cronQuantity ? +fields?.cronQuantity : 0) + increment;\n\n    if (quantity <= 0) quantity = 0;\n\n    setFields((values) => ({ ...values, cronQuantity: quantity.toString() }));\n  };\n\n  const handleIsRecurrentFieldChange = (event: any, checked: boolean) => {\n    setFields((values) => ({\n      ...values,\n      isRecurrent: checked,\n    }));\n  };\n\n  const handleClear = () => {\n    setFields((prev) => ({ ...DEFAULT_FIELDS }));\n  };\n\n  const abi = fields?.contractId\n    ? JSON.parse(contracts[fields.contractId].ABI)\n    : null;\n\n  const contractActions = abi\n    ? abi.filter((x: any) => x.type === \"function\")\n    : [];\n\n  const contractInputs =\n    abi && fields?.contractAction\n      ? abi.find(\n          (x: any) => x.type === \"function\" && x.name === fields.contractAction\n        )?.inputs\n      : undefined;\n\n  const selectedProvider = providers.find(\n    (provider) => provider.config.contractAddress === fields?.providerAddress\n  );\n\n  const validateForm = () => {\n    const isValid =\n      fields &&\n      fields.title &&\n      fields.contractId &&\n      fields.contractAction &&\n      fields.executeAt &&\n      fields.providerAddress &&\n      fields.providerPlanIndex;\n\n    const isValidRecurrence =\n      fields &&\n      (fields.isRecurrent\n        ? fields.cronFields && +(fields.cronQuantity ?? \"0\") > 0\n        : true);\n\n    let isContractFieldsValid = true;\n    for (let i = 0; contractInputs && i < contractInputs.length; i++) {\n      isContractFieldsValid =\n        fields?.contractFields && fields.contractFields[i] ? true : false;\n\n      if (!isContractFieldsValid) break;\n    }\n\n    return isValid && isValidRecurrence && isContractFieldsValid;\n  };\n\n  const handleSchedule = async () => {\n    const provider = providers.find(\n      (x) => x.config.contractAddress === fields?.providerAddress\n    );\n\n    const isFormValid = validateForm();\n\n    if (provider && isFormValid) {\n      const scheduleItem = {\n        ...fields,\n        network: connectedToNetwork!,\n      } as IFormFields;\n      const selectedContract = contracts[fields!.contractId!];\n\n      const alerts = await validateBeforeSchedule(\n        scheduleItem,\n        selectedContract,\n        provider,\n        account!\n      );\n\n      setAlerts(alerts);\n\n      if (alerts.length === 0) {\n        handleScheduleAndSave();\n      }\n    }\n  };\n\n  const handleScheduleAnyway = () => {\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      handleScheduleAndSave();\n      setAlerts([]);\n    }\n  };\n\n  const handleScheduleAndSave = async () => {\n    const provider = providers.find(\n      (x) => x.config.contractAddress === fields?.providerAddress\n    );\n\n    setIsLoading(true);\n\n    try {\n      await schedule({\n        title: fields!.title!,\n        network: connectedToNetwork!,\n        contractId: fields!.contractId!,\n        contractMethod: fields!.contractAction!,\n        contractFields: fields!.contractFields!,\n        color: fields!.color!,\n        executeAtISO: fields!.executeAt!,\n        providerAddress: provider!.config.contractAddress,\n        providerPlanIndex: fields!.providerPlanIndex!,\n        value: \"0\",\n        requestor: account!,\n        isRecurrent: fields!.isRecurrent!,\n        cronExpression: fields!.isRecurrent!\n          ? fields!.cronFields!.expression!\n          : undefined,\n        quantity: fields!.isRecurrent! ? fields!.cronQuantity! : undefined,\n      });\n\n      handleClear();\n    } catch (error) {\n      const message = getMessageFromCode(error.code, error.message);\n\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <ScheduleFormDialog\n        alerts={alerts}\n        onClose={() => setAlerts([])}\n        onConfirm={handleScheduleAnyway}\n      />\n      <Card className={classes.root}>\n        <CardHeader title={\"Schedule\"} action={<NetworkLabel />} />\n        <CardContent style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <TextField\n                disabled={isLoading}\n                margin=\"dense\"\n                label=\"Title\"\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                onChange={handleFieldChange(\"title\")}\n                value={fields?.title ? fields.title : \"\"}\n              />\n              <FormControlLabel\n                style={{\n                  marginTop: 8,\n                  marginBottom: 4,\n                  marginRight: 0,\n                  marginLeft: 0,\n                }}\n                control={\n                  <Switch\n                    checked={fields?.isRecurrent ? true : false}\n                    onChange={handleIsRecurrentFieldChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Recurrent\"\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <KeyboardDateTimePicker\n                disabled={isLoading}\n                margin=\"dense\"\n                id=\"executeAt\"\n                inputVariant=\"filled\"\n                label={fields?.isRecurrent ? \"Starts At\" : \"Execute At\"}\n                format=\"MM/dd/yyyy HH:mm\"\n                fullWidth={true}\n                style={{ flex: 1, minWidth: 200 }}\n                value={fields?.executeAt ? parseISO(fields.executeAt) : null}\n                onChange={handleExecuteAtChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change execute at\",\n                }}\n              />\n              <CustomTooltip\n                open={cronFieldFocused}\n                title={\n                  fields?.cronFields?.description ??\n                  \"Failed to load the description\"\n                }\n              >\n                <TextField\n                  disabled={isLoading || !fields?.isRecurrent}\n                  margin=\"dense\"\n                  label=\"Recurrence expression\"\n                  variant=\"filled\"\n                  fullWidth\n                  style={{ flex: 1, minWidth: 200 }}\n                  onFocus={() => setCronFieldFocused(true)}\n                  onBlur={() => setCronFieldFocused(false)}\n                  value={fields?.cronFields?.description}\n                  inputProps={{\n                    style: {\n                      textOverflow: \"ellipsis\",\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                    },\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment\n                        position=\"end\"\n                        style={{ paddingRight: 12 }}\n                      >\n                        <CronButton\n                          onChange={handleCronFieldsChange}\n                          value={fields?.cronFields ?? DEFAULT_CRON_FIELD}\n                          disabled={isLoading || !fields?.isRecurrent}\n                        />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </CustomTooltip>\n              <TextField\n                disabled={isLoading || !fields?.isRecurrent}\n                margin=\"dense\"\n                label=\"Executions quantity\"\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                onChange={handleFieldChange(\"cronQuantity\")}\n                value={fields?.cronQuantity ? fields.cronQuantity : \"0\"}\n                InputProps={{\n                  inputComponent: NumberInput as any,\n                  startAdornment: (\n                    <InputAdornment position=\"start\" style={{ paddingLeft: 0 }}>\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"sub 10 quantity\"\n                        onClick={handleCronQuantityIncrement(-10)}\n                        edge=\"start\"\n                        disabled={isLoading || !fields?.isRecurrent}\n                      >\n                        <MinusIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment\n                      position=\"end\"\n                      style={{ paddingRight: 12, marginTop: 16 }}\n                    >\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"add 10 quantity\"\n                        onClick={handleCronQuantityIncrement(10)}\n                        edge=\"end\"\n                        disabled={isLoading || !fields?.isRecurrent}\n                      >\n                        <PlusIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-provider\">Provider</InputLabel>\n                <Select\n                  labelId=\"schedule-provider\"\n                  value={fields?.providerAddress ? fields.providerAddress : \"\"}\n                  onChange={handleFieldChange(\"providerAddress\")}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {providers.map((provider) => (\n                    <MenuItem\n                      key={`schedule-provider-${provider.index}`}\n                      value={provider.config.contractAddress}\n                    >\n                      {`Provider #${provider.index + 1}`}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-provider-plan\">Plan</InputLabel>\n                {!selectedProvider && (\n                  <Select labelId=\"schedule-provider-plan\">\n                    <MenuItem disabled>None</MenuItem>\n                  </Select>\n                )}\n                {selectedProvider && (\n                  <DisplayPlansMenu\n                    provider={selectedProvider}\n                    value={`${\n                      fields?.providerPlanIndex ? fields.providerPlanIndex : \"\"\n                    }`}\n                    onChange={handleFieldChange(\"providerPlanIndex\")}\n                  />\n                )}\n              </FormControl>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-contract\">Contract</InputLabel>\n                <Select\n                  labelId=\"schedule-contract\"\n                  value={fields?.contractId ? fields.contractId : \"\"}\n                  onChange={handleContractChange}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {Object.entries(contracts)\n                    .filter(\n                      ([id, contract]) =>\n                        contract.network === connectedToNetwork\n                    )\n                    .map(([id, contract]) => (\n                      <MenuItem key={`schedule-contract-${id}`} value={id}>\n                        {contract.name}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-contract-method\">Action</InputLabel>\n                <Select\n                  labelId=\"schedule-contract-method\"\n                  value={fields?.contractAction ? fields.contractAction : \"\"}\n                  onChange={handleMethodChange}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {contractActions.map((method: any) => (\n                    <MenuItem\n                      key={`contract-method-${method.name}`}\n                      value={method.name}\n                    >\n                      {hyphensAndCamelCaseToWords(method.name)}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                flexDirection: \"column\",\n              }}\n            >\n              {contractInputs && contractInputs.length > 0 && (\n                <Typography\n                  variant=\"caption\"\n                  display=\"block\"\n                  color=\"textSecondary\"\n                  style={{ marginTop: 12 }}\n                >\n                  Action Parameters\n                </Typography>\n              )}\n              {contractInputs &&\n                contractInputs.map(({ name, type }: any, index: number) => (\n                  <TextField\n                    key={`field-${name}-${type}`}\n                    disabled={isLoading}\n                    margin=\"dense\"\n                    label={hyphensAndCamelCaseToWords(name)}\n                    helperText={\n                      type.includes(\"int\")\n                        ? \"Number\"\n                        : hyphensAndCamelCaseToWords(type)\n                    }\n                    variant=\"filled\"\n                    fullWidth\n                    onChange={handleContractFieldsChange(index)}\n                    value={\n                      fields?.contractFields\n                        ? fields?.contractFields[index]\n                        : \"\"\n                    }\n                  />\n                ))}\n            </div>\n          </MuiPickersUtilsProvider>\n        </CardContent>\n        <CardActions\n          style={{ justifyContent: \"space-between\", flexWrap: \"wrap\" }}\n        >\n          <ColorSelector\n            disabled={isLoading}\n            value={fields?.color ? fields.color : \"\"}\n            onChange={handleFieldChange(\"color\")}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Button\n                onClick={handleClear}\n                color=\"inherit\"\n                disabled={isLoading}\n              >\n                Clear\n              </Button>\n            </div>\n            <ButtonWithLoading\n              onClick={handleSchedule}\n              label=\"Schedule\"\n              isLoading={isLoading}\n            />\n          </div>\n        </CardActions>\n      </Card>\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\nexport default ScheduleForm;\n\nconst DisplayPlansMenu: React.FC<{\n  provider: IProviderSnapshot;\n  onChange: (event: any) => void;\n  value: string;\n}> = ({ provider, value, onChange }) => {\n  const [plans, loadPlans] = usePlans(provider);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadPlans().then(() => setIsLoading(false));\n  }, [loadPlans]);\n\n  return (\n    <Select labelId=\"schedule-provider-plan\" value={value} onChange={onChange}>\n      <MenuItem disabled>{isLoading ? \"loading...\" : \"None\"}</MenuItem>\n      {plans.map((plan) => (\n        <MenuItem\n          key={`schedule-provider-plan-${plan.index}`}\n          value={`${plan.index}`}\n        >\n          <span style={{ fontWeight: \"bold\" }}>{`#${plan.index\n            .add(1)\n            .toString()}`}</span>\n          <span style={{ marginLeft: 8 }}>{`Window: ${fromBigNumberToHms(\n            plan.window\n          )} - Gas limit: ${formatBigNumber(plan.gasLimit, 0)}`}</span>\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nconst CustomTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#333\",\n    color: \"rgba(255, 255, 255, 0.87)\",\n    //boxShadow: theme.shadows[1],\n    fontSize: 11,\n    fontWeight: \"bold\",\n    marginTop: 2,\n    padding: 5,\n  },\n}))(Tooltip);\n","import \"date-fns\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\n\nimport History from \"./History\";\nimport ScheduleForm from \"./ScheduleForm\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n  })\n);\n\nconst Schedule = () => {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <ScheduleForm />\n      <div\n        className={classes.root} //marginTop: 15,\n      >\n        <History />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Schedule;\n","import Chip from \"@material-ui/core/Chip\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { IPlanSnapshot } from \"../sdk-hooks/usePlan\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    purchasing: {\n      color: \"#333\",\n      border: \"1px solid #f7e463\",\n      backgroundColor: \"#f7e463\",\n    },\n    active: {\n      color: \"#333\",\n      border: \"1px solid #7cd992\",\n      backgroundColor: \"#7cd992\",\n    },\n    inactive: {\n      color: \"#333\",\n      border: \"1px solid #a8a8a8\",\n      backgroundColor: \"#a8a8a8\",\n    },\n  })\n);\n\nconst StatusLabel = ({\n  plan,\n  isConfirmed,\n}: {\n  plan: IPlanSnapshot;\n  isConfirmed: boolean;\n}) => {\n  const classes = useStyles();\n\n  let label = plan.isActive ? \"Active\" : \"Inactive\";\n  let classStatus = plan.isActive ? classes.active : classes.inactive;\n\n  if (!isConfirmed) {\n    label = \"Waiting confirmation\";\n    classStatus = classes.purchasing;\n  }\n\n  return (\n    <Chip\n      size=\"small\"\n      color=\"primary\"\n      variant=\"default\"\n      label={label}\n      classes={{\n        colorPrimary: classStatus,\n      }}\n    />\n  );\n};\n\nexport default StatusLabel;\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport React from \"react\";\nimport StatusLabel from \"./StatusLabel\";\nimport { Hidden } from \"@material-ui/core\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport PurchaseIcon from \"@material-ui/icons/AddCircle\";\n\nimport { IPlanSnapshot } from \"../sdk-hooks/usePlan\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    part: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    row: {\n      borderLeft: `rgba(0, 0, 0, 0.12) 4px solid`,\n      borderBottom: `rgba(0, 0, 0, 0.12) 1px solid`,\n      borderRadius: 15,\n    },\n  })\n);\n\nconst PlanButton: React.FC<{\n  value: IPlanSnapshot;\n  isConfirmed: boolean;\n  onClick?: () => void;\n}> = ({ value, isConfirmed, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem button className={classes.row} onClick={onClick}>\n      <div\n        className={classes.part}\n        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <ListItemText\n          className={classes.part}\n          primary={`#${value.index.add(1).toString()}`}\n          secondary={`${\n            value.remainingExecutions?.toString() ?? 0\n          } executions left`}\n        />\n        <div style={{ paddingLeft: 16, paddingRight: 16 }}>\n          <StatusLabel plan={value} isConfirmed={isConfirmed} />\n        </div>\n      </div>\n      <Hidden xsDown>\n        <Divider orientation=\"vertical\" style={{ marginRight: 16 }} flexItem />\n        <ListItemText\n          primary={`Window: ${fromBigNumberToHms(value.window)}`}\n          secondary={`Gas limit: ${formatBigNumber(value.gasLimit, 0)}`}\n          className={classes.part}\n        />\n      </Hidden>\n      <ListItemSecondaryAction>\n        <PurchaseIcon style={{ color: \"rgba(0, 0, 0, 0.12)\" }} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default PlanButton;\n","import {\n  Avatar,\n  Box,\n  Grid,\n  LinearProgress,\n  Typography,\n  makeStyles,\n  colors,\n  Button,\n} from \"@material-ui/core\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ReadyIcon from \"@material-ui/icons/CheckCircle\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useContracts from \"../contracts/useContracts\";\nimport { BIG_ZERO } from \"../shared/reduceExecutionsLeft\";\nimport { useProvidersStore } from \"../sdk-hooks/useProviders\";\nimport { getExecutionsLeftTotal } from \"../sdk-hooks/getExecutionsLeftTotal\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.orange[800],\n    height: 56,\n    width: 56,\n  },\n  avatarReady: {\n    backgroundColor: colors.green[800],\n    height: 56,\n    width: 56,\n  },\n}));\n\nenum ETask {\n  PurchaseExecutions = 0,\n  RegisterContracts = 1,\n  ReadyToSchedule = 2,\n}\n\nconst TASKS = [\n  {\n    title: \"You need to purchase executions\",\n    link: \"/store\",\n    linkLabel: \"Purchase executions\",\n  },\n  {\n    title: \"You need to register some contracts\",\n    link: \"/contracts\",\n    linkLabel: \"Register contracts\",\n  },\n  {\n    title: \"You are ready to schedule executions\",\n    link: \"/schedule\",\n    linkLabel: \"Schedule an execution\",\n  },\n];\n\nconst TasksProgress = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const totalTasks = TASKS.length - 1;\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const [executionsLeft, setExecutionsLeft] = useState(BIG_ZERO);\n  const providers = useProvidersStore((state) => state.providers);\n\n  useEffect(() => {\n    getExecutionsLeftTotal(providers).then((total) => setExecutionsLeft(total));\n  }, [providers]);\n\n  const contracts = useContracts((state) => state.contracts);\n  const networkContracts = Object.entries(contracts).filter(\n    ([id, contract]) => contract.network === connectedToNetwork\n  );\n\n  let currentTask = ETask.ReadyToSchedule;\n  if (executionsLeft.lte(BIG_ZERO)) {\n    currentTask = ETask.PurchaseExecutions;\n  } else if (networkContracts.length <= 0) {\n    currentTask = ETask.RegisterContracts;\n  }\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" spacing={3}>\n        <Grid item style={{ flex: 1 }}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n            style={{ marginBottom: \"0.35em\" }}\n          >\n            {TASKS[currentTask].title}\n          </Typography>\n          <Button\n            component={RouterLink}\n            to={TASKS[currentTask].link}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {TASKS[currentTask].linkLabel}\n          </Button>\n        </Grid>\n        <Grid item>\n          {currentTask !== totalTasks && (\n            <Avatar className={classes.avatar}>\n              <HelpIcon />\n            </Avatar>\n          )}\n          {currentTask === totalTasks && (\n            <Avatar className={classes.avatarReady}>\n              <ReadyIcon />\n            </Avatar>\n          )}\n        </Grid>\n      </Grid>\n      <Box mt={3}>\n        <LinearProgress\n          value={(currentTask * 100) / totalTasks}\n          variant=\"determinate\"\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default TasksProgress;\n","import {\n  makeStyles,\n  createStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Divider } from \"@material-ui/core\";\nimport { memo } from \"react\";\nimport { useDelayMount } from \"../shared/useDelayMount\";\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 2,\n      borderRadius: 0,\n    },\n    colorPrimary: {\n      backgroundColor:\n        theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: \"#1a90ff\",\n    },\n  })\n)(LinearProgress);\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 800,\n  },\n  divider: {\n    height: 2,\n    width: \"100%\",\n    maxWidth: 800,\n  },\n});\n\nconst Loading: React.FC<{ isLoading: boolean }> = memo(({ isLoading }) => {\n  const classes = useStyles();\n\n  const mounted = useDelayMount(330);\n\n  const loadingResult = mounted && isLoading;\n\n  return (\n    <div className={classes.root}>\n      {loadingResult && <BorderLinearProgress variant=\"indeterminate\" />}\n      {!loadingResult && <Divider className={classes.divider} />}\n    </div>\n  );\n});\n\nexport default Loading;\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { formatBigNumber } from \"../shared/formatters\";\nimport Plan from \"./Plan\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { BIG_ZERO, executionsLeft } from \"../shared/reduceExecutionsLeft\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { IProviderSnapshot } from \"../sdk-hooks/useProviders\";\nimport { usePlans } from \"../sdk-hooks/usePlans\";\nimport Loading from \"./Loading\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      padding: 5,\n      gap: \"5px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    expanderHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      display: \"block\",\n    },\n    expanderSecondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    expanderRoot: {\n      margin: 0,\n      \"&:before\": {\n        content: \"none\",\n      },\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst PlansList: React.FC<{\n  expandedFixed: boolean;\n  provider: IProviderSnapshot;\n}> = ({ expandedFixed, provider }) => {\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [plans, loadPlans] = usePlans(provider);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadPlans().then(() => setIsLoading(false));\n  }, [loadPlans]);\n\n  const [expanded, setExpanded] = useState<boolean>(expandedFixed);\n\n  const handleExpandChange = () => {\n    setExpanded((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Loading isLoading={isLoading} />\n      <Accordion\n        expanded={expandedFixed || expanded}\n        onChange={handleExpandChange}\n        elevation={0}\n        className={classes.expanderRoot}\n      >\n        <AccordionSummary\n          expandIcon={!expandedFixed ? <ExpandMoreIcon /> : undefined}\n          aria-controls={`accordion-content-${provider.index}`}\n          style={{ cursor: expandedFixed ? \"default\" : \"pointer\" }}\n          id={`accordion-header-${provider.index}`}\n        >\n          <div style={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                flex: 1,\n              }}\n            >\n              <Typography className={classes.expanderHeading}>\n                {`Provider #${provider.index + 1}`}\n              </Typography>\n              <Typography className={classes.expanderSecondaryHeading}>\n                {`${formatBigNumber(\n                  plans.reduce(executionsLeft, BIG_ZERO),\n                  0\n                )} executions left`}\n              </Typography>\n            </div>\n            {!expandedFixed && (\n              <Chip\n                size=\"small\"\n                label={expanded ? \"Show less\" : \"Show more\"}\n                style={{ cursor: \"pointer\" }}\n              />\n            )}\n          </div>\n        </AccordionSummary>\n        <AccordionDetails style={{ padding: 0, flexDirection: \"column\" }}>\n          <List className={classes.root}>\n            {plans.map((plan, index) => (\n              <Plan\n                key={`plan-item-${plan.ref.config.contractAddress}-${index}`}\n                value={plan}\n              />\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n};\n\nexport default PlansList;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport PlansList from \"./PlansList\";\nimport { useProvidersStore } from \"../sdk-hooks/useProviders\";\nimport { memo } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n  })\n);\n\nconst Store = memo(() => {\n  const classes = useStyles();\n\n  const providers = useProvidersStore((state) => state.providers);\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"Store\" />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Here you can purchase executions.\n          </Typography>\n        </CardContent>\n      </Card>\n      <div className={classes.root}>\n        <Card style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }}>\n          {providers.map((provider, index) => (\n            <PlansList\n              key={`plans-list-${index}`}\n              expandedFixed={providers.length === 1}\n              provider={provider}\n            />\n          ))}\n        </Card>\n      </div>\n    </Layout>\n  );\n});\n\nexport default Store;\n","import { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useContracts, { IContract } from \"./useContracts\";\nimport useConnector from \"../connect/useConnector\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport { ENetwork } from \"../shared/types\";\n\nconst AddEditContract = ({\n  hideButton = false,\n  initialFields = null,\n  onClose,\n}: {\n  onClose?: () => void;\n  hideButton?: boolean;\n  initialFields?: IContract | null;\n}) => {\n  const [open, setOpen] = useState(initialFields ? true : false);\n  const [fields, setFields] = useState<Partial<IContract> | null>(\n    initialFields\n  );\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const save = useContracts((state) => state.save);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setFields(null);\n    setOpen(false);\n\n    if (onClose) onClose();\n  };\n\n  const handleFillExample = () => {\n    const address = \"0x4050C33e00AAF070A4001AcbfD29778986D4A4f9\";\n\n    setFields({\n      id: `${connectedToNetwork}-${address}`,\n      name: \"Counter Example\",\n      address: address,\n      ABI: JSON.stringify(\n        [\n          {\n            anonymous: false,\n            inputs: [\n              {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"count\",\n                type: \"uint256\",\n              },\n            ],\n            name: \"Counted\",\n            type: \"event\",\n          },\n          {\n            inputs: [],\n            name: \"count\",\n            outputs: [\n              {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n              },\n            ],\n            stateMutability: \"view\",\n            type: \"function\",\n          },\n          {\n            inputs: [],\n            name: \"inc\",\n            outputs: [],\n            stateMutability: \"payable\",\n            type: \"function\",\n          },\n          {\n            inputs: [],\n            name: \"fail\",\n            outputs: [],\n            stateMutability: \"pure\",\n            type: \"function\",\n          },\n        ],\n        null,\n        2\n      ),\n    });\n  };\n\n  const handleSave = () => {\n    // TODO: validate contract fields\n    const isValid = fields && fields.ABI && fields.address && fields.name;\n\n    if (isValid) {\n      save({\n        ...(fields as IContract),\n        network: connectedToNetwork!,\n        id: fields?.id ?? `${connectedToNetwork}-${fields?.address}`,\n      });\n\n      setFields(null);\n      setOpen(false);\n      if (onClose) onClose();\n    }\n  };\n\n  const handleFieldChange = (fieldName: string) => (event: any) => {\n    setFields((values) => ({ ...values, [fieldName]: event.target.value }));\n  };\n\n  return (\n    <>\n      {!hideButton && (\n        <Button\n          aria-label=\"add contract\"\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"small\"\n          endIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Register\n        </Button>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <div style={{ display: \"flex\", flex: 1 }}>\n              {fields?.id ? \"Edit contract\" : \"Register new contract\"}\n            </div>\n            <NetworkLabel />\n          </div>\n        </DialogTitle>\n        <DialogContent key={`add-edit-contract-${fields?.id}`}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Name\"\n            helperText=\"Give your contract a name to make it easier to identify. Only for display purposes.\"\n            variant=\"filled\"\n            fullWidth\n            onChange={handleFieldChange(\"name\")}\n            value={fields?.name}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Address\"\n            helperText=\"Add your contract address\"\n            variant=\"filled\"\n            fullWidth\n            onChange={handleFieldChange(\"address\")}\n            value={fields?.address}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"ABI\"\n            helperText=\"Paste your contract's ABI code here to be able to schedule its execution later.\"\n            variant=\"filled\"\n            fullWidth\n            multiline\n            rows={8}\n            onChange={handleFieldChange(\"ABI\")}\n            value={fields?.ABI}\n          />\n        </DialogContent>\n        <DialogActions\n          style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n        >\n          {connectedToNetwork === ENetwork.RSKTestnet && (\n            <div style={{ display: \"flex\", flex: 1 }}>\n              <Button onClick={handleFillExample} color=\"secondary\">\n                Fill example\n              </Button>\n            </div>\n          )}\n          <Button onClick={handleClose} color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AddEditContract;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { CardActions } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      marginTop: 15,\n    },\n  })\n);\n\nconst StoragePersistAlert = () => {\n  const classes = useStyles();\n\n  const isPersistStorageAvailable =\n    navigator.storage && (navigator.storage.persist as any) ? true : false;\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [enableClicked, setEnableClicked] = useState(false);\n\n  useEffect(() => {\n    const action = async () => {\n      if (!isPersistStorageAvailable) return;\n\n      const isPersisted = await navigator.storage.persisted();\n\n      if (!isPersisted) {\n        setShowAlert(true);\n      }\n    };\n\n    action();\n  }, [isPersistStorageAvailable]);\n\n  const handleEnable = async () => {\n    setEnableClicked(true);\n    const isPersisted = await navigator.storage.persist();\n    localStorage.setItem(\"STORAGE_PERSIST_HANDLED\", \"YES\");\n    setShowAlert(!isPersisted);\n  };\n\n  return (\n    <>\n      {showAlert && !localStorage.getItem(\"STORAGE_PERSIST_HANDLED\") && (\n        <Card className={classes.root}>\n          <CardHeader title={\"Persist Storage\"} />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a decentralized web application which means your data is\n              only saved in this browser, so we recommend enabling persistent\n              storage to prevent your data from being deleted automatically by\n              your browser.\n            </Typography>\n          </CardContent>\n          <CardActions style={{ justifyContent: \"flex-end\" }}>\n            <Button\n              onClick={handleEnable}\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={enableClicked}\n            >\n              Enable\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default StoragePersistAlert;\n","export default __webpack_public_path__ + \"static/media/contractBolt.5c67e21c.svg\";","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddEditContract from \"./AddEditContract\";\nimport useContracts, { IContract } from \"./useContracts\";\nimport { useState } from \"react\";\nimport { CardActionArea, Divider } from \"@material-ui/core\";\nimport StoragePersistAlert from \"./StoragePersistAlert\";\nimport contractSvg from \"../assets/illustrations/contractBolt.svg\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport shortText from \"../shared/shortText\";\nimport useConnector from \"../connect/useConnector\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst Contracts = () => {\n  const classes = useStyles();\n\n  const contracts = useContracts((state) => state.contracts);\n\n  const [editing, setEditing] = useState<IContract | null>(null);\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const networkContracts = Object.entries(contracts).filter(\n    ([id, contract]) => contract.network === connectedToNetwork\n  );\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"Contracts\" />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Register your contracts here to be able to schedule their execution\n            later.\n          </Typography>\n        </CardContent>\n        <CardActions style={{ padding: 16, paddingTop: 0 }}>\n          <AddEditContract />\n        </CardActions>\n      </Card>\n      <Divider className={classes.divider} />\n\n      <StoragePersistAlert />\n\n      <AddEditContract\n        key={`edit-contract-${editing?.id}`}\n        hideButton={true}\n        initialFields={editing}\n        onClose={() => setEditing(null)}\n      />\n\n      <div\n        style={{\n          marginTop: 15,\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gridAutoRows: \"120px\",\n          gridGap: \"5px\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          maxWidth: 800,\n        }}\n      >\n        {networkContracts.map(([id, contract]) => (\n          <ContractButton\n            key={`contract-list-${id}`}\n            name={contract.name}\n            address={contract.address}\n            onClick={() => setEditing(contract)}\n          />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nconst ContractButton = ({\n  name,\n  address,\n  onClick,\n}: {\n  name: string;\n  address: string;\n  onClick: any;\n}) => {\n  return (\n    <Card>\n      <CardActionArea\n        style={{\n          height: \"100%\",\n          background: `url(${contractSvg}) no-repeat`,\n          backgroundPosition: \"right -50px top -20px\",\n          backgroundSize: \"140px 140px\",\n        }}\n        onClick={onClick}\n      >\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {shortText(address)}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default Contracts;\n","import {\n  makeStyles,\n  createStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { memo } from \"react\";\nimport { useDelayMount } from \"./useDelayMount\";\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 10,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor:\n        theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: \"#1a90ff\",\n    },\n  })\n)(LinearProgress);\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 800,\n    marginTop: 2.5,\n    marginBottom: 2.5,\n  },\n});\n\nconst Loading: React.FC<{ isLoading: boolean }> = memo(({ isLoading }) => {\n  const classes = useStyles();\n\n  const mounted = useDelayMount(330);\n\n  const loadingResult = mounted && isLoading;\n\n  return (\n    <div className={classes.root}>\n      {loadingResult && <BorderLinearProgress variant=\"indeterminate\" />}\n      {!loadingResult && <div style={{ height: 10 }} />}\n    </div>\n  );\n});\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/lock.4473d54d.svg\";","import { useCallback, useEffect } from \"react\";\nimport useConnector from \"./useConnector\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Loading from \"../shared/Loading\";\nimport shallow from \"zustand/shallow\";\nimport { isRLoginConnected, rLogin } from \"./rLogin\";\nimport Button from \"@material-ui/core/Button\";\nimport lockSvg from \"../assets/illustrations/lock.svg\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst Connect = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const location = useLocation<any>();\n\n  const { from } = location.state || { from: { pathname: \"/\" } };\n\n  const [connect, disconnect, isLoading] = useConnector(\n    (state) => [state.connect, state.disconnect, state.isLoading],\n    shallow\n  );\n\n  const handleConnect = useCallback(async () => {\n    try {\n      const wait = (ms: number) =>\n        new Promise((resolve) => setTimeout(resolve, ms));\n      const timeout = (p: Promise<any>, ms: number) =>\n        Promise.race([\n          p,\n          wait(ms).then(() => {\n            throw new Error(\"Timeout after \" + ms + \" ms\");\n          }),\n        ]);\n\n      const { provider, disconnect } = await timeout(rLogin.connect(), 3000);\n\n      connect(provider, disconnect).then(() => history.replace(from));\n    } catch (error) {\n      console.error(\"handleConnect error:\", error);\n      disconnect();\n    }\n  }, [connect, disconnect, from, history]);\n\n  useEffect(() => {\n    if (isRLoginConnected()) {\n      handleConnect();\n    }\n  }, [handleConnect]);\n\n  return (\n    <Layout hideMenu>\n      {!isLoading && (\n        <Card\n          className={classes.root}\n          style={{\n            height: \"100%\",\n            backgroundImage: `url(${lockSvg})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \"right -60px top -20px\",\n            backgroundSize: \"160px 160px\",\n          }}\n        >\n          <CardHeader title=\"Wallet connection\" />\n          <CardContent>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n              Let's connect your wallet to start scheduling executions.\n            </Typography>\n            <div\n              style={{\n                display: \"flex\",\n                // justifyContent: \"center\",\n                marginTop: 24,\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleConnect}\n              >\n                Connect now!\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      <Loading isLoading={isLoading} />\n    </Layout>\n  );\n};\n\nexport default Connect;\n","import useConnector from \"./useConnector\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport shallow from \"zustand/shallow\";\nimport {\n  CardContent,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport AccountIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport DisconnectIcon from \"@material-ui/icons/ExitToApp\";\nimport { useSnackbar } from \"notistack\";\nimport shortText from \"../shared/shortText\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport NetworkLabel from \"./NetworkLabel\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n    },\n    overflowEllipsis: {\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n    },\n  })\n);\n\nconst Account = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [account, disconnect] = useConnector(\n    (state) => [state.account, state.disconnect],\n    shallow\n  );\n\n  const handleAccountClick = () => {\n    if (!navigator?.clipboard) {\n      enqueueSnackbar(\"Your browser can't access the clipboard\", {\n        variant: \"error\",\n      });\n      return;\n    }\n\n    navigator.clipboard.writeText(account!);\n    enqueueSnackbar(\"Copied!\", { autoHideDuration: 500 });\n  };\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"Account\" />\n        <CardContent style={{ padding: 0 }}>\n          <List className={classes.root}>\n            <ListItem button onClick={handleAccountClick}>\n              <ListItemIcon>\n                <AccountIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={\"Wallet\"}\n                secondary={\n                  <>\n                    <Hidden smUp>{shortText(account!)}</Hidden>\n                    <Hidden xsDown>{account}</Hidden>\n                  </>\n                }\n                title={account}\n                classes={{ secondary: classes.overflowEllipsis }}\n              />\n            </ListItem>\n            <Divider />\n            <ListItem\n              button\n              onClick={() => {\n                disconnect();\n                history.replace(\"/\");\n              }}\n            >\n              <ListItemIcon>\n                <DisconnectIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Disconnect\"} />\n            </ListItem>\n          </List>\n        </CardContent>\n      </Card>\n    </Layout>\n  );\n};\n\nexport default Account;\n","\nconst UnsupportedNetwork = (props: any) => {\n  return (\n    <svg\n      data-name=\"Layer 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={790}\n      height={512.208}\n      viewBox=\"0 0 790 512.208\"\n      {...props}\n    >\n      <path\n        d=\"M720.563 510.693L698 442.603s24.818 24.817 24.818 45.181l-4.454-47.09s12.727 17.18 11.454 43.272-9.255 26.727-9.255 26.727zM236.02 448.693L214 382.24s24.222 24.222 24.222 44.096l-4.348-45.96s12.421 16.77 11.18 42.233-9.033 26.085-9.033 26.085z\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M579.726 479.359c.037 43.715-86.665 30.268-192.81 30.36s-191.535 13.686-191.573-30.028 86.633-53.298 192.777-53.39 191.568 9.343 191.606 53.058z\"\n        fill=\"#e6e6e6\"\n      />\n      <path fill=\"#3f3d56\" d=\"M0 509.693h790v2H0z\" />\n      <path\n        fill=\"#a0616a\"\n        d=\"M505.336 420.322h-13.877l-6.604-53.525h20.481v53.525z\"\n      />\n      <path\n        d=\"M480.006 416.357h28.304v16.851h-43.613v-1.541a15.31 15.31 0 0115.309-15.31z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        fill=\"#a0616a\"\n        d=\"M607.336 499.322h-13.877l-6.604-53.525h20.481v53.525z\"\n      />\n      <path\n        d=\"M582.006 495.357h28.304v16.851h-43.613v-1.541a15.31 15.31 0 0115.309-15.31z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M671.345 340.309a10.316 10.316 0 00-2.896-15.551l-32.23-131.293-20.608 8.867 38.336 126.949a10.372 10.372 0 0017.398 11.028zM646.208 74.964a11.382 11.382 0 00-17.416 1.152l-49.885 5.727 7.589 19.242 45.367-8.491a11.444 11.444 0 0014.345-17.63z\"\n        fill=\"#a0616a\"\n      />\n      <path\n        d=\"M564 326.693l21.768 163.374 27.093-5.578s-3.984-118.981 9.563-133.325S605 311.694 605 311.694z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M573 281.693l-10 15s-77-32-77 19-4.406 85.61-6 88 18.438 8.594 28 7c0 0 11.797-82.219 11-87 0 0 75.534 37.033 89.877 33.846S626.61 343.068 629 336.693s-1-57-1-57l-47.81-14.59z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M574.35 191.633l-2.851-3.42s-31.924-71.829-19.382-91.211 67.267-22.233 68.977-21.093-4.084 15.943-.094 22.784c0 0-42.394 9.191-45.244 10.331s21.966 43.274 21.966 43.274l-2.85 25.653z\"\n        fill=\"#ccc\"\n      />\n      <path\n        d=\"M630.215 156.289s-29.643 3.42-30.783 3.42-1.71-7.41-1.71-7.41l-26.223 35.913S558.579 292.403 562 290.693s66.505 8.112 67.075 3.551-.57-27.363 1.14-28.503 29.644-71.828 29.644-71.828-2.85-14.822-12.542-19.952-17.102-17.672-17.102-17.672z\"\n        fill=\"#ccc\"\n      />\n      <path\n        d=\"M650.738 184.222l9.12 9.69s13.553 111.36 6.142 114.781-22 3-22 3L629.645 258.9z\"\n        fill=\"#ccc\"\n      />\n      <circle cx={601.73} cy={122.998} r={26.239} fill=\"#a0616a\" />\n      <path\n        d=\"M595.573 127.092c-.355-5.445-7.223-5.631-12.68-5.683s-11.977.144-15.065-4.355c-2.04-2.973-1.65-7.1.035-10.288s4.458-5.639 7.186-7.997c7.041-6.09 14.298-12.13 22.752-16.027s18.36-5.472 27.128-2.343c10.77 3.843 25.329 23.625 26.586 34.991s-3.285 22.953-10.942 31.446-25.182 5.067-36.21 8.088c6.704-9.49 2.285-26.732-8.456-31.164z\"\n        fill=\"#2f2e41\"\n      />\n      <circle cx={361.722} cy={403.505} r={62.989} fill=\"#008cff\" />\n      <path\n        d=\"M319.656 336.04a45.16 45.16 0 01-41.255-26.787L178.449 84.162a59.83 59.83 0 11111.87-41.865l72.377 235.412a45.08 45.08 0 01-43.04 58.33z\"\n        fill=\"#008cff\"\n      />\n    </svg>\n  )\n}\n\nexport default UnsupportedNetwork\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useConnector from \"./useConnector\";\nimport { ENetwork, SupportedNetworks } from \"../shared/types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NetworkLabel from \"./NetworkLabel\";\nimport UnsupportedNetwork from \"../assets/illustrations/UnsupportedNetwork\";\nimport shallow from \"zustand/shallow\";\n\nconst UnsupportedNetworkAlert = () => {\n  const theme = useTheme();\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const [connectedToNetwork, isConnected] = useConnector(\n    (state) => [state.network, state.isConnected],\n    shallow\n  );\n\n  const open =\n    isConnected &&\n    !SupportedNetworks.includes(connectedToNetwork ?? ENetwork.NotSupported);\n\n  return (\n    <Dialog fullScreen={fullScreen} maxWidth=\"sm\" fullWidth={true} open={open}>\n      <DialogTitle>Unsupported network</DialogTitle>\n      <DialogContent>\n        <div style={{ display: \"flex\", flex: 1 }}>\n          <UnsupportedNetwork style={{ height: 200, padding: 16 }} />\n        </div>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n          You are connected to an incorrect network.\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n          Please change your wallet to one of the following networks:\n        </Typography>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"5px\",\n            marginTop: 24,\n            marginBottom: 16,\n          }}\n        >\n          {SupportedNetworks.map((network) => (\n            <NetworkLabel\n              key={`supported-network-${network}`}\n              network={network}\n            />\n          ))}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default UnsupportedNetworkAlert;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport ContractsIcon from \"@material-ui/icons/OfflineBolt\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useContracts from \"../contracts/useContracts\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Contracts = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const contracts = useContracts((state) => state.contracts);\n\n  const networkContracts = Object.entries(contracts).filter(\n    ([id, contract]) => contract.network === connectedToNetwork\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              REGISTERED CONTRACTS\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {networkContracts.length}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/contracts\">\n              Go to contracts &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ContractsIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Contracts;\n","import { RIFScheduler } from \"@rsksmart/rif-scheduler-sdk\";\nimport { BIG_ZERO } from \"../shared/reduceExecutionsLeft\";\nimport { IProviderSnapshot } from \"./useProviders\";\n\nexport const getExecutionsLeftTotal = async (\n  providers: IProviderSnapshot[]\n) => {\n  let result = BIG_ZERO;\n  for (const provider of providers) {\n    const scheduler = new RIFScheduler(provider.config);\n\n    const plans = await scheduler.getPlans();\n\n    const remainingExecutions = await Promise.all(\n      plans.map((plan) => plan.getRemainingExecutions())\n    );\n\n    const left = remainingExecutions.reduce((total, remainingExecution) => {\n      return total.add(remainingExecution);\n    }, BIG_ZERO);\n\n    result = result.add(left);\n  }\n\n  return result;\n};\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport { formatBigNumber } from \"../shared/formatters\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { BIG_ZERO } from \"../shared/reduceExecutionsLeft\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useProvidersStore } from \"../sdk-hooks/useProviders\";\nimport { getExecutionsLeftTotal } from \"../sdk-hooks/getExecutionsLeftTotal\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Executions = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const [executionsLeft, setExecutionsLeft] = useState(BIG_ZERO);\n  const providers = useProvidersStore((state) => state.providers);\n\n  useEffect(() => {\n    getExecutionsLeftTotal(providers).then((total) => setExecutionsLeft(total));\n  }, [providers]);\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              REMAINING EXECUTIONS\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {formatBigNumber(executionsLeft, 0)}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/store\">\n              Go to store &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <StoreIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Executions;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport ScheduleIcon from \"@material-ui/icons/EventAvailable\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useIndexedExecutionsStore } from \"../sdk-hooks/useExecutions\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Schedule = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const indexedExecutions = useIndexedExecutionsStore(\n    (state) => state.indexedExecutions\n  );\n\n  const networkScheduledExecutions = Object.values(indexedExecutions).filter(\n    (index) => index.network === connectedToNetwork\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              SCHEDULED EXECUTIONS\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {networkScheduledExecutions.length}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/schedule\">\n              Go to schedule &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ScheduleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Schedule;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport ScheduleIcon from \"@material-ui/icons/Timeline\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useIndexedExecutionsStore } from \"../sdk-hooks/useExecutions\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst ScheduleHistory = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const indexedExecutions = useIndexedExecutionsStore(\n    (state) => state.indexedExecutions\n  );\n\n  const networkScheduledExecutions = Object.values(indexedExecutions).filter(\n    (index) => index.network === connectedToNetwork && index.completedTxHash\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              EXECUTIONS COMPLETED\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {networkScheduledExecutions.length}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/schedule\">\n              Go to schedule &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ScheduleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ScheduleHistory;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Contracts from \"./Contracts\";\nimport Executions from \"./Executions\";\nimport Schedule from \"./Schedule\";\nimport ScheduleHistory from \"./ScheduleHistory\";\nimport TasksProgress from \"./TasksProgress\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"WHAT'S NEXT?\" />\n        <CardContent>\n          <TasksProgress />\n        </CardContent>\n      </Card>\n      <Divider className={classes.divider} />\n      <div\n        style={{\n          marginTop: 15,\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 2fr))\",\n          gridAutoRows: \"180px\",\n          gridGap: \"5px\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          maxWidth: 800,\n        }}\n      >\n        <Executions />\n        <Contracts />\n        <Schedule />\n        <ScheduleHistory />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import { providers } from \"ethers\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect } from \"react\";\nimport shallow from \"zustand/shallow\";\nimport useConnector from \"../connect/useConnector\";\nimport environment from \"../shared/environment\";\nimport { ENetwork } from \"../shared/types\";\nimport {\n  ETransactionStatus,\n  ITransaction,\n  useTransactionsStore,\n} from \"./useTransactions\";\nimport { getMessageFromCode } from \"eth-rpc-errors\";\n\nexport interface IConfirmationsNotifierConfig {\n  provider: providers.Provider;\n  onConfirmed: ((txHash: string) => void) | undefined;\n  onFailed: ((txHash: string, error: any) => void) | undefined;\n  onCompleted?: ((txHash: string) => void) | undefined;\n  tx: ITransaction;\n}\n\nexport const confirmationsNotifier = ({\n  provider,\n  onConfirmed,\n  onCompleted,\n  onFailed,\n  tx,\n}: IConfirmationsNotifierConfig) => {\n  return provider\n    .waitForTransaction(tx.hash, environment.CONFIRMATIONS)\n    .then(() => {\n      if (onConfirmed) onConfirmed(tx.hash);\n    })\n    .catch((error) => {\n      if (onFailed) onFailed(tx.hash, error);\n    })\n    .finally(() => {\n      if (onCompleted) onCompleted(tx.hash);\n    });\n};\n\nconst enqueuedTxs: string[] = [];\n\nexport const useConfirmationsNotifier = () => {\n  const [isConnected, network, isLoading, signer] = useConnector((state) => [\n    state.isConnected,\n    state.network,\n    state.isLoading,\n    state.signer,\n  ]);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [transactions, changeStatus] = useTransactionsStore(\n    (state) => [state.transactions, state.changeStatus],\n    shallow\n  );\n\n  useEffect(() => {\n    if (\n      !isConnected ||\n      isLoading ||\n      !signer ||\n      !network ||\n      network === ENetwork.NotSupported\n    ) {\n      return;\n    }\n\n    const pendingTransactions = Object.entries(transactions);\n\n    for (const [key, transactions] of pendingTransactions) {\n      const pendingTransactions = transactions.filter((x) =>\n        [ETransactionStatus.Idle, ETransactionStatus.Waiting].includes(x.status)\n      );\n\n      for (const tx of pendingTransactions) {\n        if (enqueuedTxs.includes(tx.hash)) break;\n\n        enqueuedTxs.push(tx.hash);\n\n        confirmationsNotifier({\n          provider: signer.provider!,\n          tx: tx,\n          onConfirmed: () => {\n            changeStatus(key, tx.hash, ETransactionStatus.Confirmed);\n            enqueueSnackbar(tx.confirmMessage, {\n              variant: \"success\",\n            });\n          },\n          onFailed: (_, error) => {\n            const message = getMessageFromCode(error.code, error.message);\n\n            changeStatus(key, tx.hash, ETransactionStatus.Failed, message);\n            enqueueSnackbar(tx.failMessage, {\n              variant: \"error\",\n            });\n          },\n        });\n      }\n    }\n  }, [\n    isConnected,\n    network,\n    isLoading,\n    signer,\n    transactions,\n    enqueueSnackbar,\n    changeStatus,\n  ]);\n};\n","import React, { useRef } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./assets/theme\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport Schedule from \"./schedule/Schedule\";\nimport Store from \"./store/Store\";\nimport Contracts from \"./contracts/Contracts\";\nimport Connect from \"./connect/Connect\";\nimport useConnector from \"./connect/useConnector\";\nimport Account from \"./connect/Account\";\nimport UnsupportedNetworkAlert from \"./connect/UnsupportedNetworkAlert\";\nimport Home from \"./home/Home\";\nimport { useConfirmationsNotifier } from \"./sdk-hooks/useConfirmationsNotifier\";\nimport { useProvidersLoader } from \"./sdk-hooks/useProviders\";\n\nfunction App() {\n  const notistackRef = useRef<any>(null);\n\n  useProvidersLoader();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider\n        maxSnack={2}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        ref={notistackRef}\n      >\n        <UnsupportedNetworkAlert />\n        <Routes />\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n}\n\nconst Routes = () => {\n  const isConnected = useConnector((state) => state.isConnected);\n\n  useConfirmationsNotifier();\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/connect\">\n          <Connect />\n        </Route>\n        <ConnectedRoute\n          exact\n          path=\"/\"\n          isConnected={isConnected}\n          component={Home}\n        />\n        <ConnectedRoute\n          exact\n          path=\"/schedule\"\n          isConnected={isConnected}\n          component={Schedule}\n        />\n        <ConnectedRoute\n          exact\n          path=\"/store\"\n          isConnected={isConnected}\n          component={Store}\n        />\n        <ConnectedRoute\n          exact\n          path=\"/contracts\"\n          isConnected={isConnected}\n          component={Contracts}\n        />\n        <ConnectedRoute\n          exact\n          path=\"/account\"\n          isConnected={isConnected}\n          component={Account}\n        />\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst ConnectedRoute: React.FC<{\n  isConnected: boolean;\n  exact: boolean;\n  component: any;\n  path: string;\n}> = ({ isConnected, exact, path, component: Component }) => (\n  <Route\n    exact={exact}\n    path={path}\n    render={(props) =>\n      isConnected ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/connect\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}