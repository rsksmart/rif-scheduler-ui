{"version":3,"sources":["assets/theme.ts","assets/Logo.tsx","shared/Layout.tsx","shared/types.ts","shared/environment.ts","shared/getExecutionResult.ts","shared/localbasePersist.ts","shared/formatters.ts","shared/getDatesFromCronExpression.ts","schedule/useSchedule.ts","store/useProviders.ts","contracts/useContracts.ts","shared/hyphensAndCamelCaseToWords.ts","connect/rLogin.ts","connect/useConnector.ts","schedule/StatusLabel.tsx","connect/NetworkLabel.tsx","shared/shortText.ts","schedule/cronParser/enums.ts","schedule/ExecutionInfo.tsx","schedule/History.tsx","schedule/ColorSelector.tsx","shared/ButtonWIthLoading.tsx","schedule/ScheduleFormDialog.tsx","shared/NumberInput.tsx","schedule/cronParser/descriptions.ts","schedule/cronParser/convertToCronExpression.ts","schedule/CronButton.tsx","home/TasksProgress.tsx","schedule/ScheduleForm.tsx","schedule/Schedule.tsx","shared/Loading.tsx","store/StatusLabel.tsx","shared/LoadingCircle.tsx","store/PurchaseExecutions.tsx","shared/reduceExecutionsLeft.ts","store/Providers.tsx","store/Store.tsx","contracts/AddEditContract.tsx","contracts/StoragePersistAlert.tsx","assets/illustrations/contractBolt.svg","contracts/Contracts.tsx","assets/illustrations/lock.svg","connect/Connect.tsx","connect/Account.tsx","store/useProvidersLoader.ts","assets/illustrations/UnsupportedNetwork.tsx","connect/UnsupportedNetworkAlert.tsx","home/Contracts.tsx","home/Executions.tsx","home/Schedule.tsx","home/ScheduleHistory.tsx","home/Home.tsx","App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","overrides","MuiCssBaseline","body","background","MuiCard","root","borderRadius","props","elevation","Logo","ESection","viewBox","fill","xmlns","d","useStyles","makeStyles","createStyles","flexGrow","menuButton","marginRight","spacing","logo","height","display","hideMenu","title","marginTop","marginLeft","navButtons","flex","justifyContent","gap","navButton","padding","minWidth","paddingTop","fontSize","navLabel","toolbar","width","maxWidth","paddingLeft","appBar","alignItems","backgroundColor","boxShadow","scrolled","ENetwork","menuIndexes","Home","Schedule","Store","Contracts","Account","Layout","children","location","useLocation","useScrollTrigger","disableHysteresis","threshold","classes","AppBar","position","className","Toolbar","Typography","variant","color","BottomNavigation","showLabels","value","pathname","style","BottomNavigationAction","label","icon","component","Link","to","flexDirection","paddingBottom","environment","SCHEDULER_PROVIDERS","process","split","CONFIRMATIONS","parseInt","ER677_TOKENS","MINIMUM_TIME_BEFORE_EXECUTION","getExecutedTransaction","contractAddress","provider","window","execution","a","id","ExecutionState","ExecutionSuccessful","ExecutionFailed","includes","state","Nonexistent","console","time","blocksProcessed","addProcess","initialBlock","offset","processing","push","getEventIfExist","executeAt","Date","getTransaction","scheduledTx","scheduledBlockNumber","blockNumber","getBlockNumber","lastBlockNumber","getBlocksRateByMinute","blocksRate","scheduledDate","fromDate","blockNumberExecuteAtMid","getEstimatedBlockNumber","blockNumberExecuteAtLow","subSeconds","blockNumberExecuteAtUpper","addSeconds","lowWindowBlock","Math","trunc","max","upperWindowBlock","min","midBlockNumber","foundedEvent","counter","running","length","Promise","all","runResult","find","x","fromBlockNumber","toBlockNumber","getBlock","fromBlock","toBlock","timestamp","toDate","diffInMinutes","differenceInMinutes","date","initialBlockNumber","abi","eventInterface","utils","Interface","rifSchedulerContract","Contract","executeId","substr","filterByExecutionId","filters","Executed","filterTopics","topics","getBlockWithTransactions","searchingBlock","filteredTxs","transactions","filter","toLowerCase","data","tx","getTransactionReceipt","hash","receipt","log","logs","areEquals","result","parseLog","args","timeEnd","event","txHash","a1","a2","every","index","localbaseStorage","getItem","name","db","Localbase","config","debug","collection","doc","get","JSON","stringify","setItem","parse","set","localbasePersist","storeName","blacklist","getStorage","SupportedNetworks","RSKMainnet","RSKTestnet","NetworkName","NotSupported","NetworkExplorer","getExplorerTxLink","network","explorerUrl","URL","toString","ExecutionStateDescriptions","Scheduled","Overdue","Refunded","Cancelled","fromBigNumberToHms","secondsInput","days","div","divisor_for_hours","mod","hours","divisor_for_minutes","minutes","seconds","gt","toBigInt","trim","formatBigNumber","price","decimals","bigNumber","BigNumber","decimalPlaces","toFormat","getDatesFromCronExpression","startAtISO","cronExpression","cronQuantity","options","currentDate","parseISO","iterator","interval","cronParser","parseExpression","requestedISODates","next","i","toISOString","useSchedule","create","persist","isLoading","scheduleItems","updateStatus","executionId","contractInstance","getExecutionState","newState","isConfirmed","updateResult","contract","plan","address","toNumber","executedTransaction","contractInterface","ABI","parsedResult","decodeFunctionResult","contractMethod","join","executedTx","validateSchedule","scheduleItem","myAccountAddress","valueToTransfer","from","selectedPlan","plans","providerPlanIndex","executionsQuantity","isRecurrent","remainingExecutions","gte","message","severity","actionLabel","actionLink","encodedFunctionCall","encodeFunctionData","contractFields","estimateGas","estimatedGas","isInsidePlanGasLimit","gasLimit","minimumDate","executionDates","cronFields","expression","executionsIds","map","executionFactory","Object","entries","item","providerId","scheduleAndSave","onConfirmed","onFailed","scheduleMany","scheduledExecutionTransaction","schedule","wait","then","catch","error","finally","executionIds","executionsToSave","reduce","executionRelated","cancelExecution","cancelTransaction","refundExecution","requestExecutionRefund","refundTransaction","useProviders","providers","updateRemainingExecutions","planIndex","isPurchaseConfirmed","undefined","purchaseExecutions","purchasePlan","purchaseTransaction","load","storeProvider","getPlansCount","plansCount","getPlan","signer","tokenContract","token","symbol","tokenSymbol","tokenDecimals","useContracts","contracts","save","hyphensAndCamelCaseToWords","str","arr","newStr","charAt","toUpperCase","slice","replace","rLogin","RLogin","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","rpc","31","supportedChains","isRLoginConnected","localStorage","useConnector","account","isConnected","disconnect","clear","connect","rProvider","rDisconnect","Error","web3Provider","Web3Provider","listAccounts","getSigner","getNetwork","removeAllListeners","chainId","handleConnectionChanges","on","accounts","info","border","StatusLabel","Chip","size","colorPrimary","NetworkLabel","connectedToNetwork","displayNetwork","shortText","ECronArrayDefinition","ECronFieldOption","EMonths","EMidday","EWeekDay","rowStyles","ExecutionInfo","selectedExecutionId","onClose","useTheme","fullScreen","useMediaQuery","breakpoints","down","open","enqueueSnackbar","useSnackbar","shallow","contractId","scheduledTxExplorerAddressUrl","executedTxExplorerAddressUrl","useEffect","handleCopy","textToCopy","navigator","clipboard","writeText","Dialog","fullWidth","DialogTitle","DialogContent","TableContainer","Paper","action","hover","Table","aria-label","TableBody","StyledTableRow","StrongTableCell","scope","RegularTableCell","align","IconButton","onClick","target","href","rel","disabled","format","DialogActions","paddingRight","Button","withStyles","head","common","black","white","borderBottom","TableCell","fontWeight","TableRow","useRowStyles","part","row","borderLeft","Item","ListItem","button","ListItemText","secondary","Hidden","xsDown","Divider","orientation","flexItem","ListItemSecondaryAction","edge","History","useState","setSelectedExecutionId","isFromThisMonth","setIsFromThisMonth","firstDayCurrentMonth","getFullYear","getMonth","itemsGroupedByMonth","sort","firstItem","nextItem","compareAsc","prev","groupId","group","groupedEntries","Card","borderTopLeftRadius","borderTopRightRadius","CardHeader","CardContent","items","List","subheader","ListSubheader","RedRadio","red","checked","Radio","TealRadio","teal","YellowRadio","yellow","LightBlueRadio","lightBlue","OrangeRadio","orange","ColorSelector","onChange","selectedValue","setSelectedValue","handleChange","textAlign","whiteSpace","inputProps","wrapper","margin","buttonProgress","blue","top","left","ButtonWithLoading","CircularProgress","ScheduleFormDialog","alerts","onConfirm","hasErrors","alert","Alert","RouterLink","NumberInput","inputRef","other","getInputRef","onValueChange","values","thousandSeparator","isNumericString","allowNegative","decimalScale","prefix","WEEK_LIST","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","WEEK_LABEL","MONTHS_LIST","January","February","March","April","May","June","July","August","September","October","November","December","MONTHS_LABEL","cronConverter","Cron","CRON_DEFAULT","DEFAULT_CRON_FIELD","option","Day","hour","minute","midday","AM","weekDays","months","monthDays","description","cronstrue","verbose","convertToCronExpression","field","Custom","currentValueArray","Hour","PM","Minute","arrayFromWithStep","Array","keys","Month","DayWeek","Week","weeksRepetitionStart","currentValue","acc","curVal","concat","Year","fromArray","array","step","ETask","dialogPaper","CronButton","setOpen","fields","setFields","cronFieldOptions","repetition","getCronFieldOptions","cronError","setCronError","handleClose","handleFieldChange","fieldName","newValue","cron","handleEveryIncrement","increment","handleMonthDaysChange","day","handleMonthsChange","month","scroll","paper","aria-labelledby","disableTypography","main","contrastText","minHeight","TextField","hiddenLabel","InputProps","inputComponent","startAdornment","InputAdornment","endAdornment","FormControl","Select","MenuItem","week","clickable","flexWrap","padStart","reverse","helperText","borderBottomLeftRadius","borderBottomRightRadius","divider","DEFAULT_FIELDS","ScheduleForm","setAlerts","cronFieldFocused","setCronFieldFocused","handleContractFieldsChange","newFields","handleCronQuantityIncrement","quantity","handleClear","contractMethods","type","contractInputs","inputs","providerPlans","validateForm","isValid","isValidRecurrence","isContractFieldsValid","handleSchedule","isFormValid","selectedContract","handleScheduleAndSave","DateFnsUtils","FormControlLabel","marginBottom","control","Switch","inputVariant","KeyboardButtonProps","CustomTooltip","onFocus","onBlur","textOverflow","overflow","InputLabel","labelId","method","CardActions","tooltip","Tooltip","BorderLinearProgress","grey","bar","LinearProgress","Loading","purchasing","active","inactive","classStatus","useCircleStyles","bottom","animationDuration","circle","strokeLinecap","CustomCircularProgress","thickness","disableShrink","LoadingCircle","PurchaseExecutions","buyingExecutions","setBuyingExecutions","pricePerExecution","Slider","valueLabelDisplay","marks","BigTableCell","mul","handleBuyClick","BIG_ZERO","executionsLeft","accumulatedPlans","currentPlan","add","expanderHeading","typography","pxToRem","expanderSecondaryHeading","text","expanderRoot","content","Providers","expanded","setExpanded","setSelectedPlan","networkProviders","panel","Fragment","Accordion","isExpanded","AccordionSummary","expandIcon","aria-controls","cursor","AccordionDetails","AddEditContract","hideButton","initialFields","endIcon","autoFocus","multiline","rows","anonymous","indexed","internalType","outputs","stateMutability","StoragePersistAlert","isPersistStorageAvailable","storage","showAlert","setShowAlert","enableClicked","setEnableClicked","persisted","handleEnable","isPersisted","ContractButton","CardActionArea","contractSvg","backgroundPosition","backgroundSize","gutterBottom","editing","setEditing","networkContracts","gridTemplateColumns","gridAutoRows","gridGap","Connect","handleConnect","useCallback","ms","resolve","setTimeout","timeout","p","race","backgroundImage","lockSvg","backgroundRepeat","overflowEllipsis","ListItemIcon","smUp","useProvidersLoader","loadProviders","forEach","RIFScheduler","supportedER677Tokens","UnsupportedNetwork","data-name","cx","cy","r","UnsupportedNetworkAlert","avatar","colors","blueGrey","rest","Grid","container","justify","Avatar","Executions","executionsLeftResult","accumulated","providerExecutionsLeft","scheduledExecutions","networkScheduledExecutions","ScheduleHistory","avatarReady","green","TASKS","link","linkLabel","TasksProgress","totalTasks","resultExecutionsLeft","currentTask","ReadyToSchedule","lte","RegisterContracts","Box","mt","PublicRoutes","exact","path","ConnectedRoutes","App","notistackRef","useRef","ThemeProvider","CssBaseline","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cafe5a7.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport primary from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          background: '#faf9f9 !important',\n        },\n      },\n    },\n    MuiCard: {\n      root: {\n        borderRadius: 20,\n      }\n    }\n  },\n  props: {\n    MuiCard: {\n      elevation: 0\n    }\n  }\n});\n\nexport default theme","function Logo(props: any) {\n  return (\n    <svg\n      viewBox=\"0 0 464 306\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M240.7 254.8V138.3l23.9-2.9 3.7 18.3c7.8-12.5 19.2-18.8 34-18.8 3.1 0 5.7.1 7.6.4l-.4 23.8c-2.9-.4-5.9-.7-9-.7-10.5 0-18.3 2.8-23.5 8.4-5.2 5.6-7.8 13.3-7.8 23.3v64.8h-28.5v-.1z\"\n        fill=\"#000\"\n      />\n      <path\n        d=\"M78.4 118.3V7.5S42.5 25.4 42.5 63.4s35.9 54.9 35.9 54.9z\"\n        fill=\"#008CFF\"\n      />\n      <path\n        d=\"M78.4 7.5s35.9 17.9 35.9 55.9-35.9 55-35.9 55V7.5z\"\n        fill=\"#0CBFE8\"\n      />\n      <path\n        d=\"M162.1 170.4l49.3-28s-17-11.4-33.9-1.8-15.4 29.8-15.4 29.8z\"\n        fill=\"#008CFF\"\n      />\n      <path\n        d=\"M211.4 142.4s1.1 20.5-15.8 30.1c-16.9 9.6-33.5-2-33.5-2l49.3-28.1z\"\n        fill=\"#0CBFE8\"\n      />\n      <path\n        d=\"M213.7 138c-.9-.5-21.7-11.4-39.2-1.3-14.1 8.1-16.9 24.4-17.4 31.2l-6.5 3.7c-3.2-3.2-7.7-5.2-12.6-5.2-4.8 0-9.2 1.9-12.4 5l-29.8-17.2c.3-1.4.5-2.8.5-4.3 0-8.2-5.5-15.1-13-17.3V122c8.7-5.6 36.2-25.8 36.2-58.1 0-37.3-37-60.6-38.6-61.6L78.3.7l-2.6 1.6c-1.6 1-38.6 24.3-38.6 61.6 0 32.2 27.5 52.5 36.2 58.1v10.6c-7.5 2.2-13 9.1-13 17.3 0 1.5.2 2.9.5 4.3L31 171.4c-3.2-3.1-7.6-5-12.4-5-9.9 0-18 8.1-18 18 0 8.2 5.5 15.1 13 17.3v35.7c-7.5 2.2-13 9.1-13 17.3 0 9.9 8.1 18 18 18 5.3 0 10-2.3 13.3-5.9l28.9 16.7c-.3 1.4-.5 2.8-.5 4.3 0 9.9 8.1 18 18 18s18-8.1 18-18c0-1.5-.2-2.9-.5-4.3l28.9-16.7c3.3 3.6 8 5.9 13.3 5.9 9.9 0 18-8.1 18-18 0-8.2-5.5-15.1-13-17.3v-35.7c7.5-2.2 13-9.1 13-17.3 0-1.4-.2-2.9-.5-4.2l6.5-3.7c3.8 1.8 11.3 4.7 19.8 4.7 5.2 0 10.7-1.1 16.1-4.2 17.5-10.1 18.5-33.6 18.5-34.6l.1-3.1-2.8-1.3zM143 190.8c-1.4 1.1-3.1 1.7-5 1.7-1 0-1.9-.2-2.8-.5-.8-.3-1.5-.7-2.1-1.2-1.6-1.2-2.7-3.1-3-5.2 0-.4-.1-.8-.1-1.2 0-.3 0-.7.1-1 .4-2.9 2.3-5.4 5-6.5.9-.4 1.9-.6 2.9-.6 1.1 0 2.2.2 3.1.6 2.9 1.2 4.9 4.1 4.9 7.4 0 .5 0 .9-.1 1.3-.3 2.2-1.3 3.9-2.9 5.2zm3.1 63.9c0 4.4-3.6 8-8 8-1.5 0-3-.4-4.2-1.2-2.3-1.4-3.8-3.9-3.8-6.8v-.2c0-.9.2-1.7.5-2.5.5-1.4 1.4-2.7 2.6-3.6 1-.8 2.2-1.4 3.6-1.6.4-.1.9-.1 1.4-.1 1.9 0 3.6.7 5 1.7 1.7 1.5 2.9 3.8 2.9 6.3zm-13-17.2c-2.4.7-4.7 1.9-6.6 3.5L96 223.4c.2-1.1.3-2.3.3-3.5 0-1.7-.3-3.4-.7-5l30-17.3c2.1 2 4.6 3.5 7.4 4.3v35.6h.1zm-54.7 58.3c-4 0-7.3-2.9-7.9-6.8-.1-.4-.1-.8-.1-1.2 0-3.4 2.1-6.2 5-7.4.9-.4 2-.6 3-.6 1.1 0 2.1.2 3 .6 2.9 1.2 5 4.1 5 7.4 0 .4 0 .8-.1 1.2-.6 3.9-3.9 6.8-7.9 6.8zm-17.6-72.4L30.3 241c-1.9-1.6-4.1-2.8-6.6-3.5v-35.7c2.9-.8 5.4-2.3 7.5-4.3l30 17.3c-.5 1.6-.7 3.3-.7 5.1-.1 1.1 0 2.3.3 3.5zm-34 31.3c0 2.9-1.5 5.4-3.8 6.8-1.2.8-2.7 1.2-4.2 1.2-4.4 0-8-3.6-8-8 0-2.5 1.2-4.8 3-6.3 1.4-1.1 3.1-1.7 5-1.7.5 0 .9 0 1.4.1 1.3.2 2.5.8 3.6 1.6 1.2.9 2.1 2.2 2.6 3.6.3.8.5 1.6.5 2.5-.1.1-.1.2-.1.2zm-16.1-70.2c0-4.4 3.6-8 8-8 1 0 2 .2 2.9.6 2.6 1 4.6 3.4 5 6.3.1.4.1.8.1 1.2 0 .4 0 .8-.1 1.2-.3 2.1-1.4 3.9-3 5.2-.6.5-1.3.9-2 1.1-.9.4-1.9.6-3 .6-1.9 0-3.6-.6-5-1.7-1.7-1.7-2.9-4-2.9-6.5zm62.7-40.8c1.4-1.1 3.1-1.7 5-1.7s3.6.7 5 1.7c1.6 1.3 2.7 3.1 3 5.1.1.4.1.8.1 1.2 0 2.5-1.2 4.8-3.1 6.3-.6.5-1.3.9-2 1.1-.9.4-1.9.6-3 .6-1 0-2-.2-3-.6-.7-.3-1.4-.7-2-1.1-1.9-1.5-3.1-3.7-3.1-6.3 0-.4 0-.8.1-1.2.3-2 1.4-3.8 3-5.1zm13 76.4c-.1 2.4-1.3 4.6-3 6-.4.3-.8.5-1.2.8-1.1.6-2.4 1-3.8 1-1.3 0-2.6-.3-3.7-.9-.4-.2-.9-.5-1.2-.8-1.8-1.4-3-3.6-3-6.1v-.2c0-.7.1-1.4.3-2.1.4-1.7 1.4-3.2 2.8-4.2.9-.7 1.9-1.2 3-1.5.6-.2 1.3-.3 2-.3s1.4.1 2.1.3c1.1.3 2 .8 2.9 1.4 1.3 1.1 2.3 2.5 2.7 4.1.2.7.3 1.4.3 2.2-.2.1-.2.2-.2.3zm34.2-40c-.3 1.4-.5 2.8-.5 4.3s.2 3 .6 4.5l-30.3 17.5c-2-1.8-4.3-3.1-7-3.9v-35.2c2.9-.8 5.4-2.3 7.5-4.3l29.7 17.1zm-73.5-116c0-26.4 23.3-45.6 31.2-51.3 8 5.7 31.2 24.8 31.2 51.3 0 22.1-16.4 38.2-26.3 45.8V68.1c0-2.8-2.2-5-5-5-2.7 0-5 2.2-5 5V110c-9.7-7.7-26.1-23.7-26.1-45.9zM65.9 163c2.1 2 4.6 3.5 7.5 4.3v35.2c-2.6.7-4.9 2-6.9 3.8l-30.3-17.5c.3-1.4.5-2.8.5-4.3s-.2-2.9-.5-4.3L65.9 163zm-29.5 94.9c.2-1 .3-2.1.3-3.1 0-1.9-.3-3.8-.9-5.5l29.6-17c2.2 2.3 4.9 4 8 4.9v33.4c-2.9.8-5.4 2.3-7.5 4.4l-29.5-17.1zm54.5 17c-2.1-2-4.6-3.5-7.5-4.4v-33.4c3.1-.9 5.9-2.6 8-4.9l29.5 17c-.6 1.7-.9 3.6-.9 5.5 0 1.1.1 2.1.3 3.1l-29.4 17.1zm102-106.4c-6.6 3.8-14.1 3.1-19.7 1.6l9.9-5.7c2.4-1.4 3.2-4.4 1.8-6.8-1.4-2.4-4.4-3.2-6.8-1.8l-9.9 5.7c1.5-5.6 4.6-12.4 11.2-16.2 9.5-5.5 21.2-2 26.6.1-.7 5.7-3.5 17.6-13.1 23.1zM330.5 108.6c0-9.7 5.4-14.6 16.2-14.6 10.8 0 16.2 4.9 16.2 14.6 0 4.6-1.4 8.2-4.1 10.8-2.7 2.6-6.8 3.9-12.2 3.9-10.7 0-16.1-4.9-16.1-14.7zm31.1 146.2h-29.8V136.9h29.8v117.9zM453.4 159.3h-25.8v95.5h-29.8v-95.5h-16.4v-14.4l16.4-8v-8c0-12.5 3.1-21.6 9.2-27.3 6.1-5.7 16-8.6 29.5-8.6 10.3 0 19.5 1.5 27.5 4.6l-7.6 21.9c-6-1.9-11.5-2.8-16.6-2.8-4.2 0-7.3 1.3-9.2 3.8-1.9 2.5-2.8 5.7-2.8 9.6v6.8h25.8v22.4h-.2z\"\n        fill=\"#000\"\n      />\n    </svg>\n  )\n}\n\nexport default Logo","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Logo from \"../assets/Logo\";\nimport { Link } from \"react-router-dom\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ScheduleIcon from \"@material-ui/icons/EventAvailable\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport ContractsIcon from \"@material-ui/icons/OfflineBolt\";\nimport AccountIcon from \"@material-ui/icons/AccountCircle\";\n\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport ScheduleOutlinedIcon from \"@material-ui/icons/EventAvailableOutlined\";\nimport StoreOutlinedIcon from \"@material-ui/icons/StoreOutlined\";\nimport ContractsOutlinedIcon from \"@material-ui/icons/OfflineBoltOutlined\";\nimport AccountOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\n\nimport { useLocation } from \"react-router-dom\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    logo: ({ hideMenu }: any) => ({\n      height: 32,\n      \"@media (max-width: 360px)\": {\n        display: hideMenu ? \"initial\" : \"none\",\n      },\n    }),\n    title: ({ hideMenu }: any) => ({\n      marginTop: 8,\n      marginLeft: 5,\n      flexGrow: 1,\n      \"@media (max-width: 500px)\": {\n        display: hideMenu ? \"initial\" : \"none\",\n      },\n    }),\n    navButtons: {\n      display: \"flex\",\n      flex: 1,\n      justifyContent: \"flex-end\",\n      gap: \"5px\",\n    },\n    navButton: {\n      padding: 0,\n      minWidth: 60,\n      paddingTop: \"0px !important\",\n      fontSize: \"0.75rem !important\",\n    },\n    navLabel: {\n      fontSize: \"0.75rem !important\",\n    },\n    toolbar: {\n      display: \"flex\",\n      flex: 1,\n      width: \"100%\",\n      maxWidth: 800,\n      padding: 0,\n      paddingLeft: 12,\n    },\n    appBar: ({ scrolled }) => ({\n      display: \"flex\",\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#faf9f9\",\n      padding: 0,\n      boxShadow: scrolled ? \"0px 5px 20px -5px rgb(0 0 0 / 25%)\" : \"none\",\n    }),\n  })\n);\n\nenum ESection {\n  Home = 0,\n  Schedule = 1,\n  Store = 2,\n  Contracts = 3,\n  Account = 4,\n}\n\nconst menuIndexes: { [key: string]: number } = {\n  \"/\": ESection.Home,\n  \"/schedule\": ESection.Schedule,\n  \"/store\": ESection.Store,\n  \"/contracts\": ESection.Contracts,\n  \"/account\": ESection.Account,\n};\n\nconst Layout: React.FC<{ hideMenu?: boolean }> = ({ children, hideMenu }) => {\n  const location = useLocation();\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const classes = useStyles({ hideMenu, scrolled });\n\n  return (\n    <>\n      <AppBar position=\"sticky\" className={classes.appBar} elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <Logo className={classes.logo} />\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            color=\"textPrimary\"\n          >\n            scheduler\n          </Typography>\n          {!hideMenu && (\n            <div className={classes.navButtons}>\n              <BottomNavigation\n                showLabels\n                value={menuIndexes[location.pathname]}\n                style={{ background: \"transparent\" }}\n              >\n                <BottomNavigationAction\n                  label=\"Home\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Home ? (\n                      <HomeIcon />\n                    ) : (\n                      <HomeOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/\"\n                />\n                <BottomNavigationAction\n                  label=\"Schedule\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Schedule ? (\n                      <ScheduleIcon />\n                    ) : (\n                      <ScheduleOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/schedule\"\n                />\n                <BottomNavigationAction\n                  label=\"Store\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Store ? (\n                      <StoreIcon />\n                    ) : (\n                      <StoreOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/store\"\n                />\n                <BottomNavigationAction\n                  label=\"Contracts\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Contracts ? (\n                      <ContractsIcon />\n                    ) : (\n                      <ContractsOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/contracts\"\n                />\n                <BottomNavigationAction\n                  label=\"Account\"\n                  icon={\n                    menuIndexes[location.pathname] === ESection.Account ? (\n                      <AccountIcon />\n                    ) : (\n                      <AccountOutlinedIcon />\n                    )\n                  }\n                  component={Link}\n                  classes={{\n                    root: classes.navButton,\n                    label: classes.navLabel,\n                  }}\n                  to=\"/account\"\n                />\n              </BottomNavigation>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <div\n        style={{\n          padding: 15,\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          paddingBottom: 60,\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import { ExecutionState } from \"@rsksmart/rif-scheduler-sdk\"\n\nexport enum ENetwork {\n  NotSupported = -1,\n  RSKMainnet = 30,\n  RSKTestnet = 31,\n}\n\nexport const SupportedNetworks = [ENetwork.RSKMainnet, ENetwork.RSKTestnet]\n\nexport const NetworkName = {\n  [ENetwork.NotSupported]: \"Unsupported network\",\n  [ENetwork.RSKMainnet]: \"RSK Mainnet\",\n  [ENetwork.RSKTestnet]: \"RSK Testnet\"\n}\n\nexport const NetworkExplorer = {\n  [ENetwork.NotSupported]: null,\n  [ENetwork.RSKMainnet]: \"https://explorer.rsk.co/\",\n  [ENetwork.RSKTestnet]: \"https://explorer.testnet.rsk.co/\"\n}\n\nexport const getExplorerTxLink = (hash: string, network: ENetwork) => {\n  const explorerUrl = NetworkExplorer[network]\n  if (!explorerUrl)\n    return null\n\n  return new URL(`/tx/${hash}`, explorerUrl).toString()\n}\n\nexport const ExecutionStateDescriptions = {\n  [ExecutionState.Nonexistent]: \"Not scheduled\",\n  [ExecutionState.Scheduled]: \"Scheduled\",\n  [ExecutionState.ExecutionSuccessful]: \"Successful\",\n  [ExecutionState.ExecutionFailed]: \"Failed\",\n  [ExecutionState.Overdue]: \"Overdue\",\n  [ExecutionState.Refunded]: \"Refunded\",\n  [ExecutionState.Cancelled]: \"Cancelled\",\n};\n","const environment = {\n  SCHEDULER_PROVIDERS: (\n    process.env.REACT_APP_SCHEDULER_PROVIDERS as string\n  ).split(\";\"),\n  CONFIRMATIONS: parseInt(process.env.REACT_APP_CONFIRMATIONS as string),\n  ER677_TOKENS: (process.env.REACT_APP_ER677_TOKENS as string).split(\";\"),\n  MINIMUM_TIME_BEFORE_EXECUTION: parseInt(\n    process.env.REACT_APP_MINIMUM_TIME_BEFORE_EXECUTION as string\n  ),\n};\n\nexport default environment;\n","import { Contract, utils } from \"ethers\";\nimport { providers } from \"ethers\";\nimport { addSeconds, differenceInMinutes, subSeconds } from \"date-fns\"\nimport { IScheduleItem } from \"../schedule/useSchedule\";\nimport { ExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\n\nconst PROMISE_PARALLEL_NUMBER = 4 * 4\n\nexport interface IExecutedEventInfo {\n    id: string;\n    result: string,\n    success: boolean\n}\n\nexport interface IExecutedTransaction {\n    event: IExecutedEventInfo;\n    txHash: string;\n}\n\nconst getExecutedTransaction = async (contractAddress: string, provider: providers.Provider, window: number, execution: IScheduleItem) => {\n    if (\n        !execution.id ||\n        ![ExecutionState.ExecutionSuccessful, ExecutionState.ExecutionFailed]\n            .includes(execution.state ?? ExecutionState.Nonexistent)\n    ) {\n        return null\n    }\n    \n    console.time(\"getExecutionResult\")\n\n    const blocksProcessed: number[] = []\n    const addProcess = (initialBlock: number, offset: number) => {\n        const processing = initialBlock + offset\n        if (!blocksProcessed.includes(processing)) {\n            blocksProcessed.push(processing)\n            return getEventIfExist(provider, processing, contractAddress, execution)\n        }\n    }\n\n    const executeAt = new Date(execution.executeAt)\n\n    const scheduledTx = await provider.getTransaction(execution.scheduledTx!)\n\n    const scheduledBlockNumber = scheduledTx.blockNumber!\n    const lastBlockNumber = await provider.getBlockNumber();\n    \n    const { \n        blocksRate,\n        fromDate: scheduledDate \n    } = await getBlocksRateByMinute(provider, scheduledBlockNumber, lastBlockNumber)\n    \n    const blockNumberExecuteAtMid = getEstimatedBlockNumber(executeAt, scheduledDate, scheduledBlockNumber, blocksRate)\n    const blockNumberExecuteAtLow = getEstimatedBlockNumber(subSeconds(executeAt, window), scheduledDate, scheduledBlockNumber, blocksRate)\n    const blockNumberExecuteAtUpper = getEstimatedBlockNumber(addSeconds(executeAt, window), scheduledDate, scheduledBlockNumber, blocksRate)\n    \n    const lowWindowBlock = Math.trunc(Math.max(blockNumberExecuteAtLow, scheduledBlockNumber))\n    const upperWindowBlock = Math.trunc(Math.min(blockNumberExecuteAtUpper, lastBlockNumber))\n    const midBlockNumber = Math.trunc(blockNumberExecuteAtMid)\n\n    let foundedEvent: IExecutedTransaction | null = null\n    let counter = 0;\n    let running = []\n    while(!foundedEvent) {        \n        running.push(addProcess(lowWindowBlock, counter))\n\n        running.push(addProcess(midBlockNumber, -counter))\n        \n        running.push(addProcess(midBlockNumber, counter))\n        \n        running.push(addProcess(upperWindowBlock, -counter))\n\n        if (running.length === PROMISE_PARALLEL_NUMBER)\n        {\n            const runResult = await Promise.all(running)\n    \n            foundedEvent = runResult.find(x => x ? true : false) ?? null\n\n            running = []\n        }\n\n        counter++\n    }\n\n    return foundedEvent\n}\n\nconst getBlocksRateByMinute = async (provider: providers.Provider, fromBlockNumber: number, toBlockNumber: number) => {\n    const fromBlock = await provider.getBlock(fromBlockNumber)\n    const toBlock = await provider.getBlock(toBlockNumber)\n    const fromDate = new Date(+fromBlock.timestamp * 1000)\n    const toDate = new Date(+toBlock.timestamp * 1000)\n\n    const diffInMinutes = differenceInMinutes(toDate, fromDate)\n    const diffInBlocks = toBlockNumber - fromBlockNumber\n    const blocksRate = diffInBlocks / diffInMinutes\n\n    return { blocksRate, fromBlock, toBlock, fromDate, toDate }\n}\n\nconst getEstimatedBlockNumber = (date: Date, fromDate: Date, initialBlockNumber: number, blocksRate: number) => {\n    return initialBlockNumber + differenceInMinutes(date, fromDate) * blocksRate\n}\n\nconst getEventIfExist = async (provider: providers.Provider, blockNumber: number, contractAddress: string, execution: IScheduleItem): Promise<IExecutedTransaction | null> => {\n    const abi = [ \"event Executed(bytes32 indexed id, bool success, bytes result)\" ];\n    const eventInterface = new utils.Interface(abi);\n    const rifSchedulerContract = new Contract(\n        contractAddress,\n        abi,\n        provider\n      );\n    \n    const executeId = execution.id?.substr(2)\n    const filterByExecutionId = rifSchedulerContract.filters.Executed(execution.id);\n    const filterTopics = filterByExecutionId.topics as string[]\n\n    const searchingBlock = await provider.getBlockWithTransactions(blockNumber)\n\n    const filteredTxs = searchingBlock.transactions\n       .filter(\n            x => x.to?.toLowerCase() === contractAddress.toLowerCase() && \n                 x.data.includes(executeId!)\n    )\n\n    for (const tx of filteredTxs) {\n        const receipt = await provider.getTransactionReceipt(tx.hash)\n\n        const log = receipt.logs.find(x => areEquals(x.topics, filterTopics))\n\n        if (log) {\n            const result: IExecutedEventInfo = eventInterface.parseLog(log).args as any\n            console.timeEnd(\"getExecutionResult\")\n            console.log(\"getExecutionResult\", result)\n            return {\n                event: result,\n                txHash: tx.hash\n            }\n        }\n    }\n\n    return null\n}\n\nconst areEquals = (a1: string[], a2: string[]) => a1.length === a2.length && a1.every((value, index) => value === a2[index])\n\nexport default getExecutedTransaction","import Localbase from \"localbase\";\n\ntype StateStorage = {\n  getItem: (name: string) => string | null | Promise<string | null>;\n  setItem: (name: string, value: string) => void | Promise<void>;\n};\n\nconst localbaseStorage: StateStorage = {\n  async getItem(name: string) {\n    let db = new Localbase(\"db\");\n    db.config.debug = false\n\n    const data = await db.collection(\"zustand\").doc(name).get();\n\n    return JSON.stringify(data);\n  },\n\n  async setItem(name: string, value: string) {\n    let db = new Localbase(\"db\");\n    db.config.debug = false\n\n    const data = JSON.parse(value);\n\n    await db.collection(\"zustand\").doc(name).set(data);\n  },\n};\n\nconst localbasePersist = (storeName: string, blacklist?: any[]) => {\n  return {\n    name: storeName, // unique name\n    blacklist: blacklist,\n    getStorage: () => localbaseStorage,\n  };\n};\n\nexport default localbasePersist;\n","import { BigNumber as EthBigNumber } from \"@ethersproject/bignumber\";\nimport BigNumber from \"bignumber.js\";\n\nexport const fromNumberToHms = (secondsInput: number) => {\n  const days = Math.floor(secondsInput / (60 * 60 * 24));\n\n  const divisor_for_hours = secondsInput % (60 * 60 * 24);\n\n  const hours = Math.floor(divisor_for_hours / (60 * 60));\n\n  const divisor_for_minutes = divisor_for_hours % (60 * 60);\n  const minutes = Math.floor(divisor_for_minutes / 60);\n\n  const divisor_for_seconds = divisor_for_minutes % 60;\n  const seconds = Math.ceil(divisor_for_seconds);\n\n  let result = \"\";\n  if (days > 0) result += `${days}d `;\n  if (hours > 0) result += `${hours}h `;\n  if (minutes > 0) result += `${minutes}m `;\n  if (seconds > 0) result += `${seconds}s `;\n\n  return result.trim();\n};\n\nexport const fromBigNumberToHms = (secondsInput: EthBigNumber) => {\n  const days = secondsInput.div(60 * 60 * 24);\n\n  const divisor_for_hours = secondsInput.mod(60 * 60 * 24);\n\n  const hours = divisor_for_hours.div(60 * 60);\n\n  const divisor_for_minutes = divisor_for_hours.mod(60 * 60);\n  const minutes = divisor_for_minutes.div(60);\n\n  const divisor_for_seconds = divisor_for_minutes.mod(60);\n  const seconds = divisor_for_seconds;\n\n  let result = \"\";\n  if (days.gt(0)) result += `${days.toBigInt().toString()}d `;\n  if (hours.gt(0)) result += `${hours.toBigInt().toString()}h `;\n  if (minutes.gt(0)) result += `${minutes.toBigInt().toString()}m `;\n  if (seconds.gt(0)) result += `${seconds.toBigInt().toString()}s `;\n\n  return result.trim();\n};\n\nexport const formatBigNumber = (price: EthBigNumber, decimals: number) => {\n  const bigNumber = new BigNumber(price.toString()).div(10 ** decimals);\n\n  if (bigNumber.decimalPlaces() > 0) {\n    return bigNumber.toFormat(5);\n  }\n\n  return bigNumber.toFormat();\n};\n","import cronParser from \"cron-parser\";\nimport { parseISO } from \"date-fns\";\n\nconst getDatesFromCronExpression = (\n  startAtISO: string,\n  cronExpression: string,\n  cronQuantity: number\n) => {\n  const options = {\n    currentDate: parseISO(startAtISO),\n    iterator: true,\n  };\n  const interval = cronParser.parseExpression(cronExpression, options);\n  const requestedISODates: string[] = [];\n\n  let next = startAtISO; // first execution\n\n  for (let i = 0; i < cronQuantity; i++) {\n    requestedISODates.push(next);\n\n    const nextDate: any = interval.next();\n    next = nextDate.value.toDate().toISOString();\n  }\n\n  return requestedISODates;\n};\n\nexport default getDatesFromCronExpression;\n","import { executionFactory, ExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\nimport { addSeconds, parseISO } from \"date-fns\";\nimport { BigNumber, ContractTransaction, utils } from \"ethers\";\nimport create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { IContract } from \"../contracts/useContracts\";\nimport { IPlan, IProvider } from \"../store/useProviders\";\nimport environment from \"../shared/environment\";\nimport getExecutedTransaction from \"../shared/getExecutionResult\";\nimport localbasePersist from \"../shared/localbasePersist\";\nimport { ENetwork, ExecutionStateDescriptions } from \"../shared/types\";\nimport { IScheduleFormDialogAlert } from \"./ScheduleFormDialog\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport getDatesFromCronExpression from \"../shared/getDatesFromCronExpression\";\nimport { ICronField } from \"./cronParser/convertToCronExpression\";\n\nexport interface IScheduleItem {\n  id?: string;\n  scheduledTx?: string;\n  title: string;\n  network: ENetwork;\n  executeAt: string;\n  providerId: string;\n  providerPlanIndex: string;\n  contractId: string;\n  contractMethod: string;\n  contractFields: string[];\n  state?: ExecutionState;\n  color?: string;\n  result?: string;\n  executedTx?: string;\n  isConfirmed?: boolean;\n  isRecurrent?: boolean;\n  cronFields?: ICronField;\n  cronQuantity?: string;\n}\n\nexport interface IUseSchedule {\n  isLoading: boolean;\n  scheduleItems: {\n    [id: string]: IScheduleItem;\n  };\n  updateStatus: (executionId: string, provider: IProvider) => Promise<void>;\n  updateResult: (\n    execution: IScheduleItem,\n    contract: IContract,\n    plan: IPlan,\n    provider: IProvider\n  ) => Promise<void>;\n  validateSchedule: (\n    scheduleItem: IScheduleItem,\n    contract: IContract,\n    provider: IProvider,\n    myAccountAddress: string\n  ) => Promise<IScheduleFormDialogAlert[]>;\n  scheduleAndSave: (\n    scheduleItem: IScheduleItem,\n    contract: IContract,\n    provider: IProvider,\n    myAccountAddress: string,\n    onConfirmed: () => void,\n    onFailed: (message: string) => void\n  ) => Promise<void>;\n  cancelExecution: (\n    executionId: string,\n    provider: IProvider,\n    onConfirmed: () => void,\n    onFailed: (message: string) => void\n  ) => Promise<void>;\n  refundExecution: (\n    executionId: string,\n    provider: IProvider,\n    onConfirmed: () => void,\n    onFailed: (message: string) => void\n  ) => Promise<void>;\n}\n\nconst useSchedule = create<IUseSchedule>(\n  persist(\n    (set, get) => ({\n      isLoading: false,\n      scheduleItems: {},\n      updateStatus: async (executionId: string, provider: IProvider) => {\n        set(() => ({\n          isLoading: true,\n        }));\n\n        const newState = (await provider.contractInstance.getExecutionState(\n          executionId\n        )) as ExecutionState;\n\n        set((state) => ({\n          scheduleItems: {\n            ...state.scheduleItems,\n            [executionId]: {\n              ...state.scheduleItems[executionId],\n              isConfirmed: true,\n              state: newState,\n            },\n          },\n          isLoading: false,\n        }));\n      },\n      updateResult: async (\n        execution: IScheduleItem,\n        contract: IContract,\n        plan: IPlan,\n        provider: IProvider\n      ) => {\n        set(() => ({\n          isLoading: true,\n        }));\n\n        const executedTransaction = await getExecutedTransaction(\n          provider.address,\n          provider.contractInstance.provider as any,\n          plan.window.toNumber(),\n          execution\n        );\n\n        const contractInterface = new utils.Interface(contract.ABI);\n\n        const parsedResult =\n          executedTransaction &&\n          execution.state === ExecutionState.ExecutionSuccessful\n            ? contractInterface\n                .decodeFunctionResult(\n                  execution.contractMethod,\n                  executedTransaction.event.result\n                )\n                .join(\", \")\n            : executedTransaction?.event.result;\n\n        set((state) => ({\n          scheduleItems: {\n            ...state.scheduleItems,\n            [execution.id!]: {\n              ...state.scheduleItems[execution.id!],\n              executedTx: executedTransaction?.txHash,\n              result: parsedResult,\n            },\n          },\n          isLoading: false,\n        }));\n      },\n      validateSchedule: async (\n        scheduleItem: IScheduleItem,\n        contract: IContract,\n        provider: IProvider,\n        myAccountAddress: string\n      ): Promise<IScheduleFormDialogAlert[]> => {\n        set(() => ({\n          isLoading: true,\n        }));\n\n        // TODO: add an input form for this value\n        const valueToTransfer = BigNumber.from(0);\n\n        const selectedPlan = provider.plans[+scheduleItem.providerPlanIndex];\n\n        const result: IScheduleFormDialogAlert[] = [];\n\n        const executionsQuantity = scheduleItem.isRecurrent\n          ? +scheduleItem.cronQuantity!\n          : 1;\n\n        // validate purchased execution\n        const hasAnExecutionLeft =\n          selectedPlan.remainingExecutions?.gte(executionsQuantity);\n        if (!hasAnExecutionLeft) {\n          result.push({\n            message: `You don't have ${formatBigNumber(\n              BigNumber.from(executionsQuantity),\n              0\n            )} ${executionsQuantity === 1 ? \"execution\" : \"executions\"} left`,\n            severity: \"error\",\n            actionLabel: \"Purchase more\",\n            actionLink: \"/store\",\n          });\n        }\n\n        const encodedFunctionCall = new utils.Interface(\n          contract.ABI\n        ).encodeFunctionData(\n          scheduleItem.contractMethod,\n          scheduleItem.contractFields\n        );\n\n        // if gasEstimation is undefined warn the user that the execution might fail\n        const estimatedGas = await provider.contractInstance.estimateGas(\n          contract.address,\n          encodedFunctionCall\n        );\n        if (!estimatedGas) {\n          result.push({\n            message:\n              \"We couldn't estimate the gas for the execution you want to schedule. \" +\n              \"Hint: Make sure that all the parameters are correct and \" +\n              \"that you will comply the execution requirements at the time of its execution.\",\n            severity: \"warning\",\n          });\n        }\n\n        // estimatedGas is lower than the gas limit for the selected plan\n        const isInsidePlanGasLimit = selectedPlan.gasLimit.gte(\n          estimatedGas ?? 0\n        );\n        if (estimatedGas && !isInsidePlanGasLimit) {\n          result.push({\n            message:\n              `The selected plan has a gas limit of ${formatBigNumber(\n                selectedPlan.gasLimit,\n                0\n              )} which is lower that ` +\n              `our estimation for this execution (${formatBigNumber(\n                estimatedGas,\n                0\n              )}).`,\n            severity: \"warning\",\n          });\n        }\n\n        // validate minimum date/time\n        const minimumDate = addSeconds(\n          new Date(),\n          environment.MINIMUM_TIME_BEFORE_EXECUTION\n        );\n\n        if (parseISO(scheduleItem.executeAt) <= minimumDate) {\n          result.push({\n            message: `You need to schedule at least ${fromBigNumberToHms(\n              BigNumber.from(environment.MINIMUM_TIME_BEFORE_EXECUTION)\n            )} in advance.`,\n            severity: \"error\",\n          });\n        }\n\n        // validate existing scheduled execution\n        const executionDates = scheduleItem.isRecurrent\n          ? getDatesFromCronExpression(\n              scheduleItem.executeAt,\n              scheduleItem.cronFields?.expression!,\n              +scheduleItem.cronQuantity!\n            )\n          : [scheduleItem.executeAt];\n\n        const executionsIds = executionDates.map((executeAt) => {\n          const executionRelated = executionFactory(\n            scheduleItem.providerPlanIndex,\n            contract.address,\n            encodedFunctionCall,\n            parseISO(executeAt),\n            valueToTransfer,\n            myAccountAddress\n          );\n\n          return executionRelated.id;\n        });\n\n        const existing =\n          Object.entries(get().scheduleItems).find(\n            ([id, item]) =>\n              executionsIds.includes(id) &&\n              item.providerId === scheduleItem.providerId\n          ) ?? [];\n\n        if (existing.length > 0) {\n          const message = scheduleItem.isRecurrent\n            ? \"One or more executions are already scheduled.\"\n            : \"This execution is already scheduled\";\n\n          result.push({\n            message: message,\n            severity: \"error\",\n          });\n        }\n\n        set(() => ({\n          isLoading: false,\n        }));\n\n        return result;\n      },\n      scheduleAndSave: async (\n        scheduleItem: IScheduleItem,\n        contract: IContract,\n        provider: IProvider,\n        myAccountAddress: string,\n        onConfirmed: () => void,\n        onFailed: (message: string) => void\n      ) => {\n        set(() => ({\n          isLoading: true,\n        }));\n\n        const encodedFunctionCall = new utils.Interface(\n          contract.ABI\n        ).encodeFunctionData(\n          scheduleItem.contractMethod,\n          scheduleItem.contractFields\n        );\n\n        // TODO: add an input form for this value\n        const valueToTransfer = BigNumber.from(0);\n\n        const execution = executionFactory(\n          scheduleItem.providerPlanIndex,\n          contract.address,\n          encodedFunctionCall,\n          parseISO(scheduleItem.executeAt),\n          valueToTransfer,\n          myAccountAddress\n        );\n\n        let scheduledExecutionTransaction: ContractTransaction;\n\n        if (scheduleItem.isRecurrent) {\n          scheduledExecutionTransaction =\n            (await provider.contractInstance.scheduleMany(\n              execution,\n              scheduleItem.cronFields!.expression,\n              scheduleItem.cronQuantity!\n            )) as any;\n        } else {\n          scheduledExecutionTransaction =\n            (await provider.contractInstance.schedule(execution)) as any;\n        }\n\n        scheduledExecutionTransaction!\n          .wait(environment.CONFIRMATIONS)\n          .then(() => {\n            onConfirmed();\n          })\n          .catch((error) => onFailed(`Confirmation error: ${error.message}`))\n          .finally(() => {\n            const executionIds =\n              Object.entries(get().scheduleItems).filter(\n                ([id, item]) =>\n                  item.scheduledTx === scheduledExecutionTransaction!.hash &&\n                  item.providerId === scheduleItem.providerId\n              ) ?? [];\n\n            for (const [id] of executionIds) {\n              get().updateStatus(id, provider);\n            }\n          });\n\n        const executionDates = scheduleItem.isRecurrent\n          ? getDatesFromCronExpression(\n              scheduleItem.executeAt,\n              scheduleItem.cronFields?.expression!,\n              +scheduleItem.cronQuantity!\n            )\n          : [scheduleItem.executeAt];\n\n        const executionsToSave = executionDates.reduce<{\n          [id: string]: IScheduleItem;\n        }>((result, executeAt) => {\n          const executionRelated = executionFactory(\n            scheduleItem.providerPlanIndex,\n            contract.address,\n            encodedFunctionCall,\n            parseISO(executeAt),\n            valueToTransfer,\n            myAccountAddress\n          );\n\n          return {\n            ...result,\n            [executionRelated.id]: {\n              ...scheduleItem,\n              executeAt: executeAt,\n              id: executionRelated.id,\n              scheduledTx: scheduledExecutionTransaction!.hash,\n            },\n          };\n        }, {});\n\n        set((state) => ({\n          scheduleItems: {\n            ...state.scheduleItems,\n            ...executionsToSave,\n          },\n          isLoading: false,\n        }));\n      },\n      cancelExecution: async (\n        executionId: string,\n        provider: IProvider,\n        onConfirmed: () => void,\n        onFailed: (message: string) => void\n      ) => {\n        set(() => ({\n          isLoading: true,\n        }));\n\n        const newState = (await provider.contractInstance.getExecutionState(\n          executionId\n        )) as ExecutionState;\n\n        if (newState !== ExecutionState.Scheduled) {\n          onFailed(\n            `Status must be: ${\n              ExecutionStateDescriptions[ExecutionState.Scheduled]\n            }. Current Status: ${ExecutionStateDescriptions[newState]}.`\n          );\n          return;\n        }\n\n        const cancelTransaction =\n          await provider.contractInstance.cancelExecution(executionId);\n\n        cancelTransaction\n          .wait(environment.CONFIRMATIONS)\n          .then(() => {\n            onConfirmed();\n          })\n          .catch((error) => onFailed(`Confirmation error: ${error.message}`))\n          .finally(() => {\n            const [executionId] =\n              Object.entries(get().scheduleItems).find(\n                ([id, item]) =>\n                  item.executedTx === cancelTransaction.hash &&\n                  item.providerId === provider.id\n              ) ?? [];\n\n            if (executionId) {\n              get().updateStatus(executionId, provider);\n            }\n          });\n\n        set((state) => ({\n          scheduleItems: {\n            ...state.scheduleItems,\n            [executionId]: {\n              ...state.scheduleItems[executionId],\n              state: newState,\n              isConfirmed: false,\n              executedTx: cancelTransaction.hash,\n            },\n          },\n          isLoading: false,\n        }));\n      },\n      refundExecution: async (\n        executionId: string,\n        provider: IProvider,\n        onConfirmed: () => void,\n        onFailed: (message: string) => void\n      ) => {\n        set(() => ({\n          isLoading: true,\n        }));\n\n        const newState = (await provider.contractInstance.getExecutionState(\n          executionId\n        )) as ExecutionState;\n\n        if (newState !== ExecutionState.Overdue) {\n          onFailed(\n            `Status must be: ${\n              ExecutionStateDescriptions[ExecutionState.Scheduled]\n            }. Current Status: ${ExecutionStateDescriptions[newState]}.`\n          );\n          return;\n        }\n\n        const refundTransaction =\n          await provider.contractInstance.requestExecutionRefund(executionId);\n\n        refundTransaction\n          .wait(environment.CONFIRMATIONS)\n          .then(() => {\n            onConfirmed();\n          })\n          .catch((error) => onFailed(`Confirmation error: ${error.message}`))\n          .finally(() => {\n            const [executionId] =\n              Object.entries(get().scheduleItems).find(\n                ([id, item]) =>\n                  item.executedTx === refundTransaction.hash &&\n                  item.providerId === provider.id\n              ) ?? [];\n\n            if (executionId) {\n              get().updateStatus(executionId, provider);\n            }\n          });\n\n        set((state) => ({\n          scheduleItems: {\n            ...state.scheduleItems,\n            [executionId]: {\n              ...state.scheduleItems[executionId],\n              state: newState,\n              isConfirmed: false,\n              executedTx: refundTransaction.hash,\n            },\n          },\n          isLoading: false,\n        }));\n      },\n    }),\n    localbasePersist(\"schedule\", [\"isLoading\"])\n  )\n);\n\nexport default useSchedule;\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RIFScheduler } from \"@rsksmart/rif-scheduler-sdk\";\nimport { IPlanResponse } from \"@rsksmart/rif-scheduler-sdk/dist/types\";\nimport create from \"zustand\";\nimport environment from \"../shared/environment\";\nimport { ENetwork } from \"../shared/types\";\n\nexport interface IPlan extends IPlanResponse {\n  remainingExecutions: BigNumber | null;\n  symbol: string;\n  decimals: number;\n  isPurchaseConfirmed: boolean;\n  index: number;\n}\n\nexport interface IProvider {\n  id: string;\n  name: string;\n  network: ENetwork;\n  address: string;\n  contractInstance: RIFScheduler;\n  plans: IPlan[];\n}\n\nexport interface IUseProviders {\n  providers: {\n    [id: string]: IProvider;\n  };\n  isLoading: boolean;\n  load: (providers: IProvider[]) => Promise<void>;\n  purchaseExecutions: (\n    providerId: string,\n    planIndex: number,\n    executionsAmount: number,\n    onConfirmed: () => void,\n    onFailed: (message: string) => void\n  ) => Promise<void>;\n  updateRemainingExecutions: (\n    providerId: string,\n    planIndex: number,\n    isPurchaseConfirmed?: boolean\n  ) => Promise<void>;\n}\n\nconst useProviders = create<IUseProviders>((set, get) => ({\n  providers: {},\n  isLoading: false,\n  updateRemainingExecutions: async (\n    providerId: string,\n    planIndex: number,\n    isPurchaseConfirmed?: boolean\n  ) => {\n    const provider = get().providers[providerId];\n\n    const remainingExecutions =\n      await provider.contractInstance.remainingExecutions(planIndex);\n\n    const result = { ...provider, plans: [...provider.plans] };\n    result.plans[planIndex].remainingExecutions = remainingExecutions;\n\n    if (isPurchaseConfirmed !== undefined) {\n      result.plans[planIndex].isPurchaseConfirmed = isPurchaseConfirmed;\n    }\n\n    set((state) => ({\n      providers: { ...state.providers, [result.id]: result },\n    }));\n  },\n  purchaseExecutions: async (\n    providerId: string,\n    planIndex: number,\n    executionsQuantity: number,\n    onConfirmed: () => void,\n    onFailed: (message: string) => void\n  ) => {\n    set((state) => ({\n      isLoading: true,\n    }));\n\n    const provider = get().providers[providerId];\n\n    const purchaseTransaction = await provider.contractInstance.purchasePlan(\n      planIndex,\n      executionsQuantity\n    );\n\n    get().updateRemainingExecutions(providerId, planIndex, false);\n\n    purchaseTransaction\n      .wait(environment.CONFIRMATIONS)\n      .then(async (receipt) => {\n        onConfirmed();\n      })\n      .catch((error) => onFailed(`Confirmation error: ${error.message}`))\n      .finally(() =>\n        get().updateRemainingExecutions(providerId, planIndex, true)\n      );\n\n    set((state) => ({\n      isLoading: false,\n    }));\n  },\n  load: async (providers: IProvider[]) => {\n    set(() => ({\n      isLoading: true,\n    }));\n\n    for (const provider of providers) {\n      const storeProvider: IProvider = {\n        ...provider,\n        plans: [],\n      };\n\n      const plansCount = await provider.contractInstance.getPlansCount();\n\n      for (let index = 0; plansCount.gt(index); index++) {\n        const plan = await provider.contractInstance.getPlan(index);\n\n        let remainingExecutions = null;\n        if (provider.contractInstance.signer) {\n          remainingExecutions =\n            await provider.contractInstance.remainingExecutions(index);\n        }\n\n        const tokenContract = new Contract(\n          plan.token,\n          [\n            \"function symbol() view returns (string)\",\n            \"function decimals() view returns (uint8)\",\n          ],\n          provider.contractInstance.provider as any\n        );\n        const tokenSymbol = await tokenContract.symbol();\n        const tokenDecimals = await tokenContract.decimals();\n\n        storeProvider.plans.push({\n          ...plan,\n          symbol: tokenSymbol,\n          decimals: tokenDecimals,\n          remainingExecutions,\n          isPurchaseConfirmed: true,\n          index,\n        });\n\n        set((state) => ({\n          providers: { ...state.providers, [storeProvider.id]: storeProvider },\n        }));\n      }\n    }\n\n    set((state) => ({\n      isLoading: false,\n    }));\n  },\n}));\n\nexport default useProviders;\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport localbasePersist from \"../shared/localbasePersist\";\nimport { ENetwork } from \"../shared/types\";\n\nexport interface IContract {\n  id: string;\n  name: string;\n  network: ENetwork;\n  address: string;\n  ABI: string;\n}\n\nexport interface IUseContracts {\n  contracts: {\n    [id: string]: IContract;\n  };\n  save: (contract: IContract) => void;\n}\n\nconst useContracts = create<IUseContracts>(\n  persist(\n    (set, get) => ({\n      contracts: {},\n      save: (contract: IContract) =>\n        set((state) => ({\n          contracts: { ...state.contracts, [contract.id]: contract },\n        })),\n    }),\n    localbasePersist(\"contracts\")\n  )\n);\n\nexport default useContracts;\n","const hyphensAndCamelCaseToWords = (str: string) => {\n  var arr = str.split(/[_-]/);\n  var newStr = \"\";\n  for (var i = 1; i < arr.length; i++) {\n    newStr += arr[i].charAt(0).toUpperCase() + arr[i].slice(1) + \" \";\n  }\n\n  const text = (arr[0] + newStr).trim();\n\n  const result = text.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n};\n\nexport default hyphensAndCamelCaseToWords;\n","import RLogin from \"@rsksmart/rlogin\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { SupportedNetworks } from \"../shared/types\";\n\nexport const rLogin = new RLogin({\n  cacheProvider: true, // change to true to cache user's wallet choice\n  providerOptions: {\n    // read more about providers setup in https://github.com/web3Modal/web3modal/\n    walletconnect: {\n      package: WalletConnectProvider, // setup wallet connect for mobile wallet support\n      options: {\n        rpc: {\n          31: \"https://public-node.testnet.rsk.co\", // use RSK public nodes to connect to the testnet\n        },\n      },\n    },\n  },\n  supportedChains: SupportedNetworks,\n});\n\nexport const isRLoginConnected = () => {\n  const result = localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\")\n    ? true\n    : false;\n\n  return result;\n};\n","import create from \"zustand\";\nimport { providers, Signer } from \"ethers\";\nimport { isRLoginConnected } from \"./rLogin\";\nimport { ENetwork, SupportedNetworks } from \"../shared/types\";\n\nexport interface IUseConnector {\n  account: string | undefined;\n  provider: providers.Web3Provider | undefined;\n  signer: Signer | undefined;\n  isLoading: boolean;\n  network: ENetwork | undefined;\n  isConnected: boolean;\n  disconnect: () => Promise<void>;\n  connect: (rProvider: any, rDisconnect: any) => Promise<void>;\n}\n\nconst useConnector = create<IUseConnector>((set, get) => ({\n  account: undefined,\n  provider: undefined,\n  signer: undefined,\n  isLoading: isRLoginConnected(),\n  network: undefined,\n  isConnected: false,\n  disconnect: async () => {\n    localStorage.clear();\n    set((state) => ({\n      isConnected: false,\n      isLoading: false,\n    }));\n  },\n  connect: async (rProvider: any, rDisconnect: any) => {\n    try {\n      if (!rDisconnect) throw new Error(\"disconnect functions is empty\");\n\n      const web3Provider = new providers.Web3Provider(rProvider);\n      const [account] = await web3Provider.listAccounts();\n      const signer: Signer = web3Provider.getSigner(0);\n\n      const isConnected = account && signer ? true : false;\n\n      const network = await web3Provider.getNetwork();\n\n      set((state) => ({\n        account,\n        provider: web3Provider,\n        signer: signer,\n        disconnect: async () => {\n          localStorage.clear();\n          set((state) => ({\n            isConnected: false,\n            isLoading: false,\n          }));\n          rProvider.removeAllListeners();\n          rDisconnect();\n        },\n        isConnected: isConnected,\n        isLoading: false,\n        network: network.chainId as ENetwork,\n      }));\n\n      const handleConnectionChanges = async (\n        rProvider: any,\n        chainId: number\n      ) => {\n        if (!SupportedNetworks.includes(chainId)) {\n          set((state) => ({\n            network: parseInt(chainId.toString()) as ENetwork,\n            isLoading: true,\n          }));\n          return;\n        }\n\n        const web3Provider = new providers.Web3Provider(rProvider);\n        const [account] = await web3Provider.listAccounts();\n        const signer: Signer = web3Provider.getSigner(0);\n\n        const isConnected = account && signer ? true : false;\n\n        if (!isConnected) {\n          get().disconnect();\n          return;\n        }\n\n        set((state) => ({\n          network: parseInt(chainId.toString()) as ENetwork,\n          provider: web3Provider,\n          signer: signer,\n          account: account,\n          isConnected: isConnected,\n          isLoading: false,\n        }));\n      };\n\n      // Subscribe to accounts change\n      rProvider.on(\"accountsChanged\", (accounts: string[]) => {\n        handleConnectionChanges(rProvider, get().network as number);\n      });\n\n      // Subscribe to chainId change\n      rProvider.on(\"chainChanged\", (chainId: number) => {\n        handleConnectionChanges(rProvider, chainId);\n      });\n\n      // Subscribe to rProvider connection\n      rProvider.on(\"connect\", (info: { chainId: number }) => {\n        handleConnectionChanges(rProvider, info.chainId);\n      });\n\n      // Subscribe to rProvider disconnection\n      rProvider.on(\"disconnect\", (error: { code: number; message: string }) => {\n        get().disconnect();\n      });\n    } catch (error) {\n      console.error(\"connect error: \", error);\n      const disconnect = get().disconnect;\n      if (disconnect) disconnect();\n    }\n  },\n}));\n\nexport default useConnector;\n","import Chip from '@material-ui/core/Chip';\nimport { ExecutionStateDescriptions } from \"../shared/types\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { ExecutionState } from '@rsksmart/rif-scheduler-sdk';\nimport { IScheduleItem } from './useSchedule';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    [ExecutionState.Nonexistent]: {\n      color: \"#333\",\n      border: \"1px solid #f7e463\",\n      backgroundColor: \"#f7e463\"\n    },\n    [ExecutionState.Scheduled]: {\n        color: \"#333\",\n        border: \"1px solid #7cd992\",\n        backgroundColor: \"#7cd992\"\n    },\n    [ExecutionState.ExecutionSuccessful]: {\n        color: \"#333\",\n        border: \"1px solid #7cd992\",\n        backgroundColor: \"#7cd992\"\n    },\n    [ExecutionState.ExecutionFailed]: {\n        color: \"#fff\",\n        border: \"1px solid #eb6060\",\n        backgroundColor: \"#eb6060\"\n    },\n    [ExecutionState.Overdue]: {\n        color: \"#fff\",\n        border: \"1px solid #eb6060\",\n        backgroundColor: \"#eb6060\"\n    },\n    [ExecutionState.Cancelled]: {\n        color: \"#333\",\n        border: \"1px solid #a8a8a8\",\n        backgroundColor: \"#a8a8a8\"\n    },\n    [ExecutionState.Refunded]: {\n        color: \"#333\",\n        border: \"1px solid #a8a8a8\",\n        backgroundColor: \"#a8a8a8\"\n    },\n  })\n);\n\nconst StatusLabel = ({ execution, isLoading }: { execution: IScheduleItem, isLoading?: boolean }) => {\n    const classes = useStyles();\n\n    const state = execution.state ?? ExecutionState.Nonexistent\n    const isConfirmed = execution.isConfirmed\n\n    const label = isLoading ? \"...\" : (isConfirmed ? ExecutionStateDescriptions[state] : \"Waiting confirmation\")\n\n    return <Chip size=\"small\" color=\"primary\" variant=\"default\" label={label} classes={{\n        colorPrimary: classes[isConfirmed ? state : ExecutionState.Nonexistent]\n    }} />\n}\n\nexport default StatusLabel","import useConnector from \"./useConnector\"\nimport Chip from '@material-ui/core/Chip';\nimport { ENetwork, NetworkName } from \"../shared/types\";\n\n// By default shows the connected network\nconst NetworkLabel = ({ network }: { network?: ENetwork }) => {\n    const connectedToNetwork = useConnector(state => state.network)\n\n    const displayNetwork = network ? network : connectedToNetwork\n\n    let color = \"default\"\n\n    color = displayNetwork === ENetwork.RSKMainnet ? \"primary\" : color\n    color = displayNetwork === ENetwork.RSKTestnet ? \"secondary\" : color\n\n    const label = displayNetwork ? NetworkName[displayNetwork] : NetworkName[ENetwork.NotSupported]\n\n    return <Chip size=\"small\" color={color as any} label={label ?? NetworkName[ENetwork.NotSupported]} />\n}\n\nexport default NetworkLabel","function shortText(address: string): string {\n    return address\n    ? `${address.substr(0, 6)}...${address.substr(\n        address.length - 4,\n        address.length\n        )}`\n    : address\n}\n\nexport default shortText","export enum ECronArrayDefinition {\n  Minute = 0,\n  Hour = 1,\n  Day = 2,\n  Month = 3,\n  DayWeek = 4,\n}\n\nexport enum ECronFieldOption {\n  Day,\n  Week,\n  Month,\n  Year,\n  Custom,\n}\n\nexport enum EMonths {\n  January,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December,\n}\n\nexport enum EMidday {\n  AM,\n  PM,\n}\n\nexport enum EWeekDay {\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n}\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport useSchedule from \"./useSchedule\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useContracts from \"../contracts/useContracts\";\nimport useProviders from \"../store/useProviders\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport StatusLabel from \"./StatusLabel\";\nimport { format, parseISO } from \"date-fns\";\nimport hyphensAndCamelCaseToWords from \"../shared/hyphensAndCamelCaseToWords\";\nimport shortText from \"../shared/shortText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport { useSnackbar } from \"notistack\";\nimport { getExplorerTxLink } from \"../shared/types\";\nimport useConnector from \"../connect/useConnector\";\nimport Link from \"@material-ui/core/Link\";\nimport LinkIcon from \"@material-ui/icons/Launch\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport shallow from \"zustand/shallow\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport { useEffect } from \"react\";\nimport { ExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\n\nconst rowStyles = { display: \"flex\", alignItems: \"center\", gap: \"5px\" };\n\nconst ExecutionInfo = ({\n  selectedExecutionId,\n  onClose,\n}: {\n  selectedExecutionId: string | null;\n  onClose: () => void;\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const open = selectedExecutionId ? true : false;\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [\n    scheduleItems,\n    updateStatus,\n    updateResult,\n    cancelExecution,\n    refundExecution,\n    isLoading,\n  ] = useSchedule(\n    (state) => [\n      state.scheduleItems,\n      state.updateStatus,\n      state.updateResult,\n      state.cancelExecution,\n      state.refundExecution,\n      state.isLoading,\n    ],\n    shallow\n  );\n  const providers = useProviders((state) => state.providers);\n  const contracts = useContracts((state) => state.contracts);\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const execution = selectedExecutionId\n    ? scheduleItems[selectedExecutionId]\n    : null;\n  const provider = execution ? providers[execution.providerId] : null;\n  const contract = execution ? contracts[execution.contractId] : null;\n  const plan =\n    execution && provider ? provider.plans[+execution.providerPlanIndex] : null;\n\n  const scheduledTxExplorerAddressUrl =\n    execution?.scheduledTx &&\n    connectedToNetwork &&\n    getExplorerTxLink(execution.scheduledTx, connectedToNetwork);\n\n  const executedTxExplorerAddressUrl =\n    execution?.executedTx &&\n    connectedToNetwork &&\n    getExplorerTxLink(execution.executedTx, connectedToNetwork);\n\n  useEffect(() => {\n    if (!provider || !selectedExecutionId || !execution || !contract || !plan)\n      return;\n\n    if (\n      !execution.executedTx &&\n      [\n        ExecutionState.ExecutionFailed,\n        ExecutionState.ExecutionSuccessful,\n      ].includes(execution.state ?? ExecutionState.Nonexistent)\n    ) {\n      updateResult(execution, contract, plan, provider);\n    }\n  }, [contract, execution, plan, provider, selectedExecutionId, updateResult]);\n\n  const handleCopy = (textToCopy: string | undefined | null) => () => {\n    if (!textToCopy) {\n      return;\n    }\n\n    if (!navigator?.clipboard) {\n      enqueueSnackbar(\"Your browser can't access the clipboard\", {\n        variant: \"error\",\n      });\n      return;\n    }\n\n    navigator.clipboard.writeText(textToCopy);\n    enqueueSnackbar(\"Copied!\");\n  };\n\n  const handleUpdateStatusClick = () => {\n    if (!provider || !selectedExecutionId) return;\n\n    updateStatus(selectedExecutionId, provider);\n  };\n\n  const handleCancelClick = () => {\n    if (!provider || !selectedExecutionId) return;\n\n    cancelExecution(\n      selectedExecutionId,\n      provider,\n      () =>\n        enqueueSnackbar(\"Cancel schedule confirmed!\", {\n          variant: \"success\",\n        }),\n      (message) =>\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        })\n    );\n  };\n\n  const handleRefundClick = () => {\n    if (!provider || !selectedExecutionId) return;\n\n    refundExecution(\n      selectedExecutionId,\n      provider,\n      () =>\n        enqueueSnackbar(\"Refund execution confirmed!\", {\n          variant: \"success\",\n        }),\n      (message) =>\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        })\n    );\n  };\n\n  if (\n    !provider ||\n    !selectedExecutionId ||\n    !provider ||\n    !execution ||\n    !contract ||\n    !plan\n  )\n    return null;\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      maxWidth=\"sm\"\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        <div style={{ display: \"flex\", flex: 1 }}>\n          <div style={{ display: \"flex\", flex: 1 }}>{execution.title}</div>\n          <NetworkLabel />\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <TableContainer\n          component={Paper}\n          elevation={0}\n          style={{ border: `1px solid ${theme.palette.action.hover}` }}\n        >\n          <Table aria-label=\"info table\">\n            <TableBody>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  #\n                </StrongTableCell>\n                <RegularTableCell align=\"right\" style={rowStyles}>\n                  <IconButton\n                    aria-label=\"copy id\"\n                    size=\"small\"\n                    onClick={handleCopy(execution.id)}\n                  >\n                    <CopyIcon fontSize=\"inherit\" />\n                  </IconButton>\n                  <span>{execution.id && shortText(execution.id)}</span>\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Scheduled tx\n                </StrongTableCell>\n                <RegularTableCell align=\"right\" style={rowStyles}>\n                  <IconButton\n                    aria-label=\"copy transaction hash\"\n                    size=\"small\"\n                    onClick={handleCopy(execution.scheduledTx)}\n                  >\n                    <CopyIcon fontSize=\"inherit\" />\n                  </IconButton>\n                  {scheduledTxExplorerAddressUrl && (\n                    <Link\n                      target=\"_blank\"\n                      href={scheduledTxExplorerAddressUrl}\n                      rel=\"noreferrer\"\n                      style={rowStyles}\n                    >\n                      <LinkIcon style={{ fontSize: 16 }} />\n                      {execution.scheduledTx &&\n                        shortText(execution.scheduledTx)}\n                    </Link>\n                  )}\n                  {!scheduledTxExplorerAddressUrl && (\n                    <span>\n                      {execution.scheduledTx &&\n                        shortText(execution.scheduledTx)}\n                    </span>\n                  )}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Status\n                </StrongTableCell>\n                <RegularTableCell align=\"right\" style={rowStyles}>\n                  <IconButton\n                    aria-label=\"refresh status\"\n                    size=\"small\"\n                    onClick={handleUpdateStatusClick}\n                    disabled={isLoading || !execution.isConfirmed}\n                  >\n                    <RefreshIcon fontSize=\"inherit\" />\n                  </IconButton>\n                  <StatusLabel execution={execution} isLoading={isLoading} />\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Execute at\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  {format(\n                    parseISO(execution.executeAt),\n                    \"MMMM do yyyy, hh:mm aaa\"\n                  )}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  {provider.name}\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  {contract.name}&nbsp;&#10140;&nbsp;\n                  {hyphensAndCamelCaseToWords(execution.contractMethod)}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Plan #{+execution.providerPlanIndex + 1}\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  {`Window: ${fromBigNumberToHms(\n                    plan.window\n                  )} - Gas limit: ${formatBigNumber(plan.gasLimit, 0)}`}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Executed tx\n                </StrongTableCell>\n                <RegularTableCell align=\"right\" style={rowStyles}>\n                  {execution.executedTx && (\n                    <IconButton\n                      aria-label=\"copy transaction hash\"\n                      size=\"small\"\n                      onClick={handleCopy(execution.executedTx)}\n                    >\n                      <CopyIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  )}\n                  {executedTxExplorerAddressUrl && (\n                    <Link\n                      target=\"_blank\"\n                      href={executedTxExplorerAddressUrl}\n                      rel=\"noreferrer\"\n                      style={rowStyles}\n                    >\n                      <LinkIcon style={{ fontSize: 16 }} />\n                      {execution.executedTx && shortText(execution.executedTx)}\n                    </Link>\n                  )}\n                  {!executedTxExplorerAddressUrl && (\n                    <span>\n                      {execution.executedTx\n                        ? shortText(execution.executedTx)\n                        : \"---\"}\n                    </span>\n                  )}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Result\n                </StrongTableCell>\n                <RegularTableCell align=\"right\" style={rowStyles}>\n                  {execution.result && (\n                    <IconButton\n                      aria-label=\"refresh result\"\n                      size=\"small\"\n                      onClick={\n                        execution.result\n                          ? handleCopy(execution.result)\n                          : undefined\n                      }\n                      disabled={isLoading}\n                    >\n                      <CopyIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  )}\n                  <span>\n                    {execution.result ? shortText(execution.result) : \"---\"}\n                  </span>\n                </RegularTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions\n        style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n      >\n        <div style={{ display: \"flex\", flex: 1 }}>\n          {execution.state === ExecutionState.Scheduled && (\n            <Button\n              onClick={handleCancelClick}\n              disabled={isLoading || !execution.isConfirmed}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Cancel\n            </Button>\n          )}\n          {execution.state === ExecutionState.Overdue && (\n            <Button\n              onClick={handleRefundClick}\n              disabled={isLoading || !execution.isConfirmed}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Refund\n            </Button>\n          )}\n        </div>\n        <Button onClick={onClose} color=\"inherit\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExecutionInfo;\n\nconst RegularTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      borderBottom: \"none\",\n    },\n  })\n)(TableCell);\n\nconst StrongTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      borderBottom: \"none\",\n      maxWidth: 100,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport useSchedule, { IScheduleItem } from \"./useSchedule\";\nimport { format, parseISO, compareAsc } from \"date-fns\";\nimport useProviders, { IProvider } from \"../store/useProviders\";\nimport useContracts, { IContract } from \"../contracts/useContracts\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport UpcomingIcon from \"@material-ui/icons/AlarmOn\";\nimport { useState } from \"react\";\nimport hyphensAndCamelCaseToWords from \"../shared/hyphensAndCamelCaseToWords\";\nimport shallow from \"zustand/shallow\";\nimport useConnector from \"../connect/useConnector\";\nimport StatusLabel from \"./StatusLabel\";\nimport { Hidden } from \"@material-ui/core\";\nimport ExecutionInfo from \"./ExecutionInfo\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      padding: 5,\n      gap: \"5px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  })\n);\n\nconst useRowStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    part: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    row: ({ color = \"#333\" }: any) => ({\n      borderLeft: `${color} 4px solid`,\n      borderBottom: `${color} 1px solid`,\n      borderRadius: 15,\n    }),\n  })\n);\n\nconst Item: React.FC<{\n  item: IScheduleItem;\n  contract?: IContract;\n  provider?: IProvider;\n  onClick?: (executionId: string) => void;\n}> = ({ item, contract, provider, onClick }) => {\n  const classes = useRowStyles({ color: item.color });\n  const [updateStatus, isLoading] = useSchedule(\n    (state) => [state.updateStatus, state.isLoading],\n    shallow\n  );\n\n  const handleUpdateStatusClick = () => {\n    updateStatus(item.id!, provider!);\n  };\n\n  const handleItemClick = () => {\n    if (onClick) onClick(item.id!);\n  };\n\n  return (\n    <ListItem button className={classes.row} onClick={handleItemClick}>\n      <div\n        className={classes.part}\n        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <ListItemText\n          className={classes.part}\n          primary={item.title}\n          secondary={`${format(parseISO(item.executeAt), \"EEE do, hh:mm aaa\")}`}\n        />\n        <div style={{ paddingLeft: 16, paddingRight: 16 }}>\n          <StatusLabel execution={item} />\n        </div>\n      </div>\n      <Hidden xsDown>\n        <Divider orientation=\"vertical\" style={{ marginRight: 16 }} flexItem />\n        <ListItemText\n          primary={\n            <span>\n              {contract?.name}&nbsp;&#10140;&nbsp;\n              {hyphensAndCamelCaseToWords(item.contractMethod)}\n            </span>\n          }\n          secondary={`${provider?.name} - Plan #${+item.providerPlanIndex + 1}`}\n          className={classes.part}\n        />\n      </Hidden>\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          onClick={handleUpdateStatusClick}\n          disabled={isLoading || !item.isConfirmed}\n        >\n          <RefreshIcon style={{ color: item.color }} />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\ninterface IGroupBy {\n  [group: string]: IScheduleItem[];\n}\n\nconst History = () => {\n  const classes = useStyles();\n\n  const [selectedExecutionId, setSelectedExecutionId] = useState<string | null>(\n    null\n  );\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const [isFromThisMonth, setIsFromThisMonth] = useState(true);\n\n  const scheduleItems = useSchedule((state) => state.scheduleItems);\n  const contracts = useContracts((state) => state.contracts);\n  const providers = useProviders((state) => state.providers);\n\n  const firstDayCurrentMonth = new Date(\n    new Date().getFullYear(),\n    new Date().getMonth(),\n    1\n  );\n\n  const itemsGroupedByMonth: IGroupBy = Object.entries(scheduleItems)\n    .sort(([firstId, firstItem], [nextId, nextItem]) => {\n      // Turn your strings into dates, and then subtract them\n      // to get a value that is either negative, positive, or zero.\n      return compareAsc(\n        parseISO(firstItem.executeAt),\n        parseISO(nextItem.executeAt)\n      );\n    })\n    .filter(\n      ([id, item]) =>\n        item.network === connectedToNetwork &&\n        (isFromThisMonth\n          ? parseISO(item.executeAt) >= firstDayCurrentMonth\n          : true)\n    )\n    .reduce((prev: any, [id, item]) => {\n      const groupId = format(parseISO(item.executeAt), \"MMM yyyy\");\n      const group = [...(prev[groupId] ?? []), item];\n\n      return { ...prev, [groupId]: group };\n    }, {});\n\n  const groupedEntries = Object.entries(itemsGroupedByMonth);\n\n  return (\n    <>\n      <ExecutionInfo\n        selectedExecutionId={selectedExecutionId}\n        onClose={() => setSelectedExecutionId(null)}\n      />\n      {groupedEntries.length > 0 && (\n        <Card style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }}>\n          <CardHeader\n            title={isFromThisMonth ? \"Current and pending\" : \"History\"}\n            action={\n              <IconButton\n                aria-label=\"filter\"\n                size=\"small\"\n                onClick={() => setIsFromThisMonth((prev) => !prev)}\n              >\n                {isFromThisMonth && <HistoryIcon />}\n                {!isFromThisMonth && <UpcomingIcon />}\n              </IconButton>\n            }\n          />\n          <CardContent style={{ padding: 0 }}>\n            {groupedEntries.map(([group, items], index) => (\n              <List\n                key={`history-group-${index}`}\n                subheader={\n                  <ListSubheader component=\"div\">{group}</ListSubheader>\n                }\n                className={classes.root}\n              >\n                {items.map((item) => (\n                  <Item\n                    key={`history-item-${item.id}`}\n                    item={item}\n                    contract={contracts[item.contractId]}\n                    provider={providers[item.providerId]}\n                    onClick={(value) => setSelectedExecutionId(value)}\n                  />\n                ))}\n              </List>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { red, teal, yellow, orange, lightBlue } from \"@material-ui/core/colors\";\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\nimport { Typography } from \"@material-ui/core\";\n\nconst RedRadio = withStyles({\n  root: {\n    padding: 7,\n    color: red[400],\n    \"&$checked\": {\n      color: red[400],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst TealRadio = withStyles({\n  root: {\n    padding: 7,\n    color: teal[400],\n    \"&$checked\": {\n      color: teal[400],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst YellowRadio = withStyles({\n  root: {\n    padding: 7,\n    color: yellow[700],\n    \"&$checked\": {\n      color: yellow[700],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst LightBlueRadio = withStyles({\n  root: {\n    padding: 7,\n    color: lightBlue[400],\n    \"&$checked\": {\n      color: lightBlue[400],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst OrangeRadio = withStyles({\n  root: {\n    padding: 7,\n    color: orange[700],\n    \"&$checked\": {\n      color: orange[700],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nconst ColorSelector = ({ value, onChange, disabled }: any) => {\n  const [selectedValue, setSelectedValue] = useState<string | null>(value);\n\n  useEffect(() => {\n    if (value !== selectedValue) {\n      setSelectedValue(value);\n    }\n  }, [value, selectedValue]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(event);\n    }\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <div style={{ textAlign: \"right\", whiteSpace: \"nowrap\" }}>\n      <Typography variant=\"caption\" style={{marginLeft: 8, marginRight: 8}}>Color</Typography>\n      <RedRadio\n        disabled={disabled}\n        checked={selectedValue === red[400]}\n        onChange={handleChange}\n        value={red[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Red\" }}\n      />\n      <OrangeRadio\n        disabled={disabled}\n        checked={selectedValue === orange[400]}\n        onChange={handleChange}\n        value={orange[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Orange\" }}\n      />\n      <YellowRadio\n        disabled={disabled}\n        checked={selectedValue === yellow[400]}\n        onChange={handleChange}\n        value={yellow[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Yellow\" }}\n      />\n      <TealRadio\n        disabled={disabled}\n        checked={selectedValue === teal[400]}\n        onChange={handleChange}\n        value={teal[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Teal\" }}\n      />\n      <LightBlueRadio\n        disabled={disabled}\n        checked={selectedValue === lightBlue[400]}\n        onChange={handleChange}\n        value={lightBlue[400]}\n        name=\"color-selector\"\n        size=\"small\"\n        inputProps={{ \"aria-label\": \"Light Blue\" }}\n      />\n    </div>\n  );\n};\n\nexport default ColorSelector;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: \"relative\",\n    },\n    buttonProgress: {\n      color: blue[500],\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  })\n);\n\nconst ButtonWithLoading = ({ isLoading, onClick, label }: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={isLoading}\n          onClick={onClick}\n        >\n          {label}\n        </Button>\n        {isLoading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ButtonWithLoading;\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { Alert, Color } from \"@material-ui/lab\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\ninterface IScheduleFormDialogProps {\n  onClose: () => void;\n  onConfirm: () => void;\n  alerts?: IScheduleFormDialogAlert[];\n}\n\nexport interface IScheduleFormDialogAlert {\n  severity: Color;\n  message: string;\n  actionLabel?: string;\n  actionLink?: string;\n}\n\nconst ScheduleFormDialog = ({\n  alerts = [],\n  onClose,\n  onConfirm,\n}: IScheduleFormDialogProps) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const open = alerts.length > 0 ? true : false;\n\n  if (alerts.length === 0) return null;\n\n  const hasErrors = alerts.find((x) => x.severity === \"error\") ? true : false;\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      maxWidth=\"sm\"\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        <div style={{ display: \"flex\", flex: 1 }}>\n          <div style={{ display: \"flex\", flex: 1 }}>Requires your review!</div>\n          <NetworkLabel />\n        </div>\n      </DialogTitle>\n      <DialogContent\n        style={{ display: \"flex\", flexDirection: \"column\", gap: \"5px\" }}\n      >\n        {alerts.map((alert, index) => (\n          <Alert\n            key={`form-alert-${index}`}\n            severity={alert.severity}\n            action={\n              alert.actionLabel &&\n              alert.actionLink && (\n                <Button\n                  color=\"inherit\"\n                  component={RouterLink}\n                  to={alert.actionLink}\n                  size=\"small\"\n                >\n                  {alert.actionLabel}\n                </Button>\n              )\n            }\n          >\n            {alert.message}\n          </Alert>\n        ))}\n      </DialogContent>\n      <DialogActions\n        style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n      >\n        <Button onClick={onClose} color=\"inherit\">\n          Close\n        </Button>\n        {!hasErrors && (\n          <Button onClick={onConfirm} color=\"secondary\" variant=\"contained\">\n            Schedule anyway!\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ScheduleFormDialog;\n","import NumberFormat from \"react-number-format\";\n\ninterface INumberFormatCustomProps {\n  inputRef: (instance: NumberFormat | null) => void;\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst NumberInput = (props: INumberFormatCustomProps) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      allowNegative={false}\n      decimalScale={0}\n      prefix=\"\"\n    />\n  );\n};\n\nexport default NumberInput;\n","import { ECronFieldOption, EMonths, EWeekDay } from \"./enums\";\n\nexport const WEEK_LIST = [\n  EWeekDay.Sunday,\n  EWeekDay.Monday,\n  EWeekDay.Tuesday,\n  EWeekDay.Wednesday,\n  EWeekDay.Thursday,\n  EWeekDay.Friday,\n  EWeekDay.Saturday,\n];\n\nexport const WEEK_LABEL = {\n  [EWeekDay.Sunday]: \"S\",\n  [EWeekDay.Monday]: \"M\",\n  [EWeekDay.Tuesday]: \"T\",\n  [EWeekDay.Wednesday]: \"W\",\n  [EWeekDay.Thursday]: \"T\",\n  [EWeekDay.Friday]: \"F\",\n  [EWeekDay.Saturday]: \"S\",\n};\n\nexport const getCronFieldOptions = (repetition: number) => ({\n  [ECronFieldOption.Day]: repetition > 1 ? \"days\" : \"day\",\n  [ECronFieldOption.Week]: repetition > 1 ? \"weeks\" : \"week\",\n  [ECronFieldOption.Month]: repetition > 1 ? \"months\" : \"month\",\n  [ECronFieldOption.Year]: repetition > 1 ? \"years\" : \"year\",\n  [ECronFieldOption.Custom]: \"advanced\",\n});\n\nexport const MONTHS_LIST = [\n  EMonths.January,\n  EMonths.February,\n  EMonths.March,\n  EMonths.April,\n  EMonths.May,\n  EMonths.June,\n  EMonths.July,\n  EMonths.August,\n  EMonths.September,\n  EMonths.October,\n  EMonths.November,\n  EMonths.December,\n];\n\nexport const MONTHS_LABEL = {\n  [EMonths.January]: \"January\",\n  [EMonths.February]: \"February\",\n  [EMonths.March]: \"March\",\n  [EMonths.April]: \"April\",\n  [EMonths.May]: \"May\",\n  [EMonths.June]: \"June\",\n  [EMonths.July]: \"July\",\n  [EMonths.August]: \"August\",\n  [EMonths.September]: \"September\",\n  [EMonths.October]: \"October\",\n  [EMonths.November]: \"November\",\n  [EMonths.December]: \"December\",\n};\n","import {\n  ECronArrayDefinition,\n  ECronFieldOption,\n  EMidday,\n  EMonths,\n  EWeekDay,\n} from \"./enums\";\nimport cronstrue from \"cronstrue\";\nimport Cron from \"cron-converter\";\nimport { MONTHS_LIST, WEEK_LIST } from \"./descriptions\";\nconst cronConverter = new Cron();\n\nexport interface ICronField {\n  option: ECronFieldOption;\n  every: number;\n  hour: number;\n  minute: number;\n  midday: EMidday;\n  weekDays: EWeekDay[];\n  months: EMonths[];\n  monthDays: number[];\n  expression: string;\n  description: string;\n}\n\nconst CRON_DEFAULT = \"0 0 */1 * *\";\n\nexport const DEFAULT_CRON_FIELD: ICronField = {\n  option: ECronFieldOption.Day,\n  every: 1,\n  hour: 12,\n  minute: 0,\n  midday: EMidday.AM,\n  weekDays: [EWeekDay.Monday],\n  months: [EMonths.January],\n  monthDays: [1],\n  expression: CRON_DEFAULT,\n  description: cronstrue.toString(CRON_DEFAULT, { verbose: true }),\n};\n\nexport const convertToCronExpression = (field: ICronField) => {\n  let expression = field.expression;\n\n  if (field.option !== ECronFieldOption.Custom) {\n    let currentValueArray: Cron.CronArray = [[], [], [], [], []];\n\n    if (field.midday === EMidday.AM)\n      currentValueArray[ECronArrayDefinition.Hour][0] =\n        field.hour === 12 ? 0 : field.hour;\n\n    if (field.midday === EMidday.PM)\n      currentValueArray[ECronArrayDefinition.Hour][0] =\n        field.hour === 12 ? 12 : field.hour + 12;\n\n    currentValueArray[ECronArrayDefinition.Minute][0] = field.minute;\n\n    if (field.option === ECronFieldOption.Day) {\n      currentValueArray[ECronArrayDefinition.Day] = arrayFromWithStep(\n        Array.from(Array(31).keys()).map((x) => x + 1),\n        field.every\n      );\n\n      currentValueArray[ECronArrayDefinition.Month] = MONTHS_LIST.map(\n        (x) => x + 1\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = WEEK_LIST;\n    } else if (field.option === ECronFieldOption.Week) {\n      const weeksRepetitionStart = arrayFromWithStep(\n        Array.from(Array(31).keys()).map((x) => x + 1),\n        field.every * 7\n      );\n\n      currentValueArray[ECronArrayDefinition.Day] = weeksRepetitionStart\n        .map((currentValue) =>\n          arrayFromWithStep(\n            Array.from(Array(7).keys()).map((x) => x + currentValue),\n            1\n          )\n        )\n        .reduce((acc, curVal) => acc.concat(curVal), [])\n        .filter((x) => x <= 31);\n\n      currentValueArray[ECronArrayDefinition.Month] = MONTHS_LIST.map(\n        (x) => x + 1\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = field.weekDays;\n    } else if (field.option === ECronFieldOption.Month) {\n      currentValueArray[ECronArrayDefinition.Day] = field.monthDays;\n\n      currentValueArray[ECronArrayDefinition.Month] = arrayFromWithStep(\n        MONTHS_LIST.map((x) => x + 1),\n        field.every\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = WEEK_LIST;\n    } else if (field.option === ECronFieldOption.Year) {\n      currentValueArray[ECronArrayDefinition.Day] = field.monthDays;\n\n      currentValueArray[ECronArrayDefinition.Month] = field.months.map(\n        (x) => x + 1\n      );\n\n      currentValueArray[ECronArrayDefinition.DayWeek] = WEEK_LIST;\n    }\n\n    expression = cronConverter.fromArray(currentValueArray).toString();\n  }\n\n  return {\n    expression,\n    description: cronstrue.toString(expression, { verbose: true }),\n  };\n};\n\nfunction arrayFromWithStep(array: number[], step: number) {\n  const result: number[] = [];\n  for (let index = 0; index < array.length; index += step) {\n    result.push(array[index]);\n  }\n\n  return result;\n}\n","import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  Link,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport EditIcon from \"@material-ui/icons/DateRange\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useEffect, useState } from \"react\";\nimport NumberInput from \"../shared/NumberInput\";\n\nimport PlusIcon from \"@material-ui/icons/AddCircleRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircleRounded\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport cronstrue from \"cronstrue\";\nimport {\n  ECronFieldOption,\n  EMidday,\n  EMonths,\n  EWeekDay,\n} from \"./cronParser/enums\";\nimport {\n  getCronFieldOptions,\n  MONTHS_LABEL,\n  MONTHS_LIST,\n  WEEK_LABEL,\n  WEEK_LIST,\n} from \"./cronParser/descriptions\";\nimport {\n  convertToCronExpression,\n  ICronField,\n} from \"./cronParser/convertToCronExpression\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogPaper: {\n      margin: 0,\n\n      [theme.breakpoints.down(\"xs\")]: {\n        maxWidth: \"100% !important\",\n      },\n    },\n  })\n);\n\ninterface ICronButtonProps {\n  disabled: boolean;\n  value: ICronField;\n  onChange: (event: { target: { value: ICronField } }) => void;\n}\n\nconst CronButton: React.FC<ICronButtonProps> = ({\n  value,\n  onChange,\n  disabled,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [fields, setFields] = useState<ICronField>(value);\n\n  const cronFieldOptions = getCronFieldOptions(fields.every);\n\n  const [cronError, setCronError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setFields(value);\n  }, [value]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleClear = () => {\n    setFields(value);\n  };\n\n  const handleClose = () => {\n    handleClear();\n    setOpen(false);\n  };\n\n  const handleFieldChange = (fieldName: string, value: any) => {\n    const newValue = { ...fields, [fieldName]: value };\n    const cron = convertToCronExpression(newValue);\n\n    setFields({ ...newValue, ...cron });\n  };\n\n  const handleOptionChange = (event: any) => {\n    const option = event.target.value as ECronFieldOption;\n\n    let every = fields.every;\n\n    if ([ECronFieldOption.Year, ECronFieldOption.Custom].includes(option)) {\n      every = 1; // every is disabled on year and custom\n    }\n\n    const newValue = { ...fields, option, every };\n    const cron = convertToCronExpression(newValue);\n\n    setFields({ ...newValue, ...cron });\n  };\n\n  const handleEveryIncrement = (increment: number) => (event: any) => {\n    let result = fields.every + increment;\n\n    if (result <= 1) result = 1;\n\n    handleFieldChange(\"every\", result);\n  };\n\n  const handleWeekDaysChange = (day: EWeekDay) => () => {\n    if (fields.weekDays.includes(day)) {\n      if (fields.weekDays.length <= 1) {\n        return;\n      }\n      handleFieldChange(\n        \"weekDays\",\n        fields.weekDays.filter((x) => x !== day)\n      );\n    } else {\n      handleFieldChange(\"weekDays\", [...fields.weekDays, day]);\n    }\n  };\n\n  const handleMonthDaysChange = (day: number) => () => {\n    if (fields.monthDays.includes(day)) {\n      if (fields.monthDays.length <= 1) {\n        return;\n      }\n      handleFieldChange(\n        \"monthDays\",\n        fields.monthDays.filter((x) => x !== day)\n      );\n    } else {\n      handleFieldChange(\"monthDays\", [...fields.monthDays, day]);\n    }\n  };\n\n  const handleMonthsChange = (month: EMonths) => () => {\n    if (fields.months.includes(month)) {\n      if (fields.months.length <= 1) {\n        return;\n      }\n      handleFieldChange(\n        \"months\",\n        fields.months.filter((x) => x !== month)\n      );\n    } else {\n      handleFieldChange(\"months\", [...fields.months, month]);\n    }\n  };\n\n  const handleExpressionChange = (event: any) => {\n    const expression = event.target.value;\n\n    setCronError(null);\n\n    setFields((prev) => ({ ...prev, expression }));\n    try {\n      const description = cronstrue.toString(expression, { verbose: true });\n\n      setFields((prev) => ({ ...prev, description }));\n    } catch (error) {\n      let message = \"\";\n      if (typeof error === \"string\") message = error;\n      else message = error.message;\n\n      if (message.includes(\"Error: \")) message = message.replace(\"Error: \", \"\");\n\n      setFields((prev) => ({ ...prev, description: \"\" }));\n      setCronError(message);\n    }\n  };\n\n  const handleOkButton = () => {\n    if (fields.option === ECronFieldOption.Custom && cronError) return;\n\n    const cron = convertToCronExpression(fields);\n\n    onChange({ target: { value: { ...fields, ...cron } } });\n    handleClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"edit cron expression\"\n        onClick={() => setOpen(true)}\n        edge=\"end\"\n        disabled={disabled}\n      >\n        <EditIcon />\n      </IconButton>\n      <Dialog\n        scroll=\"body\"\n        fullWidth={false}\n        classes={{\n          paper: classes.dialogPaper,\n        }}\n        maxWidth={\"xs\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"cron-expression-dialog-title\"\n      >\n        <DialogTitle\n          disableTypography\n          id=\"cron-expression-dialog-title\"\n          style={{ height: 100, backgroundColor: theme.palette.primary.main }}\n        >\n          <Typography\n            component=\"h2\"\n            variant=\"h6\"\n            style={{ color: theme.palette.primary.contrastText }}\n          >\n            Recurrence\n          </Typography>\n          <Typography\n            component=\"h3\"\n            variant=\"caption\"\n            style={{ color: theme.palette.primary.contrastText }}\n          >\n            You can select the periodicity for the contract execution.\n          </Typography>\n        </DialogTitle>\n        <DialogContent style={{ minHeight: 200 }}>\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\n            <Typography variant=\"subtitle2\">Repeat every</Typography>\n            <TextField\n              margin=\"dense\"\n              variant=\"filled\"\n              fullWidth\n              style={{ flex: 1, minWidth: 120 }}\n              value={fields.every}\n              hiddenLabel\n              onChange={(event) =>\n                handleFieldChange(\"every\", +event.target.value)\n              }\n              disabled={[\n                ECronFieldOption.Year,\n                ECronFieldOption.Custom,\n              ].includes(fields.option)}\n              InputProps={{\n                inputComponent: NumberInput as any,\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"sub 10 quantity\"\n                      onClick={handleEveryIncrement(-1)}\n                      edge=\"start\"\n                      disabled={[\n                        ECronFieldOption.Year,\n                        ECronFieldOption.Custom,\n                      ].includes(fields.option)}\n                    >\n                      <MinusIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"add 10 quantity\"\n                      onClick={handleEveryIncrement(1)}\n                      edge=\"end\"\n                      disabled={[\n                        ECronFieldOption.Year,\n                        ECronFieldOption.Custom,\n                      ].includes(fields.option)}\n                    >\n                      <PlusIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <FormControl\n              variant=\"filled\"\n              fullWidth\n              style={{ flex: 1, minWidth: 90 }}\n              margin=\"dense\"\n              hiddenLabel\n            >\n              <Select value={fields.option} onChange={handleOptionChange}>\n                <MenuItem value={ECronFieldOption.Day}>\n                  {cronFieldOptions[ECronFieldOption.Day]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Week}>\n                  {cronFieldOptions[ECronFieldOption.Week]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Month}>\n                  {cronFieldOptions[ECronFieldOption.Month]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Year}>\n                  {cronFieldOptions[ECronFieldOption.Year]}\n                </MenuItem>\n                <MenuItem value={ECronFieldOption.Custom}>\n                  {cronFieldOptions[ECronFieldOption.Custom]}\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          {fields.option === ECronFieldOption.Week && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Repeat on</Typography>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                }}\n              >\n                {WEEK_LIST.map((week, index) => (\n                  <Chip\n                    key={`cron-week-${index}`}\n                    label={WEEK_LABEL[week]}\n                    size=\"small\"\n                    clickable\n                    color={\n                      fields.weekDays.includes(week) ? \"primary\" : \"default\"\n                    }\n                    onClick={handleWeekDaysChange(week)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n\n          {[ECronFieldOption.Month, ECronFieldOption.Year].includes(\n            fields.option\n          ) && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Repeat on</Typography>\n              </div>\n            </>\n          )}\n\n          {fields.option === ECronFieldOption.Year && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                  flexWrap: \"wrap\",\n                }}\n              >\n                {MONTHS_LIST.map((month, index) => (\n                  <Chip\n                    key={`cron-month-${index}`}\n                    label={MONTHS_LABEL[month]}\n                    size=\"small\"\n                    clickable\n                    color={\n                      fields.months.includes(month) ? \"primary\" : \"default\"\n                    }\n                    onClick={handleMonthsChange(month)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n\n          {[ECronFieldOption.Month, ECronFieldOption.Year].includes(\n            fields.option\n          ) && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 8,\n                  flexWrap: \"wrap\",\n                }}\n              >\n                {Array.from(Array(31).keys()).map((day, index) => (\n                  <Chip\n                    key={`cron-year-${index}`}\n                    label={(day + 1).toString().padStart(2, \"0\")}\n                    size=\"small\"\n                    clickable\n                    color={\n                      fields.monthDays.includes(day + 1) ? \"primary\" : \"default\"\n                    }\n                    onClick={handleMonthDaysChange(day + 1)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n\n          {fields.option !== ECronFieldOption.Custom && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 16,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Repeat at</Typography>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                }}\n              >\n                <FormControl\n                  variant=\"filled\"\n                  style={{ flex: 1, maxWidth: 70 }}\n                  margin=\"dense\"\n                  hiddenLabel\n                >\n                  <Select\n                    value={fields.hour}\n                    onChange={(event) =>\n                      handleFieldChange(\n                        \"hour\",\n                        parseInt(event.target.value as string)\n                      )\n                    }\n                  >\n                    {Array.from(Array(12).keys())\n                      .reverse()\n                      .map((value) => (\n                        <MenuItem value={value + 1}>{value + 1}</MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                <Typography variant=\"subtitle2\">:</Typography>\n                <FormControl\n                  variant=\"filled\"\n                  style={{ flex: 1, maxWidth: 70 }}\n                  margin=\"dense\"\n                  hiddenLabel\n                >\n                  <Select\n                    value={fields.minute}\n                    onChange={(event) =>\n                      handleFieldChange(\n                        \"minute\",\n                        parseInt(event.target.value as string)\n                      )\n                    }\n                  >\n                    {Array.from(Array(60).keys())\n                      .filter((x) => x % 5 === 0)\n                      .map((value) => (\n                        <MenuItem value={value}>\n                          {value.toString().padStart(2, \"0\")}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                <FormControl\n                  variant=\"filled\"\n                  style={{ flex: 1, maxWidth: 70 }}\n                  margin=\"dense\"\n                  hiddenLabel\n                >\n                  <Select\n                    value={fields.midday}\n                    onChange={(event) =>\n                      handleFieldChange(\"midday\", event.target.value as EMidday)\n                    }\n                  >\n                    <MenuItem value={EMidday.AM}>am</MenuItem>\n                    <MenuItem value={EMidday.PM}>pm</MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n            </>\n          )}\n\n          {fields.option === ECronFieldOption.Custom && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  paddingTop: 16,\n                }}\n              >\n                <Typography variant=\"subtitle2\">\n                  Learn more about cron expressions&nbsp;\n                  <Link\n                    component=\"a\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://en.wikipedia.org/wiki/Cron\"\n                  >\n                    here\n                  </Link>\n                </Typography>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                }}\n              >\n                <TextField\n                  margin=\"dense\"\n                  label=\"Expression\"\n                  variant=\"filled\"\n                  fullWidth\n                  style={{ flex: 1, minWidth: 200 }}\n                  onChange={handleExpressionChange}\n                  error={cronError ? true : false}\n                  value={fields.expression}\n                  helperText={cronError ? cronError : fields.description}\n                />\n              </div>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleOkButton} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CronButton;\n","import {\n  Avatar,\n  Box,\n  Grid,\n  LinearProgress,\n  Typography,\n  makeStyles,\n  colors,\n  Button,\n} from \"@material-ui/core\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ReadyIcon from \"@material-ui/icons/CheckCircle\";\nimport useConnector from \"../connect/useConnector\";\nimport useProviders from \"../store/useProviders\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useContracts from \"../contracts/useContracts\";\nimport { BIG_ZERO, executionsLeft } from \"../shared/reduceExecutionsLeft\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.orange[800],\n    height: 56,\n    width: 56,\n  },\n  avatarReady: {\n    backgroundColor: colors.green[800],\n    height: 56,\n    width: 56,\n  },\n}));\n\nenum ETask {\n  PurchaseExecutions = 0,\n  RegisterContracts = 1,\n  ReadyToSchedule = 2,\n}\n\nconst TASKS = [\n  {\n    title: \"You need to purchase executions\",\n    link: \"/store\",\n    linkLabel: \"Purchase executions\",\n  },\n  {\n    title: \"You need to register some contracts\",\n    link: \"/contracts\",\n    linkLabel: \"Register contracts\",\n  },\n  {\n    title: \"You are ready to schedule executions\",\n    link: \"/schedule\",\n    linkLabel: \"Schedule an execution\",\n  },\n];\n\nconst TasksProgress = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const totalTasks = TASKS.length - 1;\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const providers = useProviders((state) => state.providers);\n\n  const networkProviders = Object.entries(providers).filter(\n    ([id, provider]) => provider.network === connectedToNetwork\n  );\n\n  const resultExecutionsLeft = networkProviders.reduce(\n    (accumulated, [id, provider]) => {\n      const providerExecutionsLeft = provider.plans.reduce(\n        executionsLeft,\n        BIG_ZERO\n      );\n\n      return accumulated.add(providerExecutionsLeft);\n    },\n    BIG_ZERO\n  );\n\n  const contracts = useContracts((state) => state.contracts);\n  const networkContracts = Object.entries(contracts).filter(\n    ([id, contract]) => contract.network === connectedToNetwork\n  );\n\n  let currentTask = ETask.ReadyToSchedule;\n  if (resultExecutionsLeft.lte(BIG_ZERO)) {\n    currentTask = ETask.PurchaseExecutions;\n  } else if (networkContracts.length <= 0) {\n    currentTask = ETask.RegisterContracts;\n  }\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" spacing={3}>\n        <Grid item style={{ flex: 1 }}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n            style={{ marginBottom: \"0.35em\" }}\n          >\n            {TASKS[currentTask].title}\n          </Typography>\n          <Button\n            component={RouterLink}\n            to={TASKS[currentTask].link}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {TASKS[currentTask].linkLabel}\n          </Button>\n        </Grid>\n        <Grid item>\n          {currentTask !== totalTasks && (\n            <Avatar className={classes.avatar}>\n              <HelpIcon />\n            </Avatar>\n          )}\n          {currentTask === totalTasks && (\n            <Avatar className={classes.avatarReady}>\n              <ReadyIcon />\n            </Avatar>\n          )}\n        </Grid>\n      </Grid>\n      <Box mt={3}>\n        <LinearProgress\n          value={(currentTask * 100) / totalTasks}\n          variant=\"determinate\"\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default TasksProgress;\n","import \"date-fns\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ColorSelector from \"./ColorSelector\";\nimport useSchedule, { IScheduleItem } from \"./useSchedule\";\nimport useProviders from \"../store/useProviders\";\nimport useContracts from \"../contracts/useContracts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { parseISO, isValid } from \"date-fns\";\nimport hyphensAndCamelCaseToWords from \"../shared/hyphensAndCamelCaseToWords\";\nimport shallow from \"zustand/shallow\";\nimport ButtonWithLoading from \"../shared/ButtonWIthLoading\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport useConnector from \"../connect/useConnector\";\nimport { useSnackbar } from \"notistack\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport {\n  Divider,\n  IconButton,\n  InputAdornment,\n  withStyles,\n} from \"@material-ui/core\";\nimport ScheduleFormDialog, {\n  IScheduleFormDialogAlert,\n} from \"./ScheduleFormDialog\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport NumberInput from \"../shared/NumberInput\";\nimport PlusIcon from \"@material-ui/icons/AddCircleRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircleRounded\";\nimport CronButton from \"./CronButton\";\nimport { DEFAULT_CRON_FIELD } from \"./cronParser/convertToCronExpression\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst DEFAULT_FIELDS: Partial<IScheduleItem> = {\n  cronFields: DEFAULT_CRON_FIELD,\n  cronQuantity: \"0\",\n};\n\nconst ScheduleForm = () => {\n  const classes = useStyles();\n\n  const [fields, setFields] = useState<Partial<IScheduleItem> | null>(\n    DEFAULT_FIELDS\n  );\n  const [alerts, setAlerts] = useState<\n    IScheduleFormDialogAlert[] | undefined\n  >();\n\n  const [cronFieldFocused, setCronFieldFocused] = useState<boolean>(false);\n\n  const [scheduleAndSave, validateSchedule, isLoading] = useSchedule(\n    (state) => [state.scheduleAndSave, state.validateSchedule, state.isLoading],\n    shallow\n  );\n\n  const providers = useProviders((state) => state.providers);\n  const contracts = useContracts((state) => state.contracts);\n  const [account, connectedToNetwork] = useConnector(\n    (state) => [state.account, state.network],\n    shallow\n  );\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleExecuteAtChange = (date: Date | null) => {\n    setFields((values) => ({\n      ...values,\n      executeAt: date && isValid(date) ? date.toISOString() : undefined,\n    }));\n  };\n\n  const handleContractChange = (event: any) => {\n    setFields((values) => ({\n      ...values,\n      contractId: event.target.value,\n      contractMethod: undefined,\n      contractFields: undefined,\n    }));\n  };\n\n  const handleMethodChange = (event: any) => {\n    setFields((values) => ({\n      ...values,\n      contractMethod: event.target.value,\n      contractFields: undefined,\n    }));\n  };\n\n  const handleContractFieldsChange = (index: number) => (event: any) => {\n    setFields((values) => {\n      const newFields = [...(values?.contractFields ?? [])];\n      newFields[index] = event.target.value;\n\n      return { ...values, contractFields: newFields };\n    });\n  };\n\n  const handleFieldChange = (fieldName: string) => (event: any) => {\n    setFields((values) => ({ ...values, [fieldName]: event.target.value }));\n  };\n\n  const handleCronFieldsChange = (event: any) => {\n    const cronFields = event.target.value;\n\n    setFields((values) => ({ ...values, cronFields }));\n  };\n\n  const handleCronQuantityIncrement = (increment: number) => (event: any) => {\n    let quantity =\n      (fields?.cronQuantity ? +fields?.cronQuantity : 0) + increment;\n\n    if (quantity <= 0) quantity = 0;\n\n    setFields((values) => ({ ...values, cronQuantity: quantity.toString() }));\n  };\n\n  const handleIsRecurrentFieldChange = (event: any, checked: boolean) => {\n    setFields((values) => ({\n      ...values,\n      isRecurrent: checked,\n    }));\n  };\n\n  const handleClear = () => {\n    setFields((prev) => ({ ...DEFAULT_FIELDS }));\n  };\n\n  const abi = fields?.contractId\n    ? JSON.parse(contracts[fields.contractId].ABI)\n    : null;\n\n  const contractMethods = abi\n    ? abi.filter((x: any) => x.type === \"function\")\n    : [];\n\n  const contractInputs =\n    abi && fields?.contractMethod\n      ? abi.find(\n          (x: any) => x.type === \"function\" && x.name === fields.contractMethod\n        )?.inputs\n      : undefined;\n\n  const providerPlans =\n    Object.values(providers).find(\n      (provider) => provider.id === fields?.providerId\n    )?.plans ?? [];\n\n  const validateForm = () => {\n    const isValid =\n      fields &&\n      fields.title &&\n      fields.contractId &&\n      fields.contractMethod &&\n      fields.executeAt &&\n      fields.providerId &&\n      fields.providerPlanIndex;\n\n    const isValidRecurrence =\n      fields &&\n      (fields.isRecurrent\n        ? fields.cronFields && +(fields.cronQuantity ?? \"0\") > 0\n        : true);\n\n    let isContractFieldsValid = true;\n    for (let i = 0; contractInputs && i < contractInputs.length; i++) {\n      isContractFieldsValid =\n        fields?.contractFields && fields.contractFields[i] ? true : false;\n\n      if (!isContractFieldsValid) break;\n    }\n\n    return isValid && isValidRecurrence && isContractFieldsValid;\n  };\n\n  const handleSchedule = async () => {\n    const provider = providers[fields?.providerId ?? \"\"];\n\n    const isFormValid = validateForm();\n\n    if (provider && isFormValid) {\n      const scheduleItem = {\n        ...fields,\n        network: connectedToNetwork!,\n      } as IScheduleItem;\n      const selectedContract = contracts[fields!.contractId!];\n\n      const alerts = await validateSchedule(\n        scheduleItem,\n        selectedContract,\n        provider,\n        account!\n      );\n\n      setAlerts(alerts);\n\n      if (alerts.length === 0) {\n        handleScheduleAndSave();\n      }\n    }\n  };\n\n  const handleScheduleAnyway = () => {\n    const provider = providers[fields?.providerId ?? \"\"];\n\n    const isFormValid = validateForm();\n\n    if (provider && isFormValid) {\n      handleScheduleAndSave();\n      setAlerts([]);\n    }\n  };\n\n  const handleScheduleAndSave = () => {\n    const provider = providers[fields?.providerId ?? \"\"];\n\n    const scheduleItem = {\n      ...fields,\n      network: connectedToNetwork!,\n    } as IScheduleItem;\n    const selectedContract = contracts[fields!.contractId!];\n\n    scheduleAndSave(\n      scheduleItem,\n      selectedContract,\n      provider,\n      account!,\n      () =>\n        enqueueSnackbar(\"Schedule confirmed!\", {\n          variant: \"success\",\n        }),\n      (message) =>\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        })\n    )\n      .then(() => {\n        handleClear();\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Something went wrong, please try again.\", {\n          variant: \"warning\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <ScheduleFormDialog\n        alerts={alerts}\n        onClose={() => setAlerts([])}\n        onConfirm={handleScheduleAnyway}\n      />\n      <Card className={classes.root}>\n        <CardHeader title={\"Schedule\"} action={<NetworkLabel />} />\n        <CardContent style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <TextField\n                disabled={isLoading}\n                margin=\"dense\"\n                label=\"Title\"\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                onChange={handleFieldChange(\"title\")}\n                value={fields?.title ? fields.title : \"\"}\n              />\n              <FormControlLabel\n                style={{\n                  marginTop: 8,\n                  marginBottom: 4,\n                }}\n                control={\n                  <Switch\n                    checked={fields?.isRecurrent ? true : false}\n                    onChange={handleIsRecurrentFieldChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Recurrent\"\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <KeyboardDateTimePicker\n                disabled={isLoading}\n                margin=\"dense\"\n                id=\"executeAt\"\n                inputVariant=\"filled\"\n                label={fields?.isRecurrent ? \"Starts At\" : \"Execute At\"}\n                format=\"MM/dd/yyyy HH:mm\"\n                fullWidth={true}\n                style={{ flex: 1, minWidth: 200 }}\n                value={fields?.executeAt ? parseISO(fields.executeAt) : null}\n                onChange={handleExecuteAtChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change execute at\",\n                }}\n              />\n              <CustomTooltip\n                open={cronFieldFocused}\n                title={\n                  fields?.cronFields?.description ??\n                  \"Failed to load the description\"\n                }\n              >\n                <TextField\n                  disabled={isLoading || !fields?.isRecurrent}\n                  margin=\"dense\"\n                  label=\"Recurrence expression\"\n                  variant=\"filled\"\n                  fullWidth\n                  style={{ flex: 1, minWidth: 200 }}\n                  onFocus={() => setCronFieldFocused(true)}\n                  onBlur={() => setCronFieldFocused(false)}\n                  value={fields?.cronFields?.description}\n                  inputProps={{\n                    style: {\n                      textOverflow: \"ellipsis\",\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                    },\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment\n                        position=\"end\"\n                        style={{ paddingRight: 12 }}\n                      >\n                        <CronButton\n                          onChange={handleCronFieldsChange}\n                          value={fields?.cronFields ?? DEFAULT_CRON_FIELD}\n                          disabled={isLoading || !fields?.isRecurrent}\n                        />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </CustomTooltip>\n              <TextField\n                disabled={isLoading || !fields?.isRecurrent}\n                margin=\"dense\"\n                label=\"Executions quantity\"\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                onChange={handleFieldChange(\"cronQuantity\")}\n                value={fields?.cronQuantity ? fields.cronQuantity : \"0\"}\n                InputProps={{\n                  inputComponent: NumberInput as any,\n                  startAdornment: (\n                    <InputAdornment position=\"start\" style={{ paddingLeft: 0 }}>\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"sub 10 quantity\"\n                        onClick={handleCronQuantityIncrement(-10)}\n                        edge=\"start\"\n                        disabled={isLoading || !fields?.isRecurrent}\n                      >\n                        <MinusIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment\n                      position=\"end\"\n                      style={{ paddingRight: 12, marginTop: 16 }}\n                    >\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"add 10 quantity\"\n                        onClick={handleCronQuantityIncrement(10)}\n                        edge=\"end\"\n                        disabled={isLoading || !fields?.isRecurrent}\n                      >\n                        <PlusIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-provider\">Provider</InputLabel>\n                <Select\n                  labelId=\"schedule-provider\"\n                  value={fields?.providerId ? fields.providerId : \"\"}\n                  onChange={handleFieldChange(\"providerId\")}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {Object.entries(providers)\n                    .filter(\n                      ([id, provider]) =>\n                        provider.network === connectedToNetwork\n                    )\n                    .map(([id, provider]) => (\n                      <MenuItem key={`schedule-provider-${id}`} value={id}>\n                        {provider.name}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-provider-plan\">Plan</InputLabel>\n                <Select\n                  labelId=\"schedule-provider-plan\"\n                  value={`${\n                    fields?.providerPlanIndex ? fields.providerPlanIndex : \"\"\n                  }`}\n                  onChange={handleFieldChange(\"providerPlanIndex\")}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {providerPlans.map((plan) => (\n                    <MenuItem\n                      key={`schedule-provider-plan-${fields?.providerId}-${plan.index}`}\n                      value={`${plan.index}`}\n                    >\n                      <span style={{ fontWeight: \"bold\" }}>{`#${\n                        plan.index + 1\n                      }`}</span>\n                      <span\n                        style={{ marginLeft: 8 }}\n                      >{`Window: ${fromBigNumberToHms(\n                        plan.window\n                      )} - Gas limit: ${formatBigNumber(\n                        plan.gasLimit,\n                        0\n                      )}`}</span>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-contract\">Contract</InputLabel>\n                <Select\n                  labelId=\"schedule-contract\"\n                  value={fields?.contractId ? fields.contractId : \"\"}\n                  onChange={handleContractChange}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {Object.entries(contracts)\n                    .filter(\n                      ([id, contract]) =>\n                        contract.network === connectedToNetwork\n                    )\n                    .map(([id, contract]) => (\n                      <MenuItem key={`schedule-contract-${id}`} value={id}>\n                        {contract.name}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                style={{ flex: 1, minWidth: 200 }}\n                margin=\"dense\"\n                disabled={isLoading}\n              >\n                <InputLabel id=\"schedule-contract-method\">Action</InputLabel>\n                <Select\n                  labelId=\"schedule-contract-method\"\n                  value={fields?.contractMethod ? fields.contractMethod : \"\"}\n                  onChange={handleMethodChange}\n                >\n                  <MenuItem disabled>None</MenuItem>\n                  {contractMethods.map((method: any) => (\n                    <MenuItem\n                      key={`contract-method-${method.name}`}\n                      value={method.name}\n                    >\n                      {hyphensAndCamelCaseToWords(method.name)}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                gap: \"4px\",\n                flexDirection: \"column\",\n              }}\n            >\n              {contractInputs && contractInputs.length > 0 && (\n                <Typography\n                  variant=\"caption\"\n                  display=\"block\"\n                  color=\"textSecondary\"\n                  style={{ marginTop: 12 }}\n                >\n                  Action Parameters\n                </Typography>\n              )}\n              {contractInputs &&\n                contractInputs.map(({ name, type }: any, index: number) => (\n                  <TextField\n                    key={`field-${name}-${type}`}\n                    disabled={isLoading}\n                    margin=\"dense\"\n                    label={hyphensAndCamelCaseToWords(name)}\n                    helperText={\n                      type.includes(\"int\")\n                        ? \"Number\"\n                        : hyphensAndCamelCaseToWords(type)\n                    }\n                    variant=\"filled\"\n                    fullWidth\n                    onChange={handleContractFieldsChange(index)}\n                    value={\n                      fields?.contractFields\n                        ? fields?.contractFields[index]\n                        : \"\"\n                    }\n                  />\n                ))}\n            </div>\n          </MuiPickersUtilsProvider>\n        </CardContent>\n        <CardActions\n          style={{ justifyContent: \"space-between\", flexWrap: \"wrap\" }}\n        >\n          <ColorSelector\n            disabled={isLoading}\n            value={fields?.color ? fields.color : \"\"}\n            onChange={handleFieldChange(\"color\")}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Button\n                onClick={handleClear}\n                color=\"inherit\"\n                disabled={isLoading}\n              >\n                Clear\n              </Button>\n            </div>\n            <ButtonWithLoading\n              onClick={handleSchedule}\n              label=\"Schedule\"\n              isLoading={isLoading}\n            />\n          </div>\n        </CardActions>\n      </Card>\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\nexport default ScheduleForm;\n\nconst CustomTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#333\",\n    color: \"rgba(255, 255, 255, 0.87)\",\n    //boxShadow: theme.shadows[1],\n    fontSize: 11,\n    fontWeight: \"bold\",\n    marginTop: 2,\n    padding: 5,\n  },\n}))(Tooltip);\n","import \"date-fns\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\n\nimport History from \"./History\";\nimport ScheduleForm from \"./ScheduleForm\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n  })\n);\n\nconst Schedule = () => {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <ScheduleForm />\n      <div\n        className={classes.root} //marginTop: 15,\n      >\n        <History />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Schedule;\n","import {\n  makeStyles,\n  createStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 10,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor:\n        theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: \"#1a90ff\",\n    },\n  })\n)(LinearProgress);\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 800,\n    marginTop: 2.5,\n    marginBottom: 2.5,\n  },\n});\n\nconst Loading = ({ isLoading }: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {isLoading && <BorderLinearProgress variant=\"indeterminate\" />}\n      {!isLoading && <div style={{ height: 10 }} />}\n    </div>\n  );\n};\n\nexport default Loading;\n","import Chip from '@material-ui/core/Chip';\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { IPlan } from './useProviders';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    purchasing: {\n      color: \"#333\",\n      border: \"1px solid #f7e463\",\n      backgroundColor: \"#f7e463\"\n    },\n    active: {\n        color: \"#333\",\n        border: \"1px solid #7cd992\",\n        backgroundColor: \"#7cd992\"\n    },\n    inactive: {\n        color: \"#333\",\n        border: \"1px solid #a8a8a8\",\n        backgroundColor: \"#a8a8a8\"\n    },\n  })\n);\n\nconst StatusLabel = ({ plan }: { plan: IPlan }) => {\n    const classes = useStyles();\n\n    let label = plan.active ? \"Active\" : \"Inactive\"\n    let classStatus = plan.active ? classes.active : classes.inactive\n\n    if (!plan.isPurchaseConfirmed) {\n        label = \"Waiting confirmation\"\n        classStatus = classes.purchasing\n    }\n\n    return <Chip size=\"small\" color=\"primary\" variant=\"default\" label={label} classes={{\n        colorPrimary: classStatus\n    }} />\n}\n\nexport default StatusLabel","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport CircularProgress, {\n  CircularProgressProps,\n} from \"@material-ui/core/CircularProgress\";\n\nconst useCircleStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n    },\n    bottom: {\n      color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    top: {\n      color: \"#1a90ff\",\n      animationDuration: \"550ms\",\n      position: \"absolute\",\n      left: 0,\n    },\n    circle: {\n      strokeLinecap: \"round\",\n    },\n  })\n);\n\nconst CustomCircularProgress = (props: CircularProgressProps) => {\n  const classes = useCircleStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        className={classes.bottom}\n        size={24}\n        thickness={4}\n        {...props}\n        value={100}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={24}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst LoadingCircle = ({ isLoading }: any) => {\n  return (\n    <>\n      {isLoading && <CustomCircularProgress />}\n      {!isLoading && <div style={{ height: 24 }} />}\n    </>\n  );\n};\n\nexport default LoadingCircle;\n","import { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {\n  withStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport useProviders, { IProvider } from \"./useProviders\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { fromBigNumberToHms, formatBigNumber } from \"../shared/formatters\";\nimport shallow from \"zustand/shallow\";\nimport LoadingCircle from \"../shared/LoadingCircle\";\nimport { useSnackbar } from \"notistack\";\nimport StatusLabel from \"./StatusLabel\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst rowStyles = { display: \"flex\", alignItems: \"center\", gap: \"5px\" };\n\ninterface IPurchaseExecutionsProps {\n  provider: IProvider | null | undefined;\n  planIndex: number | null | undefined;\n  onClose: () => void;\n}\n\nconst PurchaseExecutions = ({\n  provider,\n  planIndex,\n  onClose,\n}: IPurchaseExecutionsProps) => {\n  const open = provider && (planIndex ?? -1) >= 0 ? true : false;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [purchaseExecutions, isLoading] = useProviders(\n    (state) => [state.purchaseExecutions, state.isLoading],\n    shallow\n  );\n\n  const [buyingExecutions, setBuyingExecutions] = useState(0);\n\n  if (!provider || (planIndex ?? -1) < 0) return null;\n\n  const handleBuyClick = (planIndex: number, executionsQuantity: number) => {\n    // TODO: validate purchase fields\n    const isValid = executionsQuantity > 0 ? true : false;\n\n    if (isValid) {\n      purchaseExecutions(\n        provider.id,\n        planIndex,\n        executionsQuantity,\n        () =>\n          enqueueSnackbar(\"Purchase confirmed!\", {\n            variant: \"success\",\n          }),\n        (message) =>\n          enqueueSnackbar(message, {\n            variant: \"error\",\n          })\n      );\n    }\n\n    setBuyingExecutions(0);\n  };\n\n  const plan = provider.plans[planIndex!];\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      maxWidth=\"sm\"\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        disableTypography\n      >\n        <div style={{ display: \"flex\", flex: 1 }}>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <Typography component={\"h2\"} variant=\"h6\">\n              {`Plan #${planIndex! + 1}`}\n            </Typography>\n          </div>\n          <LoadingCircle isLoading={isLoading} />\n          <NetworkLabel />\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <TableContainer\n          component={Paper}\n          elevation={0}\n          style={{ border: `1px solid ${theme.palette.action.hover}` }}\n        >\n          <Table aria-label=\"info table\">\n            <TableBody>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Remaining executions\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  <Typography variant=\"h5\">\n                    {plan.remainingExecutions?.toString()}\n                  </Typography>\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Status\n                </StrongTableCell>\n                <RegularTableCell align=\"right\" style={rowStyles}>\n                  <StatusLabel plan={plan} />\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Window\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  {fromBigNumberToHms(plan.window)}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Gas limit\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  {formatBigNumber(plan.gasLimit, 0)}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Price per execution\n                </StrongTableCell>\n                <RegularTableCell align=\"right\">\n                  {`${formatBigNumber(plan.pricePerExecution, plan.decimals)} ${\n                    plan.symbol\n                  }`}\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Quantity to purchase\n                </StrongTableCell>\n                <RegularTableCell\n                  align=\"right\"\n                  style={{ width: 200, paddingRight: 23 }}\n                >\n                  <Slider\n                    disabled={\n                      isLoading || !plan.isPurchaseConfirmed || !plan.active\n                    }\n                    value={buyingExecutions}\n                    aria-labelledby=\"executionsQuantitySlider\"\n                    step={10}\n                    valueLabelDisplay=\"auto\"\n                    onChange={(event, value: number | number[]) => {\n                      setBuyingExecutions(value as number);\n                    }}\n                    marks={[\n                      {\n                        value: 0,\n                        label: \"0\",\n                      },\n                      {\n                        value: 20,\n                        label: \"20\",\n                      },\n                      {\n                        value: 50,\n                        label: \"50\",\n                      },\n                      {\n                        value: 100,\n                        label: \"100\",\n                      },\n                    ]}\n                  />\n                </RegularTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StrongTableCell component=\"th\" scope=\"row\">\n                  Total\n                </StrongTableCell>\n                <BigTableCell align=\"right\">\n                  {`${formatBigNumber(\n                    plan.pricePerExecution.mul(buyingExecutions),\n                    plan.decimals\n                  )}`}\n\n                  {` ${plan.symbol}`}\n                </BigTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions\n        style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n      >\n        <Button\n          color=\"inherit\"\n          disabled={isLoading}\n          onClick={() => {\n            setBuyingExecutions(0);\n            onClose();\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          disabled={\n            isLoading ||\n            !plan.isPurchaseConfirmed ||\n            !plan.active ||\n            buyingExecutions === 0\n          }\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => handleBuyClick(planIndex!, buyingExecutions)}\n        >\n          {plan.isPurchaseConfirmed ? \"Buy\" : \"Waiting confirmation\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PurchaseExecutions;\n\nconst RegularTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      borderBottom: \"none\",\n    },\n  })\n)(TableCell);\n\nconst BigTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: \"1rem\",\n      fontWeight: \"bold\",\n      borderBottom: \"none\",\n    },\n  })\n)(TableCell);\n\nconst StrongTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      borderBottom: \"none\",\n      maxWidth: 60,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n","import { BigNumber } from \"ethers\";\nimport { IPlan } from \"../store/useProviders\";\n\nexport const BIG_ZERO = BigNumber.from(0);\n\nexport const executionsLeft = (\n  accumulatedPlans: BigNumber | undefined,\n  currentPlan: IPlan\n) => {\n  const accumulated = accumulatedPlans ?? BIG_ZERO;\n\n  return accumulated.add(currentPlan.remainingExecutions ?? BIG_ZERO);\n};\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Card from \"@material-ui/core/Card\";\nimport Divider from \"@material-ui/core/Divider\";\nimport useProviders, { IPlan, IProvider } from \"../store/useProviders\";\nimport React, { useState } from \"react\";\nimport useConnector from \"../connect/useConnector\";\nimport StatusLabel from \"./StatusLabel\";\nimport { Hidden } from \"@material-ui/core\";\nimport { formatBigNumber, fromBigNumberToHms } from \"../shared/formatters\";\nimport PurchaseExecutions from \"./PurchaseExecutions\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport PurchaseIcon from \"@material-ui/icons/AddCircle\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { executionsLeft, BIG_ZERO } from \"../shared/reduceExecutionsLeft\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      padding: 5,\n      gap: \"5px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    expanderHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      display: \"block\",\n    },\n    expanderSecondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    expanderRoot: {\n      margin: 0,\n      \"&:before\": {\n        content: \"none\",\n      },\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst useRowStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    part: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    row: {\n      borderLeft: `rgba(0, 0, 0, 0.12) 4px solid`,\n      borderBottom: `rgba(0, 0, 0, 0.12) 1px solid`,\n      borderRadius: 15,\n    },\n  })\n);\n\nconst Item: React.FC<{\n  item: IPlan;\n  onClick?: (index: number) => void;\n}> = ({ item, onClick }) => {\n  const classes = useRowStyles();\n\n  const handleItemClick = () => {\n    if (onClick) onClick(item.index);\n  };\n\n  return (\n    <ListItem button className={classes.row} onClick={handleItemClick}>\n      <div\n        className={classes.part}\n        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <ListItemText\n          className={classes.part}\n          primary={`#${item.index + 1}`}\n          secondary={`${\n            item.remainingExecutions?.toString() ?? 0\n          } executions left`}\n        />\n        <div style={{ paddingLeft: 16, paddingRight: 16 }}>\n          <StatusLabel plan={item} />\n        </div>\n      </div>\n      <Hidden xsDown>\n        <Divider orientation=\"vertical\" style={{ marginRight: 16 }} flexItem />\n        <ListItemText\n          primary={`Window: ${fromBigNumberToHms(item.window)}`}\n          secondary={`Gas limit: ${formatBigNumber(item.gasLimit, 0)}`}\n          className={classes.part}\n        />\n      </Hidden>\n      <ListItemSecondaryAction>\n        <PurchaseIcon style={{ color: \"rgba(0, 0, 0, 0.12)\" }} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst Providers = () => {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = useState<string | false>(false);\n\n  const handleExpandChange =\n    (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n  const [selectedPlan, setSelectedPlan] = useState<{\n    provider: IProvider;\n    planIndex: number;\n  } | null>(null);\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const providers = useProviders((state) => state.providers);\n\n  const networkProviders = Object.entries(providers).filter(\n    ([id, provider]) => provider.network === connectedToNetwork\n  );\n\n  return (\n    <>\n      <PurchaseExecutions\n        provider={selectedPlan?.provider}\n        planIndex={selectedPlan?.planIndex}\n        onClose={() => setSelectedPlan(null)}\n      />\n      <Card style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }}>\n        {networkProviders.map(([id, provider], index) => (\n          <React.Fragment key={`provider-expander-${id}`}>\n            <Accordion\n              expanded={networkProviders.length === 1 || expanded === id}\n              onChange={handleExpandChange(id)}\n              elevation={0}\n              className={classes.expanderRoot}\n            >\n              <AccordionSummary\n                expandIcon={\n                  networkProviders.length > 1 ? <ExpandMoreIcon /> : undefined\n                }\n                aria-controls={`accordion-content-${id}`}\n                id={`accordion-header-${id}`}\n              >\n                <div style={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      flex: 1,\n                    }}\n                  >\n                    <Typography className={classes.expanderHeading}>\n                      {provider.name}\n                    </Typography>\n                    <Typography className={classes.expanderSecondaryHeading}>\n                      {`${formatBigNumber(\n                        provider.plans.reduce(executionsLeft, BIG_ZERO),\n                        0\n                      )} executions left`}\n                    </Typography>\n                  </div>\n                  {networkProviders.length > 1 && (\n                    <Chip\n                      size=\"small\"\n                      label={expanded === id ? \"Show less\" : \"Show more\"}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  )}\n                </div>\n              </AccordionSummary>\n              <AccordionDetails style={{ padding: 0 }}>\n                <List className={classes.root}>\n                  {provider.plans.map((item) => (\n                    <Item\n                      key={`plan-item-${item.index}`}\n                      item={item}\n                      onClick={(value) =>\n                        setSelectedPlan({ provider, planIndex: value })\n                      }\n                    />\n                  ))}\n                </List>\n              </AccordionDetails>\n            </Accordion>\n            {index !== networkProviders.length - 1 && (\n              <Divider className={classes.divider} />\n            )}\n          </React.Fragment>\n        ))}\n      </Card>\n    </>\n  );\n};\n\nexport default Providers;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useProviders from \"./useProviders\";\nimport Loading from \"../shared/Loading\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport { Divider } from \"@material-ui/core\";\nimport Providers from \"./Providers\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    }\n  })\n);\n\nconst Store = () => {\n  const classes = useStyles();\n\n  const isLoading = useProviders(\n    (state) => state.isLoading\n  );\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"Store\" />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Here you can purchase executions.\n          </Typography>\n        </CardContent>\n      </Card>\n      <Divider className={classes.divider} />\n\n      <div\n        className={classes.root}\n        style={{\n          //marginTop: 15,\n        }}\n      >\n        <Providers />\n      </div>\n\n      <Loading isLoading={isLoading} />\n    </Layout>\n  );\n};\n\nexport default Store;\n","import { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useContracts, { IContract } from \"./useContracts\";\nimport useConnector from \"../connect/useConnector\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport { ENetwork } from \"../shared/types\";\n\nconst AddEditContract = ({\n  hideButton = false,\n  initialFields = null,\n  onClose,\n}: {\n  onClose?: () => void;\n  hideButton?: boolean;\n  initialFields?: IContract | null;\n}) => {\n  const [open, setOpen] = useState(initialFields ? true : false);\n  const [fields, setFields] = useState<Partial<IContract> | null>(\n    initialFields\n  );\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const save = useContracts((state) => state.save);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setFields(null);\n    setOpen(false);\n\n    if (onClose) onClose();\n  };\n\n  const handleFillExample = () => {\n    const address = \"0x4050C33e00AAF070A4001AcbfD29778986D4A4f9\";\n\n    setFields({\n      id: `${connectedToNetwork}-${address}`,\n      name: \"Counter Example\",\n      address: address,\n      ABI: JSON.stringify(\n        [\n          {\n            anonymous: false,\n            inputs: [\n              {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"count\",\n                type: \"uint256\",\n              },\n            ],\n            name: \"Counted\",\n            type: \"event\",\n          },\n          {\n            inputs: [],\n            name: \"count\",\n            outputs: [\n              {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n              },\n            ],\n            stateMutability: \"view\",\n            type: \"function\",\n          },\n          {\n            inputs: [],\n            name: \"inc\",\n            outputs: [],\n            stateMutability: \"payable\",\n            type: \"function\",\n          },\n          {\n            inputs: [],\n            name: \"fail\",\n            outputs: [],\n            stateMutability: \"pure\",\n            type: \"function\",\n          },\n        ],\n        null,\n        2\n      ),\n    });\n  };\n\n  const handleSave = () => {\n    // TODO: validate contract fields\n    const isValid = fields && fields.ABI && fields.address && fields.name;\n\n    if (isValid) {\n      save({\n        ...(fields as IContract),\n        network: connectedToNetwork!,\n        id: fields?.id ?? `${connectedToNetwork}-${fields?.address}`,\n      });\n\n      setFields(null);\n      setOpen(false);\n      if (onClose) onClose();\n    }\n  };\n\n  const handleFieldChange = (fieldName: string) => (event: any) => {\n    setFields((values) => ({ ...values, [fieldName]: event.target.value }));\n  };\n\n  return (\n    <>\n      {!hideButton && (\n        <Button\n          aria-label=\"add contract\"\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"small\"\n          endIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Register\n        </Button>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <div style={{ display: \"flex\", flex: 1 }}>\n              {fields?.id ? \"Edit contract\" : \"Register new contract\"}\n            </div>\n            <NetworkLabel />\n          </div>\n        </DialogTitle>\n        <DialogContent key={`add-edit-contract-${fields?.id}`}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Name\"\n            helperText=\"Give your contract a name to make it easier to identify. Only for display purposes.\"\n            variant=\"filled\"\n            fullWidth\n            onChange={handleFieldChange(\"name\")}\n            value={fields?.name}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Address\"\n            helperText=\"Add your contract address\"\n            variant=\"filled\"\n            fullWidth\n            onChange={handleFieldChange(\"address\")}\n            value={fields?.address}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"ABI\"\n            helperText=\"Paste your contract's ABI code here to be able to schedule its execution later.\"\n            variant=\"filled\"\n            fullWidth\n            multiline\n            rows={8}\n            onChange={handleFieldChange(\"ABI\")}\n            value={fields?.ABI}\n          />\n        </DialogContent>\n        <DialogActions\n          style={{ paddingLeft: 24, paddingRight: 24, paddingTop: 24 }}\n        >\n          {connectedToNetwork === ENetwork.RSKTestnet && (\n            <div style={{ display: \"flex\", flex: 1 }}>\n              <Button onClick={handleFillExample} color=\"secondary\">\n                Fill example\n              </Button>\n            </div>\n          )}\n          <Button onClick={handleClose} color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AddEditContract;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { CardActions } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      marginTop: 15,\n    },\n  })\n);\n\nconst StoragePersistAlert = () => {\n  const classes = useStyles();\n\n  const isPersistStorageAvailable =\n    navigator.storage && (navigator.storage.persist as any) ? true : false;\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [enableClicked, setEnableClicked] = useState(false);\n\n  useEffect(() => {\n    const action = async () => {\n      if (!isPersistStorageAvailable) return;\n\n      const isPersisted = await navigator.storage.persisted();\n\n      if (!isPersisted) {\n        setShowAlert(true);\n      }\n    };\n\n    action();\n  }, [isPersistStorageAvailable]);\n\n  const handleEnable = async () => {\n    setEnableClicked(true);\n    const isPersisted = await navigator.storage.persist();\n    localStorage.setItem(\"STORAGE_PERSIST_HANDLED\", \"YES\");\n    setShowAlert(!isPersisted);\n  };\n\n  return (\n    <>\n      {showAlert && !localStorage.getItem(\"STORAGE_PERSIST_HANDLED\") && (\n        <Card className={classes.root}>\n          <CardHeader title={\"Persist Storage\"} />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a decentralized web application which means your data is\n              only saved in this browser, so we recommend enabling persistent\n              storage to prevent your data from being deleted automatically by\n              your browser.\n            </Typography>\n          </CardContent>\n          <CardActions style={{ justifyContent: \"flex-end\" }}>\n            <Button\n              onClick={handleEnable}\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={enableClicked}\n            >\n              Enable\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default StoragePersistAlert;\n","export default __webpack_public_path__ + \"static/media/contractBolt.5c67e21c.svg\";","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddEditContract from \"./AddEditContract\";\nimport useContracts, { IContract } from \"./useContracts\";\nimport { useState } from \"react\";\nimport { CardActionArea, Divider } from \"@material-ui/core\";\nimport StoragePersistAlert from \"./StoragePersistAlert\";\nimport contractSvg from \"../assets/illustrations/contractBolt.svg\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport shortText from \"../shared/shortText\";\nimport useConnector from \"../connect/useConnector\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst Contracts = () => {\n  const classes = useStyles();\n\n  const contracts = useContracts((state) => state.contracts);\n\n  const [editing, setEditing] = useState<IContract | null>(null);\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const networkContracts = Object.entries(contracts).filter(\n    ([id, contract]) => contract.network === connectedToNetwork\n  );\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"Contracts\" />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Register your contracts here to be able to schedule their execution\n            later.\n          </Typography>\n        </CardContent>\n        <CardActions style={{ padding: 16, paddingTop: 0 }}>\n          <AddEditContract />\n        </CardActions>\n      </Card>\n      <Divider className={classes.divider} />\n\n      <StoragePersistAlert />\n\n      <AddEditContract\n        key={`edit-contract-${editing?.id}`}\n        hideButton={true}\n        initialFields={editing}\n        onClose={() => setEditing(null)}\n      />\n\n      <div\n        style={{\n          marginTop: 15,\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gridAutoRows: \"120px\",\n          gridGap: \"5px\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          maxWidth: 800,\n        }}\n      >\n        {networkContracts.map(([id, contract]) => (\n          <ContractButton\n            key={`contract-list-${id}`}\n            name={contract.name}\n            address={contract.address}\n            onClick={() => setEditing(contract)}\n          />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nconst ContractButton = ({\n  name,\n  address,\n  onClick,\n}: {\n  name: string;\n  address: string;\n  onClick: any;\n}) => {\n  return (\n    <Card>\n      <CardActionArea\n        style={{\n          height: \"100%\",\n          background: `url(${contractSvg}) no-repeat`,\n          backgroundPosition: \"right -50px top -20px\",\n          backgroundSize: \"140px 140px\",\n        }}\n        onClick={onClick}\n      >\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {shortText(address)}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default Contracts;\n","export default __webpack_public_path__ + \"static/media/lock.4473d54d.svg\";","import { useCallback, useEffect } from \"react\";\nimport useConnector from \"./useConnector\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Loading from \"../shared/Loading\";\nimport shallow from \"zustand/shallow\";\nimport { isRLoginConnected, rLogin } from \"./rLogin\";\nimport Button from '@material-ui/core/Button';\nimport lockSvg from \"../assets/illustrations/lock.svg\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst Connect = () => {\n  const classes = useStyles();\n\n  const [connect, disconnect, isLoading] = useConnector(\n    (state) => [state.connect, state.disconnect, state.isLoading],\n    shallow\n  );\n\n  const handleConnect = useCallback(async () => {\n    try {\n      const wait = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n      const timeout = (p: Promise<any>, ms: number) => Promise.race([p, wait(ms).then(() => {\n          throw new Error(\"Timeout after \" + ms + \" ms\");\n      })]);\n\n      const { provider, disconnect } = await timeout(rLogin.connect(), 3000);\n      \n      connect(provider, disconnect);\n    } catch (error) {\n      console.error(\"handleConnect error:\", error)\n      disconnect()\n    }\n  }, [connect, disconnect]);\n\n  useEffect(() => {\n    if (isRLoginConnected()) {\n      handleConnect()\n    }\n  }, [handleConnect])\n\n  return (\n    <Layout hideMenu>\n      {!isLoading && (\n        <Card className={classes.root} style={{\n          height: \"100%\",\n          backgroundImage: `url(${lockSvg})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"right -60px top -20px\",\n          backgroundSize: \"160px 160px\",\n        }}>\n          <CardHeader title=\"Wallet connection\" />\n          <CardContent>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n              Let's connect your wallet to start scheduling executions.\n            </Typography>\n            <div\n              style={{\n                display: \"flex\",\n                // justifyContent: \"center\",\n                marginTop: 24,\n              }}\n            >\n              <Button variant=\"contained\" color=\"primary\" onClick={handleConnect}>\n                Connect now!\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      <Loading isLoading={isLoading} />\n    </Layout>\n  );\n};\n\nexport default Connect;\n","import useConnector from \"./useConnector\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport shallow from \"zustand/shallow\";\nimport {\n  CardContent,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport AccountIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport DisconnectIcon from \"@material-ui/icons/ExitToApp\";\nimport { useSnackbar } from \"notistack\";\nimport shortText from \"../shared/shortText\";\nimport Hidden from '@material-ui/core/Hidden';\nimport NetworkLabel from \"./NetworkLabel\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n    },\n    overflowEllipsis: {\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n    },\n  })\n);\n\nconst Account = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [account, disconnect] = useConnector(\n    (state) => [state.account, state.disconnect],\n    shallow\n  );\n\n  const handleAccountClick = () => {\n    if (!navigator?.clipboard) {\n      enqueueSnackbar(\"Your browser can't access the clipboard\", {\n        variant: \"error\",\n      });\n      return;\n    }\n\n    navigator.clipboard.writeText(account!);\n    enqueueSnackbar(\"Copied!\");\n  };\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"Account\" />\n        <CardContent style={{ padding: 0 }}>\n          <List className={classes.root}>\n            <ListItem button onClick={handleAccountClick}>\n              <ListItemIcon>\n                <AccountIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={\"Wallet\"}\n                secondary={\n                  <>\n                    <Hidden smUp>{shortText(account!)}</Hidden>\n                    <Hidden xsDown>{account}</Hidden>\n                  </>\n                }\n                title={account}\n                classes={{ secondary: classes.overflowEllipsis }}\n              />\n            </ListItem>\n            <Divider />\n            <ListItem button onClick={disconnect}>\n              <ListItemIcon>\n                <DisconnectIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Disconnect\"} />\n            </ListItem>\n          </List>\n        </CardContent>\n      </Card>\n    </Layout>\n  );\n};\n\nexport default Account;\n","import { RIFScheduler } from \"@rsksmart/rif-scheduler-sdk\";\nimport { useEffect } from \"react\";\nimport useConnector from \"../connect/useConnector\";\nimport environment from \"../shared/environment\";\nimport { ENetwork } from \"../shared/types\";\nimport useProviders, { IProvider } from \"./useProviders\";\n\nconst useProvidersLoader = () => {\n  const [isConnected, isLoading, signer] = useConnector((state) => [\n    state.isConnected,\n    state.isLoading,\n    state.signer,\n  ]);\n\n  const loadProviders = useProviders((state) => state.load);\n\n  useEffect(() => {\n    if (!isConnected || isLoading || !signer) return;\n\n    const providers: IProvider[] = [];\n\n    environment.SCHEDULER_PROVIDERS.forEach((address, index) => {\n      providers.push({\n        id: `${ENetwork.RSKTestnet}-${address}`,\n        name: `RIF Provider #${index + 1}`,\n        network: ENetwork.RSKTestnet,\n        address,\n        contractInstance: new RIFScheduler(address, signer as any, {\n          supportedER677Tokens: environment.ER677_TOKENS,\n        }),\n        plans: [],\n      });\n    });\n\n    if (providers.length > 0) loadProviders(providers);\n  }, [isConnected, isLoading, loadProviders, signer]);\n};\n\nexport default useProvidersLoader;\n","\nconst UnsupportedNetwork = (props: any) => {\n  return (\n    <svg\n      data-name=\"Layer 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={790}\n      height={512.208}\n      viewBox=\"0 0 790 512.208\"\n      {...props}\n    >\n      <path\n        d=\"M720.563 510.693L698 442.603s24.818 24.817 24.818 45.181l-4.454-47.09s12.727 17.18 11.454 43.272-9.255 26.727-9.255 26.727zM236.02 448.693L214 382.24s24.222 24.222 24.222 44.096l-4.348-45.96s12.421 16.77 11.18 42.233-9.033 26.085-9.033 26.085z\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M579.726 479.359c.037 43.715-86.665 30.268-192.81 30.36s-191.535 13.686-191.573-30.028 86.633-53.298 192.777-53.39 191.568 9.343 191.606 53.058z\"\n        fill=\"#e6e6e6\"\n      />\n      <path fill=\"#3f3d56\" d=\"M0 509.693h790v2H0z\" />\n      <path\n        fill=\"#a0616a\"\n        d=\"M505.336 420.322h-13.877l-6.604-53.525h20.481v53.525z\"\n      />\n      <path\n        d=\"M480.006 416.357h28.304v16.851h-43.613v-1.541a15.31 15.31 0 0115.309-15.31z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        fill=\"#a0616a\"\n        d=\"M607.336 499.322h-13.877l-6.604-53.525h20.481v53.525z\"\n      />\n      <path\n        d=\"M582.006 495.357h28.304v16.851h-43.613v-1.541a15.31 15.31 0 0115.309-15.31z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M671.345 340.309a10.316 10.316 0 00-2.896-15.551l-32.23-131.293-20.608 8.867 38.336 126.949a10.372 10.372 0 0017.398 11.028zM646.208 74.964a11.382 11.382 0 00-17.416 1.152l-49.885 5.727 7.589 19.242 45.367-8.491a11.444 11.444 0 0014.345-17.63z\"\n        fill=\"#a0616a\"\n      />\n      <path\n        d=\"M564 326.693l21.768 163.374 27.093-5.578s-3.984-118.981 9.563-133.325S605 311.694 605 311.694z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M573 281.693l-10 15s-77-32-77 19-4.406 85.61-6 88 18.438 8.594 28 7c0 0 11.797-82.219 11-87 0 0 75.534 37.033 89.877 33.846S626.61 343.068 629 336.693s-1-57-1-57l-47.81-14.59z\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M574.35 191.633l-2.851-3.42s-31.924-71.829-19.382-91.211 67.267-22.233 68.977-21.093-4.084 15.943-.094 22.784c0 0-42.394 9.191-45.244 10.331s21.966 43.274 21.966 43.274l-2.85 25.653z\"\n        fill=\"#ccc\"\n      />\n      <path\n        d=\"M630.215 156.289s-29.643 3.42-30.783 3.42-1.71-7.41-1.71-7.41l-26.223 35.913S558.579 292.403 562 290.693s66.505 8.112 67.075 3.551-.57-27.363 1.14-28.503 29.644-71.828 29.644-71.828-2.85-14.822-12.542-19.952-17.102-17.672-17.102-17.672z\"\n        fill=\"#ccc\"\n      />\n      <path\n        d=\"M650.738 184.222l9.12 9.69s13.553 111.36 6.142 114.781-22 3-22 3L629.645 258.9z\"\n        fill=\"#ccc\"\n      />\n      <circle cx={601.73} cy={122.998} r={26.239} fill=\"#a0616a\" />\n      <path\n        d=\"M595.573 127.092c-.355-5.445-7.223-5.631-12.68-5.683s-11.977.144-15.065-4.355c-2.04-2.973-1.65-7.1.035-10.288s4.458-5.639 7.186-7.997c7.041-6.09 14.298-12.13 22.752-16.027s18.36-5.472 27.128-2.343c10.77 3.843 25.329 23.625 26.586 34.991s-3.285 22.953-10.942 31.446-25.182 5.067-36.21 8.088c6.704-9.49 2.285-26.732-8.456-31.164z\"\n        fill=\"#2f2e41\"\n      />\n      <circle cx={361.722} cy={403.505} r={62.989} fill=\"#008cff\" />\n      <path\n        d=\"M319.656 336.04a45.16 45.16 0 01-41.255-26.787L178.449 84.162a59.83 59.83 0 11111.87-41.865l72.377 235.412a45.08 45.08 0 01-43.04 58.33z\"\n        fill=\"#008cff\"\n      />\n    </svg>\n  )\n}\n\nexport default UnsupportedNetwork\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useConnector from \"./useConnector\";\nimport { ENetwork, SupportedNetworks } from \"../shared/types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NetworkLabel from \"./NetworkLabel\";\nimport UnsupportedNetwork from \"../assets/illustrations/UnsupportedNetwork\";\n\nconst UnsupportedNetworkAlert = () => {\n    const theme = useTheme();\n\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const [connectedToNetwork, isConnected] = useConnector(state => [state.network, state.isConnected]) \n\n    const open = isConnected && !SupportedNetworks.includes(connectedToNetwork ?? ENetwork.NotSupported)\n\n    return (\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        open={open}\n      >\n        <DialogTitle>\n          Unsupported network\n        </DialogTitle>\n        <DialogContent>\n          <div style={{display:\"flex\", flex:1}}>\n            <UnsupportedNetwork style={{height:200, padding:16}} />\n          </div>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            You are connected to an incorrect network.\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            Please change your wallet to one of the following networks:\n          </Typography>\n          <div style={{display:\"flex\", gap: \"5px\", marginTop: 24, marginBottom: 16}}>\n            {SupportedNetworks.map((network) =>\n              <NetworkLabel key={`supported-network-${network}`} network={network} />\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n    );\n}\n\nexport default UnsupportedNetworkAlert","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport ContractsIcon from \"@material-ui/icons/OfflineBolt\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useContracts from \"../contracts/useContracts\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Contracts = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const contracts = useContracts((state) => state.contracts);\n\n  const networkContracts = Object.entries(contracts).filter(\n    ([id, contract]) => contract.network === connectedToNetwork\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              REGISTERED CONTRACTS\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {networkContracts.length}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/contracts\">\n              Go to contracts &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ContractsIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Contracts;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport useConnector from \"../connect/useConnector\";\nimport { formatBigNumber } from \"../shared/formatters\";\nimport useProviders from \"../store/useProviders\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { BIG_ZERO, executionsLeft } from \"../shared/reduceExecutionsLeft\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Executions = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const providers = useProviders((state) => state.providers);\n\n  const networkProviders = Object.entries(providers).filter(\n    ([id, provider]) => provider.network === connectedToNetwork\n  );\n\n  const executionsLeftResult = networkProviders.reduce(\n    (accumulated, [id, provider]) => {\n      const providerExecutionsLeft = provider.plans.reduce(\n        executionsLeft,\n        BIG_ZERO\n      );\n\n      return accumulated.add(providerExecutionsLeft);\n    },\n    BIG_ZERO\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              REMAINING EXECUTIONS\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {formatBigNumber(executionsLeftResult, 0)}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/store\">\n              Go to store &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <StoreIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Executions;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport ScheduleIcon from \"@material-ui/icons/EventAvailable\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useSchedule from \"../schedule/useSchedule\";\nimport { ExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Schedule = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const scheduledExecutions = useSchedule((state) => state.scheduleItems);\n\n  const networkScheduledExecutions = Object.entries(scheduledExecutions).filter(\n    ([id, execution]) =>\n      execution.network === connectedToNetwork &&\n      execution.state === ExecutionState.Scheduled\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              SCHEDULED EXECUTIONS\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {networkScheduledExecutions.length}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/schedule\">\n              Go to schedule &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ScheduleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Schedule;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Link,\n} from \"@material-ui/core\";\nimport ScheduleIcon from \"@material-ui/icons/Timeline\";\nimport useConnector from \"../connect/useConnector\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useSchedule from \"../schedule/useSchedule\";\nimport { ExecutionState } from \"@rsksmart/rif-scheduler-sdk\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n  },\n  avatar: {\n    backgroundColor: colors.blueGrey[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst ScheduleHistory = ({ className, ...rest }: any) => {\n  const classes = useStyles();\n\n  const connectedToNetwork = useConnector((state) => state.network);\n\n  const scheduledExecutions = useSchedule((state) => state.scheduleItems);\n\n  const networkScheduledExecutions = Object.entries(scheduledExecutions).filter(\n    ([id, execution]) =>\n      execution.network === connectedToNetwork &&\n      execution.state !== ExecutionState.Nonexistent\n  );\n\n  return (\n    <Card className={[classes.root, className].join(\" \")} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item style={{ flex: 1 }}>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              EXECUTIONS TOTAL\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {networkScheduledExecutions.length}\n            </Typography>\n            <Link component={RouterLink} color=\"textSecondary\" to=\"/schedule\">\n              Go to schedule &rsaquo;\n            </Link>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ScheduleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ScheduleHistory;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Layout from \"../shared/Layout\";\nimport Contracts from \"./Contracts\";\nimport Executions from \"./Executions\";\nimport Schedule from \"./Schedule\";\nimport ScheduleHistory from \"./ScheduleHistory\";\nimport TasksProgress from \"./TasksProgress\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport NetworkLabel from \"../connect/NetworkLabel\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      width: \"100%\",\n      maxWidth: 800,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    divider: {\n      width: \"100%\",\n      maxWidth: 800,\n    },\n  })\n);\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <Card className={classes.root}>\n        <CardHeader action={<NetworkLabel />} title=\"WHAT'S NEXT?\" />\n        <CardContent>\n          <TasksProgress />\n        </CardContent>\n      </Card>\n      <Divider className={classes.divider} />\n      <div\n        style={{\n          marginTop: 15,\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 2fr))\",\n          gridAutoRows: \"180px\",\n          gridGap: \"5px\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          maxWidth: 800,\n        }}\n      >\n        <Executions />\n        <Contracts />\n        <Schedule />\n        <ScheduleHistory />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import { useRef } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./assets/theme\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport Schedule from \"./schedule/Schedule\";\nimport Store from \"./store/Store\";\nimport Contracts from \"./contracts/Contracts\";\nimport Connect from \"./connect/Connect\";\nimport useConnector from \"./connect/useConnector\";\nimport Account from \"./connect/Account\";\nimport useProvidersLoader from \"./store/useProvidersLoader\";\nimport UnsupportedNetworkAlert from \"./connect/UnsupportedNetworkAlert\";\nimport Home from \"./home/Home\";\n\nfunction App() {\n  const isConnected = useConnector((state) => state.isConnected);\n\n  useProvidersLoader();\n\n  const notistackRef = useRef<any>(null);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider\n        maxSnack={2}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={1000}\n        ref={notistackRef}\n      >\n        <UnsupportedNetworkAlert />\n        <Router>\n          {!isConnected && <PublicRoutes />}\n          {isConnected && <ConnectedRoutes />}\n        </Router>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n}\n\nconst PublicRoutes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/connect\">\n        <Connect />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to=\"/connect\" />\n      </Route>\n    </Switch>\n  );\n};\n\nconst ConnectedRoutes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/schedule\">\n        <Schedule />\n      </Route>\n      <Route exact path=\"/store\">\n        <Store />\n      </Route>\n      <Route exact path=\"/contracts\">\n        <Contracts />\n      </Route>\n      <Route exact path=\"/account\">\n        <Account />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}